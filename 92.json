{"response_code":"00","response_msg":"Berhasil mendapatkan materi kelas","materi_kelas":{"id":10,"uuid":"2ba3c21a-ce5b-4edf-9dd9-9a40b89f1b2a","kategori_kelas_id":15,"versi":"1.0.0","created_by":11253,"updated_by":11253,"created_at":"2020-12-06 13:50:56","updated_at":null},"section":[{"id":59,"uuid":"17164049-cfeb-47f0-ace8-1b4f372a3427","materi_id":10,"nama":"Materi Pekan 1","permalink":"materi-pekan-1","urutan":1,"created_by":11253,"updated_by":11253,"created_at":"2020-12-06 13:51:13","updated_at":"2020-12-08 20:13:07","posting":[{"id":173,"uuid":"3a0617d9-ffff-47ce-9c24-52d678a8b933","author_user_id":11253,"materi_section_id":59,"judul":"Pengenalan Python & JSON","permalink":"pengenalan-python-json","konten":"<p><!-- wp:paragraph --><\/p>\r\n<!-- wp:paragraph -->\r\n<p><img class=\"wp-image-12648\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/title_1_1-1024x192.png\" alt=\"\" \/><\/p>\r\n<!-- \/wp:paragraph --><!-- wp:image {\"align\":\"center\",\"id\":12648,\"sizeSlug\":\"large\"} --><!-- \/wp:image --><!-- wp:paragraph -->\r\n<p>Pada kesempatan kali ini kita akan membahas dua topik yang akan menjadi dasar dari pembahasan kedepannya. Sebuah komplemen yang akan membantu kode dan pengambilan data kita untuk menjadi lebih baik yaitu OOP dan JSON.<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:spacer {\"height\":50} -->\r\n<div class=\"wp-block-spacer\" style=\"height: 50px;\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<!-- \/wp:spacer --><!-- wp:heading -->\r\n<h2>Object Oriented Programming<\/h2>\r\n<!-- \/wp:heading --><!-- wp:paragraph -->\r\n<p>Terdapat dua macam paradigma dalam programming, yaitu Struktural Programming dan Object Oriented Programming. Paradigma disini adalah dasar\/cara berpikir saat seseorang melakukan pemograman. Struktural adalah paradigma dimana program\/kode yang kita buat berjalan sesuai dengan urutan yang sudah ditentukan, pada umumnya menggunakan if-else looping. Ini akan menjadi cukup memusingkan saat kita akan membuat sebuah program yang kompleks. Sedangkan, Object Oriented Programming (OOP) adalah suatu paradigma dimana kode kita dikumpulkan\/dimisalkan menjadi sebuah objek. Contoh paling mudah adalah jika kita ingin membuat sebuah program tentang rumah, maka rumah itu kita misalkan objek yang tentu saja objek tersebut memiliki karakteristik tersendiri, misalkan warna, lokasi, dan harga. Saat kita akan butuh data karakteristik(instance) yang dibutuhkan maka kita tinggal melakukan pemanggilan.<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\r\n<p>Python sendiri merupakan bahasa pemograman yang dapat menggunakan konsep OOP tapi juga dapat mengimplementasikan konsep Structural Programming.<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:heading {\"level\":4} -->\r\n<h4>Istilah &ndash; Istilah Dalam OOP<\/h4>\r\n<!-- \/wp:heading --><!-- wp:paragraph -->\r\n<p>Beberapa istilah utama yang terdapat pada OOP diantaranya :<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:list -->\r\n<ul>\r\n<li><strong>Kelas<\/strong>&nbsp;&ndash; Kelas adalah cetak biru atau prototipe dari objek dimana kita mendefinisikan atribut dari suatu objek. Atribut ini terdiri dari data member (variabel) dan fungsi (metode).<\/li>\r\n<li><strong>Variabel Kelas<\/strong>&nbsp;&ndash; Variabel kelas adalah variabel yang di<em>share<\/em>&nbsp;atau dibagi oleh semua instance (turunan) dari kelas. Variabel kelas didefinisikan di dalam kelas, tapi di luar metode-metode yang ada dalam kelas tersebut.<\/li>\r\n<li><strong>Data member<\/strong>&nbsp;&ndash; Data member adalah variabel yang menyimpan data yang berhubungan dengan kelas dan objeknya<\/li>\r\n<li><strong>Overloading Fungsi<\/strong>&nbsp;&ndash; Overloading fungsi adalah fungsi yang memiliki nama yang sama di dalam kelas, tapi dengan jumlah dan tipe argumen yang berbeda sehingga dapat melakukan beberapa hal yang berbeda.<\/li>\r\n<li><strong>Overloading operator<\/strong>&nbsp;&ndash; Overloading operator adalah pembuatan beberapa fungsi atau kegunaan untuk suatu operator. Misalnya operator + dibuat tidak hanya untuk penjumlahan, tapi juga untuk fungsi lain.<\/li>\r\n<li><strong>Variabel instance<\/strong> &ndash; Variabel instance adalah variabel yang didefinisikan di dalam suatu metode dan hanya menjadi milik dari instance kelas.<\/li>\r\n<li><strong>Pewarisan\/Inheritansi<\/strong>&nbsp;&ndash; Inheritansi adalah pewarisan karakteristik sebuah kelas ke kelas lain yang menjadi turunannya.<\/li>\r\n<li><em><strong>Instance<\/strong><\/em>&nbsp;&ndash;&nbsp;<em>Instance<\/em>&nbsp;adalah istilah lain dari objek suatu kelas. Sebuah objek yang dibuat dari prototipe kelas Lingkaran misalnya disebut sebagai instance dari kelas tersebut.<\/li>\r\n<li><strong>Instansiasi<\/strong>&nbsp;&ndash; Instansiasi adalah pembuatan instance\/objek dari suatu kelas<\/li>\r\n<li><strong>Metode<\/strong>&nbsp;&ndash; Metode adalah fungsi yang didefinisikan di dalam suatu kelas<\/li>\r\n<li><strong>Objek<\/strong>&nbsp;&ndash; Objek adalah instansiasi atau perwujudan dari sebuah kelas. Bila kelas adalah prototipenya, dan objek adalah barang jadinya.<\/li>\r\n<\/ul>\r\n<!-- \/wp:list --><!-- wp:spacer {\"height\":61} -->\r\n<div class=\"wp-block-spacer\" style=\"height: 61px;\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<!-- \/wp:spacer --><!-- wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:heading {\"level\":3} -->\r\n<h3>Mendefinisikan Class<\/h3>\r\n<!-- \/wp:heading --><!-- wp:paragraph -->\r\n<p>Mendefiniskan class sangat mudah, secara sederhana dapat kita tuliskan seperti.<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>class mobil:\r\n    pass<\/code><\/pre>\r\n<!-- \/wp:code --><!-- wp:paragraph -->\r\n<p>Seperti definisinya, class diatas akan menjadi cetak biru dari objek\/instance yang akan masukkan pada tahap selanjutnya. Lalu kita inisiasikan objek dari <em>class<\/em> yang telah kita buat.<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>mobil1 = mobil()\r\nmobil2 = mobil()<\/code><\/pre>\r\n<!-- \/wp:code --><!-- wp:paragraph -->\r\n<p>Kode diatas artinya objek mobil1 dan mobil2 memakai <em>class<\/em> mobil sebagai cetak biru untuk objek tersebut. Artinya semua variabel, atau metode nantinya akan mengikuti <em>class<\/em> mobil. Sekarang kita akan masukan atribut\/variabel dalam objek yang kita buat. kita akan masukkan jenis dan warna dari objek tersebut.<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>mobil1.jenis = \"Sedan\"\r\nmobil1.warna = \"Merah\"\r\n\r\nmobil2.jenis = \"SUV\"\r\nmobil2.warna = \"Hitam\"<\/code><\/pre>\r\n<!-- \/wp:code --><!-- wp:paragraph -->\r\n<p>Jika kita menggunakan metode print() untuk melihat atribut dan objek yang telah kita buat maka kita akan mendapatkan<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>print(mobil1)\r\nprint(mobil1.jenis)\r\nprint(mobil1.__dict__)\r\n\r\n#&lt;__main__.mobil object at 0x011D36D0&gt;\r\n#Sedan\r\n#{'jenis': 'Sedan', 'warna': 'Merah'}<\/code><\/pre>\r\n<!-- \/wp:code --><!-- wp:paragraph -->\r\n<p>Pada hasil pertama kita diperlihatkan bahwa mobil satu merupakan sebuah objek. Pada hasil kedua kita diperlihatkan bahwa atribut jenis pada objek mobil1 bernilai \"sedan\". Pada hasil terakhir kita ingin melihat atribut apa saja yang dimiliki oleh objek tersebut.<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:spacer {\"height\":61} -->\r\n<div class=\"wp-block-spacer\" style=\"height: 61px;\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<!-- \/wp:spacer --><!-- wp:heading {\"level\":3} -->\r\n<h3>Mendefinisikan Metode<\/h3>\r\n<!-- \/wp:heading --><!-- wp:paragraph -->\r\n<p>Metode pertama yang akan kita kenal adalah metode init. Seperti namanya Metode ini digunakan sebagai inisiasi <em>class<\/em> yang kita jalankan jadi saat kita memanggil <em>class<\/em> tersebut sebagai sebuah objek maka metode ini akan dijalankan terlebih dahulu.<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>class mobil:\r\n    def __init__(self):\r\n        print(\"ini mobil saya\")\r\n\r\nmobil1 = mobil()\r\n\r\n#ini mobil saya<\/code><\/pre>\r\n<!-- \/wp:code --><!-- wp:paragraph -->\r\n<p>Seperti yang terlihat, saat kita menginisiasi pembuatan objek mobil1 maka dengan otomatis print(\"ini mobil saya\") terjalankan. Jadi apa gunanya hal ini? dengan melakukan ini maka kita bisa lebih menyederhanakan kode yang kita tulis sehingga lebih mudah dibaca. Kita akan coba masukkan atribut jenis dan warna pada fungsi init tersebut.<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>class mobil:\r\n    def __init__(self, jenis, warna):\r\n        self.jenis = jenis\r\n        self.warna = warna\r\n\r\nmobil1 = mobil('Sedan', 'Merah')\r\nmobil2 = mobil('SUV', 'Hitam')<\/code><\/pre>\r\n<!-- \/wp:code --><!-- wp:paragraph -->\r\n<p>Dan jika kita print maka akan menghasilkan,<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>print(mobil1.__dict__)\r\nprint(mobil2.__dict__)\r\n\r\n#{'jenis': 'Sedan', 'warna': 'Merah'}\r\n#{'jenis': 'SUV', 'warna': 'Hitam'}<\/code><\/pre>\r\n<!-- \/wp:code --><!-- wp:paragraph -->\r\n<p>Kesederhaan ini akan lebih terlihat lagi jika apa yang kita lakukan menjadi lebih rumit sehingga membutuhkan banyak sekali atribut maka kita hanya membutuhkan satu baris saja untuk menginisiasi sebuah objek.<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:heading {\"level\":4} -->\r\n<h4>Atribut Kelas vs Atribut Objek<\/h4>\r\n<!-- \/wp:heading --><!-- wp:paragraph -->\r\n<p>Atribut yang kita buat sebelumnya adalah atribut objek, apa maksudnya? Maksudnya adalah atribut tersebut hanya menjadi miliki objek yang didefinisikan. Misal untuk mobil1 jenisnya adalah sedan sedangkan untuk mobil2 jenisnya adalah SUV. Atribut kelas adalah atribut yang menjadi milik si <em>class<\/em> tersebut artinya nilainya akan sama untuk semua metode di dalam <em>class <\/em>tersebut.<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>class mobil:\r\n    benda = 'Mobil'\r\n\r\n    def __init__(self, jenis, warna):\r\n        self.jenis = jenis\r\n        self.warna = warna\r\n\r\nmobil1 = mobil('Sedan', 'Merah')\r\nmobil2 = mobil('SUV', 'Hitam')\r\n\r\nprint(mobil1.benda)\r\nprint(mobil2.benda)\r\n\r\n#Mobil\r\n#Mobil<\/code><\/pre>\r\n<!-- \/wp:code --><!-- wp:heading {\"level\":4} -->\r\n<h4>Metode Objek<\/h4>\r\n<!-- \/wp:heading --><!-- wp:paragraph -->\r\n<p>Sebuah <em>class<\/em> memliki metode didalamnya yang dapat kita variasikan fungsinya tidak seperti metode init. Kalau kita menggunakan pemisalan sederhana, Jika objek yang kita maksudkan adalah kalkulator maka yang termasuk ke dalam metode yang dimaksud adalah operasi tambah, kurang, bagi, dan kali. Sekarang kita akan mencoba membuat metode pada <em>class<\/em> mobil sebelumnya.<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>class mobil:\r\n\r\n    def __init__(self, jenis, warna, tangki):\r\n        self.jenis = jenis\r\n        self.warna = warna\r\n        self.tangki = tangki\r\n    \r\n    def data_mobil(self):\r\n        print(\"mobil saya berjenis\",self.jenis,\"dan memiliki warna\",self.warna,\"serta memiliki ukuran tangki\",self.tangki,\"L\")<\/code><\/pre>\r\n<!-- \/wp:code --><!-- wp:paragraph -->\r\n<p>Lalu kita lakukan inisiasi dan pemanggilan maka akan menghasilkan,<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>mobil1 = mobil('Sedan', 'Merah', 40)\r\n\r\nmobil1.data_mobil()\r\n\r\n#mobil saya berjenis Sedan dan memiliki warna Merah serta memiliki ukuran tangki 40 L<\/code><\/pre>\r\n<!-- \/wp:code --><!-- wp:paragraph -->\r\n<p>Metode diatas adalah contoh metode yang tanpa argumen, sehingga saat melakukan pemanggilan kita tidak perlu mengisikan argumen ke dalam kurung. Selain metode tersebut, ada juga metode dengan argumen yang akan kita contohkan dengan membuat sebuah fungsi untuk menghitung sisa tangki dari jarak tempuhnya. Sekarang mari kita buat atribut baru, yaitu efisiensi. Efisiensi disini adalah berapa liter bensin yang hilang untuk 10 km.<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>class mobil:\r\n\r\n    def __init__(self, jenis, warna, tangki, efisiensi):\r\n        self.jenis = jenis\r\n        self.warna = warna\r\n        self.tangki = tangki\r\n        self.efisiensi = efisiensi<\/code><\/pre>\r\n<!-- \/wp:code --><!-- wp:paragraph -->\r\n<p>Lalu kita buat fungsi untuk menghitung sisa bensin pada tangki<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>def sisa_bensin(self,jarak):\r\n        sisa = self.tangki - ((jarak\/10)*self.efisiensi)\r\n        return print(\"sisa bensin adalah\",sisa)<\/code><\/pre>\r\n<!-- \/wp:code --><!-- wp:paragraph -->\r\n<p>Lalu kita panggil metode tersebut, karena pada fungsinya kita dapat melihat bahwa dibutuhkan argumen jarak maka pemanggilan metodenya akan sedikit berbeda dengan memasukkan satu argumen jarak dalam kilometer.<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>mobil1 = mobil('Sedan', 'Merah', 40, 4)\r\n\r\nmobil1.sisa_bensin(20)\r\n\r\n#sisa bensin adalah 32.0<\/code><\/pre>\r\n<!-- \/wp:code --><!-- wp:paragraph -->\r\n<p>Sampai sini kalian sudah bisa mengenal OOP dan memuat <em>class<\/em> sederhana. dengan memanfaatkan atribut\/variabel dan metode\/fungsi yang sesuai. Kita akan mencoba untuk mengaplikasikan hal tersebut pada materi-materi kita kedepannya.<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:spacer {\"height\":50} -->\r\n<div class=\"wp-block-spacer\" style=\"height: 50px;\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<!-- \/wp:spacer --><!-- wp:heading -->\r\n<h2>JSON<\/h2>\r\n<!-- \/wp:heading --><!-- wp:paragraph -->\r\n<p>JSON adalah singkatan dari <strong>J<\/strong>ava <strong>S<\/strong>cript <strong>O<\/strong>bject <strong>N<\/strong>otation, sebuah format penyimpanan yang ideal untuk data berstruktur hirarki. JSON. Pada python JSON memiliki kemiripan dengan <em>dictionary<\/em> karena memiliki dua parameter utama, yaitu <em>key <\/em>dan <em>value<\/em>.<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\r\n<p>Struktur dari object JSON adalah<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:list -->\r\n<ul>\r\n<li>Data berbentuk pasangan <em>key\/value<\/em> dengan menggunakan titik dua (:)<\/li>\r\n<li>Setiap object data dipisahkan dengan koma<\/li>\r\n<li>Seluruh object disimpan dalam kurung {}<\/li>\r\n<li>Jika <em>value<\/em> mengandung array, maka dapat menggunakan kurung []<\/li>\r\n<li>Semua element data ditutup dengan \"\" bila string dan tanpa itu bila numerik<\/li>\r\n<\/ul>\r\n<!-- \/wp:list --><!-- wp:paragraph -->\r\n<p>Contoh penggunaannya:<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code> { \"nama\":\"Budi\" }<\/code><\/pre>\r\n<!-- \/wp:code --><!-- wp:paragraph -->\r\n<p>Contoh bila terdapat banyak data:<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>{ \"nama\":\"Budi\", \"usia\":24, \"kota\":\"Bandung\" }<\/code><\/pre>\r\n<!-- \/wp:code --><!-- wp:paragraph -->\r\n<p>Contoh bila pada nilai berbentuk array:<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>{\"Karyawan\":[\r\n    { \"Nama Depan\":\"Budi\", \"Nama Belakang\":\"Kusuma\" },\r\n    { \"Nama Depan\":\"Susi\", \"Nama Belakang\":\"Miranti\" }\r\n]}<\/code><\/pre>\r\n<!-- \/wp:code --><!-- wp:paragraph -->\r\n<p>JSON sendiri dapat menyimpan berbagai macam tipe data, diantaranya:<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:list -->\r\n<ul>\r\n<li>strings<\/li>\r\n<li>numbers<\/li>\r\n<li>objects (<code>JSON<\/code>&nbsp;object)<\/li>\r\n<li>arrays<\/li>\r\n<li>booleans (TRUE \/ FALSE)<\/li>\r\n<li>null<\/li>\r\n<\/ul>\r\n<!-- \/wp:list --><!-- wp:spacer {\"height\":60} -->\r\n<div class=\"wp-block-spacer\" style=\"height: 60px;\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<!-- \/wp:spacer --><!-- wp:heading {\"level\":3} -->\r\n<h3>JSON &amp; Python<\/h3>\r\n<!-- \/wp:heading --><!-- wp:paragraph -->\r\n<p>Kita dapat mengkonversikan <em>dictionary<\/em> pada Python menjadi JSON object dengan library JSON yang ada di python. Pertama yang kita lakukan adalah dengan <em>import<\/em> library yang kita butuhkan.<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>import json<\/code><\/pre>\r\n<!-- \/wp:code --><!-- wp:paragraph -->\r\n<p>Kita inisiasikan data <em>dictionary <\/em> kita,<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>data = {}\r\ndata['nama'] = 'Budi'\r\ndata['usia'] = 24\r\ndata['kota'] = 'Bandung\r\n\r\nprint (data)\r\n\r\n##{'nama': 'Budi', 'usia': 24, 'kota': 'Bandung'}\r\n<\/code><\/pre>\r\n<!-- \/wp:code --><!-- wp:paragraph -->\r\n<p>Data tersebut dapat kita simpan dalam file berformat JSON dengan memanfaatkan fungsi json.dump()<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>with open(\"data_file.json\", \"w\") as write_file:\r\n  json.dump(data, write_file)<\/code><\/pre>\r\n<!-- \/wp:code --><!-- wp:paragraph -->\r\n<p>Jika kita masih ingin menggunakan data json tersebut dalam pekerjaan maka kita dapat menggunakan json.dumps()<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>json_data = json.dumps(data, ensure_ascii=False)\r\n\r\nprint(json_data)\r\n\r\n##'{'nama': 'Budi', 'usia': 24, 'kota': 'Bandung'}'<\/code><\/pre>\r\n<!-- \/wp:code --><!-- wp:paragraph -->\r\n<p>Melihat ada perbedaan? ketika yang satu menggunakan dump dan satu lagi menggunakan dumps. Ini bukanlah salah ketik, akan tetapi kedua fungsi tersebut memang memiliki tugas yang berbeda. Json.dump digunakan untuk menyimpan file dalam format JSON sedangkan json.dumps digunakan untuk mengkonversi data menjadi berbentuk JSON.<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:spacer {\"height\":30} -->\r\n<div class=\"wp-block-spacer\" style=\"height: 30px;\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<!-- \/wp:spacer --><!-- wp:heading {\"level\":4} -->\r\n<h4>JSON &amp; CSV<\/h4>\r\n<!-- \/wp:heading --><!-- wp:paragraph -->\r\n<p>Pada kesempatan kali ini kita akan mencoba untuk mengkonversikan data pada file csv ke json. Data yang akan digunakan adalah data pada file dibawah. pertama kita akan melakukan pembacaan data pada python.<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:file {\"id\":9603,\"href\":\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/data_siswa.csv\"} -->\r\n<div class=\"wp-block-file\"><a href=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/data_siswa.csv\">data_siswa<\/a><a class=\"wp-block-file__button\" href=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/data_siswa.csv\" download=\"\">Unduh<\/a><\/div>\r\n<!-- \/wp:file --><!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>csv_file = open(\"data_siswa.csv\")\r\ndata = csv.reader(csv_file, delimiter=',')\r\n\r\n#atau bisa menggunakan\r\n\r\nwith open('data_siswa') as csv_file:\r\n    csv_reader = csv.reader(csv_file, delimiter=\",\")<\/code><\/pre>\r\n<!-- \/wp:code --><!-- wp:paragraph -->\r\n<p>Jika kita print maka akan menghasilkan,<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>print(data)\r\n#&lt;_csv.reader object at 0x02A80DB0&gt;<\/code><\/pre>\r\n<!-- \/wp:code --><!-- wp:paragraph -->\r\n<p>ternyata data tersebut berbentuk objek, dan untuk kali ini agar dapat melihat data di dalam objek tersebut kita akan menggunakan perulangan.<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>for baris in data:\r\n  print (baris)\r\n\r\n# ['No', 'Nama', 'kelas', 'nilai']\r\n# ['1', 'Budi', '11A', '8']\r\n# ['2', 'Sinta', '11A', '9']<\/code><\/pre>\r\n<!-- \/wp:code --><!-- wp:spacer {\"height\":30} -->\r\n<div class=\"wp-block-spacer\" style=\"height: 30px;\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<!-- \/wp:spacer --><!-- wp:heading {\"level\":4} -->\r\n<h4>Membaca file JSON<\/h4>\r\n<!-- \/wp:heading --><!-- wp:paragraph -->\r\n<p>Sekarang kita akan mencoba membaca file json menggunakan python. Kita akan menggunakan file yang disediakan di bawah untuk kegiatan kali ini.<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\r\n<p><a href=\"https:\/\/drive.google.com\/file\/d\/1Cx38claLP92b300q2OsFRftArqjBzggA\/view?usp=sharing\" target=\"_blank\" rel=\"noreferrer noopener\">Link Data<\/a><\/p>\r\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\r\n<p>Untuk melakukan pembacaan kita akan memanfaatkan fungsi json.load()<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>import json\r\n\r\nwith open('country.json') as f:\r\n  data = json.load(f)\r\n<\/code><\/pre>\r\n<!-- \/wp:code --><!-- wp:paragraph -->\r\n<p>Jika kita melakukan print maka akan keluar hasil,<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>[{'Country': 'Antarctica', 'Slug': 'antarctica', 'ISO2': 'AQ'}, {'Country': 'Malawi', 'Slug': 'malawi', 'ISO2': 'MW'}]<\/code><\/pre>\r\n<!-- \/wp:code --><!-- wp:paragraph -->\r\n<p>Misalkan kita hanya ingin mengambil nilai 'Antartika', maka kita harus sedikit menelaad posisi data tersebut. Data terluar berada dalam sebuah list dimana negara antartika berada pada urutan pertama. Lalu kita lihat lagi, nilai 'antartika' berada pada kunci 'Country'. Maka jika kita coba tuliskan,<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>print (data[0])\r\nprint (data[0]['Country'])<\/code><\/pre>\r\n<!-- \/wp:code --><!-- wp:paragraph -->\r\n<p>Dan akan menghasilkan,<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>#{'Country': 'Antarctica', 'Slug': 'antarctica', 'ISO2': 'AQ'}\r\n#Antartica<\/code><\/pre>\r\n<!-- \/wp:code --><!-- wp:paragraph -->\r\n<p><br \/>Jadi sangat mudah untuk bisa mengkonversi data <em>dictionary<\/em> python kedalam JSON. Kenapa ini penting? karena format JSON adalah format yang biasanya dipakai untuk transfer informasi antar mesin atau bahasa. Ini akan sangat berguna salah satunya yang ingin mentransfer data dari <em>backend <\/em>ke <em>frontend <\/em>untuk seorang web developer.<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:spacer {\"height\":61} -->\r\n<div class=\"wp-block-spacer\" style=\"height: 61px;\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<!-- \/wp:spacer --><!-- wp:heading {\"level\":3} -->\r\n<h3>Sumber Eksternal<\/h3>\r\n<!-- \/wp:heading --><!-- wp:paragraph -->\r\n<p><a href=\"https:\/\/medium.com\/@denihhandoko\/object-oriented-programming-oop-dengan-python-3-9a618df7429e\">https:\/\/medium.com\/@denihhandoko\/object-oriented-programming-oop-dengan-python-3-9a618df7429e<\/a><\/p>\r\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\r\n<p><a href=\"https:\/\/www.json.org\/json-id.html\" target=\"_blank\" rel=\"noreferrer noopener\">JSON<\/a><br \/><a href=\"https:\/\/jogjaweb.co.id\/blog\/pengertian-dan-kegunaan-json\" target=\"_blank\" rel=\"noreferrer noopener\">Pengenalan JSON - Jogjaweb<\/a><\/p>\r\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\r\n<p><a href=\"https:\/\/www.youtube.com\/watch?v=EluVFXu4GOU\" target=\"_blank\" rel=\"noreferrer noopener\">Apa itu JSON - Web Programming UNPAS<\/a><\/p>\r\n<!-- \/wp:paragraph --><!-- wp:paragraph --><!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-02-15 08:00:00","status_publish":"publish","urutan":1,"created_by":11253,"updated_by":11253,"created_at":"2020-12-06 13:55:29","updated_at":"2021-02-11 13:17:52","waktu_publish_formatted":" Senin, 15 Februari 2021. 08:00:00 WIB."},{"id":180,"uuid":"ea8025f9-74d6-4bb6-9208-39fa2f36f7a5","author_user_id":11253,"materi_section_id":59,"judul":"Working with Excel","permalink":"working-with-excel","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p><img class=\"wp-image-11408\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/09\/title_2_1-1024x192.png\" alt=\"\" \/><\/p>\r\n<p><!-- \/wp:image --><!-- wp:paragraph --><\/p>\r\n<p>Xls merupakan salah satu format penyimpanan populer yang banyak digunakan oleh perusahaan ataupun amatir. Kemudahan yang dirasakan oleh user saat penggunaan menggunakan perangkat lunak yang berafiliasi menjadi alasan utama populernya format ini. Karena hal tersebut kemampuan untuk bisa menangani format xls menjadi nilai lebih bagi para developer python.<\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:paragraph --><\/p>\r\n<p>Python sendiri memiliki banyak sekali library yang berhubungan dengan kegiatan manipulasi data xls, diantaranya:<\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:list --><\/p>\r\n<ul>\r\n<li>Xlsxwriter<\/li>\r\n<li>xlrd<\/li>\r\n<li>xlwings<\/li>\r\n<li>xlwt<\/li>\r\n<li>pyexcel, dan<\/li>\r\n<li>openpyxl<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --><!-- wp:paragraph --><\/p>\r\n<p>Pada kesempatan kali ini kita akan library openpyxl beserta penggunaannya.<\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:spacer {\"height\":38} --><\/p>\r\n<div class=\"wp-block-spacer\" style=\"height: 38px;\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --><!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Openpyxl<\/h3>\r\n<p><!-- \/wp:heading --><!-- wp:paragraph --><\/p>\r\n<p>Openpyxl adalah library python yang digunakan untuk melakukan baca\/tulis file Excel 2010 baik itu format xlsx atau lainnya. Openpyxl memiliki basis awal dari PHPExcel.<\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:paragraph --><\/p>\r\n<p>Meinstall library openpyxl sangatlah mudah, kita bisa memanfaatkan pip disini,<\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>pip install openpyxl<\/code><\/pre>\r\n<p><!-- \/wp:code --><!-- wp:spacer {\"height\":35} --><\/p>\r\n<div class=\"wp-block-spacer\" style=\"height: 35px;\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --><!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Manipulasi workbook<\/h4>\r\n<p><!-- \/wp:heading --><!-- wp:paragraph --><\/p>\r\n<p>import library openpyxl lalu import class workbook dari library openpyxl<\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from openpyxl import Workbook\r\n\r\nwb = Workbook()\r\nws = wb.active<\/code><\/pre>\r\n<p><!-- \/wp:code --><!-- wp:paragraph --><\/p>\r\n<p>wb.active digunakan untuk memastikan bahwa kita bekerja pada workbook yang sedang aktif (default = 0). Untuk menambahkan sheet yang kita inginkan kita bisa menggunakan <em>wb.create_sheet()<\/em>. Jika kita memiliki nama sheet yang sama, maka sistem akan melakukan penambahan index secara otomatis. Secara default sheet yang kita tambahkan akan ditambahkan ke akhir list. Tambahkan parameter 0 untuk menambahkan sheet ke awal dan -1 untuk menambahkan sheet ke urutan kedua dari akhir.<\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>ws1 = wb.create_sheet(\"kerja\")\r\nws2 = wb.create_sheet(\"kerja\", 0)\r\nws3 = wb.create_sheet(\"kerja\", -1)\r\n\r\nprint(wb.sheetnames)<\/code><\/pre>\r\n<p><!-- \/wp:code --><!-- wp:paragraph --><\/p>\r\n<p>untuk melakukan melihat semua nama sheet yang ditambahkan kita bisa melakukan print(wb.sheetnames) dan akan mendapatkan hasil,<\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>['kerja1', 'Sheet', 'kerja2', 'kerja']<\/code><\/pre>\r\n<p><!-- \/wp:code --><!-- wp:paragraph --><\/p>\r\n<p>kita dapat mengganti namanya secara manual dengan menggunakan .title . Misalkan kita ingin mengganti nama dari sheet 2, maka yang kita lakukan<\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>ws.title = 'kerjabaru'<\/code><\/pre>\r\n<p><!-- \/wp:code --><!-- wp:paragraph --><\/p>\r\n<p>dan jika kita print ulang akan mendapatkan hasil,<\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>['kerja1', 'kerjabaru', 'kerja2', 'kerja']<\/code><\/pre>\r\n<p><!-- \/wp:code --><!-- wp:paragraph --><\/p>\r\n<p>Setelah memberikan nama pada sheetmu, kamu bisa melakukan akses langsung dengan menggunakan nama tersebut.<\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>workaktif = wb['kerjabaru']\r\nprint (workaktif)\r\n\r\n#&lt;Worksheet \"kerjabaru\"&gt;<\/code><\/pre>\r\n<p><!-- \/wp:code --><!-- wp:paragraph --><\/p>\r\n<p>Kita bisa melakukan penyimpanan dengan menggunakan<\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>wb.save('namafile.xlsx')<\/code><\/pre>\r\n<p><!-- \/wp:code --><!-- wp:spacer {\"height\":33} --><\/p>\r\n<div class=\"wp-block-spacer\" style=\"height: 33px;\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --><!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Manipulasi Sel<\/h4>\r\n<p><!-- \/wp:heading --><!-- wp:paragraph --><\/p>\r\n<p>Untuk mengakses sel terdapat dua cara, yang pertama adalah akses langsung dengan menggunakan nama selnya atau dengan menggunakan index.<\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>ws['B4'] = 4\r\n#atau\r\nws.cell(row=4, column=2).value = 4<\/code><\/pre>\r\n<p><!-- \/wp:code --><!-- wp:paragraph --><\/p>\r\n<p>untuk melakukan akses banyak sel kita bisa memanfaatkan for loop. misalkan kita punya sebuah list a dan ingin kita masukkan pertama pada baris pertama dan kedua pada kolom pertama.<\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>a = ['aku', 'suka', 'makan', 'bakso']\r\n\r\nfor row in range(0,len(a)):\r\n    ws.cell(row=row+1, column=1).value= a[row]\r\n\r\nfor column in range(0,len(a)):\r\n    ws.cell(row=1, column=column+1).value= a[column]<\/code><\/pre>\r\n<p><!-- \/wp:code --><!-- wp:paragraph --><\/p>\r\n<p>row + 1 dan column +1 digunakan karena baris dan kolom tidak bisa dimulai dari 0.<\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:paragraph --><\/p>\r\n<p>Jika kita memiliki data ke dalam banyak baris dan kolom kita bisa mengubahnya ke dalam bentuk matriks (list dalam list) lalu kita manfaatkan fungsi append. Misalkan kita mempunyai data list makanan terhadapat hari dan ingin memasukkan pada bari dan kolom excel maka yang kita lakukan adalah,<\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>menu = [['hari'],['senin', 'nasi', 'ayam'],['selasa', 'susu'],['rabu','nasi goreng', 'ati ampela', 'jus apel'],['kamis','capcay','telur mata sapi']]\r\nfor item in menu:\r\n    ws.append(item)<\/code><\/pre>\r\n<p><!-- \/wp:code --><!-- wp:spacer {\"height\":34} --><\/p>\r\n<div class=\"wp-block-spacer\" style=\"height: 34px;\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --><!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Membaca Excel<\/h4>\r\n<p><!-- \/wp:heading --><!-- wp:paragraph --><\/p>\r\n<p>Pada kesempatan kali ini kita akan mencoba untuk melakukan penulisan dan pembacaan file excel yang berasal dari basis data sqlite. Untuk melakukan pembacaan data pada file excel, kita bisa memanfaatkan modul load_workbook pada library openpyxl.<\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from openpyxl import load_workbook\r\n\r\ndata = load_workbook(filename=\"namafile.xlsx\")<\/code><\/pre>\r\n<p><!-- \/wp:code --><!-- wp:paragraph --><\/p>\r\n<p>Kode di atas akan membuka file namafile.xlsx. Beberapa fungsi yang kita jalankan saat akan menulis data pada excel bisa kita jalankan juga pada bagian ini untuk mengecek data kita.<\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>print(data.sheetnames)\r\nsheet = data.actve\r\nprint(sheet)<\/code><\/pre>\r\n<p><!-- \/wp:code --><!-- wp:paragraph --><\/p>\r\n<p>data.sheetnames akan memberikan kita nama-nama dari worksheet yang dimiliki oleh file tersebut. Untuk memasangkan variabel pada sheet active kita bisa menggunakan data.active atau gunakan sheet['namasheet'] untuk menginisiasi.<\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>print(sheet[\"A1\"])\r\n#&lt;Cell 'Sheet'.A1&gt;\r\n\r\nprint(sheet[\"A1\"].value)\r\n#'First Name'<\/code><\/pre>\r\n<p><!-- \/wp:code --><!-- wp:paragraph --><\/p>\r\n<p>print(sheet[\"A1\"]) digunakan untuk mengecek sel kita, dan print(sheet[\"A1\"].value) digunakan untuk mengambil nilai dari sel yang kita pilih. selain menggunakan cara di atas kita juga bisa menggunakan .cell() untuk melakukan pengambilan data.<\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>sheet.cell(row=1, column=1)\r\n#&lt;Cell 'Sheet1'.A1&gt;\r\n\r\n&gt;&gt;&gt; sheet.cell(row=1, column=1).value\r\n#'First Name'<\/code><\/pre>\r\n<p><!-- \/wp:code --><!-- wp:paragraph --><\/p>\r\n<p>Untuk menggunakan mengambil data dalam range maka kita bisa menggunakan query,<\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>sheet[\"A3:D4\"]\r\nsheet[\"A\"]\r\nsheet[1]\r\nsheet[\"A:B\"]\r\nsheet[1:4]<\/code><\/pre>\r\n<p><!-- \/wp:code --><!-- wp:list --><\/p>\r\n<ul>\r\n<li>sheet[\"A3:D4\"] akan mengambil data pada kota di dalam A3 sampai D4<\/li>\r\n<li>sheet[\"A\"] akan mengambil semua data pada kolom A<\/li>\r\n<li>sheet[1] akan mengambil semua data pada baris pertama<\/li>\r\n<li>sheet[\"A:B\"] akan mengambil semua data pada kolom A sampai kolom B<\/li>\r\n<li>sheet[1:4] akan mengambil semua data pada baris pertama sampai bari keempat.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --><!-- wp:paragraph --><\/p>\r\n<p>Selain menggunakan cara di atas untuk melakukan banyak pengambilan kita dapat memanfaatkan iter_rows() dan iter_cols()<\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>#digunakan untuk mengambil semua kolom dengan range disebutkan\r\nsheet.iter_cols(min_row=1, max_row=4, min_col=1, max_col=4)\r\n#digunakan untuk mengambil semua baris dengan range disebutkan\r\nsheet.iter_row(min_row=1, max_row=4, min_col=1, max_col=4)<\/code><\/pre>\r\n<p><!-- \/wp:code --><!-- wp:spacer {\"height\":56} --><\/p>\r\n<div class=\"wp-block-spacer\" style=\"height: 56px;\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --><!-- wp:heading {\"level\":3} --><\/p>\r\n<h3><strong>Pandas &amp; Excel<\/strong><\/h3>\r\n<p><!-- \/wp:heading --><!-- wp:paragraph --><\/p>\r\n<p>Karena dalam melakukan Data Mining dan Machine Learning penggunaan pandas cukup sering dilakukan oleh bebebrapa user, jadi kemampuan untuk mengkonversikan dataframe kedalam excel menjadi penting.<\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:paragraph --><\/p>\r\n<p>Untuk melakukan konversi dari dataframe ke dalam excel yang disimpan kita dapat menggunakan.<\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>df.to_excel(\"namafile.xlsx\") #df bisa diganti nama dataframe<\/code><\/pre>\r\n<p><!-- \/wp:code --><!-- wp:paragraph --><\/p>\r\n<p>Jika kita perlu memasukkan ke dalam sheet tertentu, bisa kita gunakan<\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>df.to_excel(\"namafile.xlsx\",\r\n             sheet_name='nama_sheet')<\/code><\/pre>\r\n<p><!-- \/wp:code --><!-- wp:paragraph --><\/p>\r\n<p>Memasukkan beberapa dataframe kedalam sheet yang berbeda dapat kita lakukan dengan memanfaatkan fungsi ExcelWriter<\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>with pd.ExcelWriter('namafile.xlsx') as writer:  \r\n    hasil1.to_excel(writer, sheet_name='nama_sheet_1')\r\n    hasil2.to_excel(writer, sheet_name='nama_sheet_2')<\/code><\/pre>\r\n<p><!-- \/wp:code --><!-- wp:spacer {\"height\":56} --><\/p>\r\n<div class=\"wp-block-spacer\" style=\"height: 56px;\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --><!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Visualisasi<\/h3>\r\n<p><!-- \/wp:heading --><!-- wp:paragraph --><\/p>\r\n<p>Excel tidak hanya digunakan untuk menyimpan data, pada umumnya seseorang akan menggunakan juga sebagai media untuk memvisualisasikan data yang telah diolah. Bisa untuk kebutuhan presentasi atau juga laporan. Menariknya adalah openpyxl sendiri sudah memiliki kemampuan untuk melakukan visualisasi dari IDE kita tanpa harus membuka file excel tersebut.<\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:file {\"id\":10038,\"href\":\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/09\/pulau_indonesia.csv\"} --><\/p>\r\n<div class=\"wp-block-file\"><a href=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/09\/pulau_indonesia.csv\">pulau_indonesia<\/a><a class=\"wp-block-file__button\" href=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/09\/pulau_indonesia.csv\" download=\"\">Unduh<\/a><\/div>\r\n<p><!-- \/wp:file --><!-- wp:paragraph --><\/p>\r\n<p>Pertama kita import semua library yang dibutuhkan<\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from openpyxl import Workbook\r\nfrom openpyxl.chart import BarChart, Series, Reference\r\nimport csv<\/code><\/pre>\r\n<p><!-- \/wp:code --><!-- wp:paragraph --><\/p>\r\n<p>Lalu kita akan buka data dari file csv yang kita miliki dan inisiasi file excel kita<\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>#inisiasi excel\r\nwb = Workbook()\r\nws = wb.active\r\n\r\n#open file\r\ndata = open('pulau_indonesia.csv')\r\nrows = csv.reader(data, delimiter=',')<\/code><\/pre>\r\n<p><!-- \/wp:code --><!-- wp:paragraph --><\/p>\r\n<p>Dengan memanfaatkan looping kita coba untuk membaca perbaris file csv kita dan memasukkannya ke dalam file excel<\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>index = 0\r\nfor row in rows:\r\n    data_clean = []\r\n    for i in row:\r\n        try:\r\n            i = int(i)\r\n        except:\r\n            pass\r\n        data_clean.append(i)\r\n    ws.append(data_clean)\r\n    index +=1\r\nlen_row = len(data_clean)<\/code><\/pre>\r\n<p><!-- \/wp:code --><!-- wp:paragraph --><\/p>\r\n<p>Agar data tersebut dapat diolah maka kita perlu mengubah semua data kita yang terlihat seperti angka tapi masih string (misal: \"76\") menjadi integer (76). itulah guna dari kode 'for i in row()'.<\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:paragraph --><\/p>\r\n<p>variabel index digunakan untuk mengetahui jumlah row maksimum dan variabel len_row digunakan untuk mengetahui berapa banyak data kita. kedua variabel tersebut akan kita gunakan pada langkah selanjutnya.<\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:paragraph --><\/p>\r\n<p>Sekarang saatnya kita menginisiasi chart kita, chart yang akan kita gunakan adalah jenis bar.<\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>chart1 = BarChart()\r\nchart1.type = \"col\"\r\nchart1.style = 3\r\nchart1.title = \"Bar Chart\"\r\nchart1.y_axis.title = 'Jumlah Pulau'\r\nchart1.x_axis.title = 'Nama Provinsi'<\/code><\/pre>\r\n<p><!-- \/wp:code --><!-- wp:list --><\/p>\r\n<ul>\r\n<li>chart.type digunakan untuk menentukan jenis bar chart kita, apakah secara horizontal atau vertikal.<\/li>\r\n<li>chart style digunakan untuk mengubah style atau warna dari chart kita<\/li>\r\n<li>chart.title digunakan untuk mengganti Judul chart kita<\/li>\r\n<li>axis.title digunakan untuk memberi judul axis kita<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --><!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>data = Reference(ws, min_col=3, min_row=1, max_row=index, max_col=len_row-1)\r\ncats = Reference(ws, min_col=2, min_row=2, max_row=index)\r\nchart1.height = 10 # default is 7.5\r\nchart1.width = 30 # default is 15\r\nchart1.add_data(data, titles_from_data=True)\r\nchart1.set_categories(cats)\r\nws.add_chart(chart1, \"G2\")<\/code><\/pre>\r\n<p><!-- \/wp:code --><!-- wp:list --><\/p>\r\n<ul>\r\n<li>chart.heigt untuk mengatur tinggi chart<\/li>\r\n<li>chart.width untuk mengatur lebar chart<\/li>\r\n<li>chart.add_data untuk memasukkan data untuk dipakai chart kita, title_from_data jika ingin data kita langsung memasukkan legenda dari judul kolom.<\/li>\r\n<li>chart.set_categories digunakan untuk memberi nilai axis x<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --><!-- wp:paragraph --><\/p>\r\n<p>Lalu setelah semua itu kita masukkan chart kita ke dalam workspaces dengan menggunakan add_chart(), dimana 'G2' adalah dimana saya ingin menempatkan chart saya.<\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:paragraph --><\/p>\r\n<p>terakhir kita save file excel kita<\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>wb.save(\"bar.xlsx\")<\/code><\/pre>\r\n<p><!-- \/wp:code --><!-- wp:paragraph --><\/p>\r\n<p>Saat kita buka file excel tersebut akan terlihat seperti gambar di bawah.<\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:image {\"id\":9709,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-9709\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/excel_1-1024x470.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --><!-- wp:paragraph --><\/p>\r\n<p>Kode lengkap nya menjadi,<\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from openpyxl import Workbook\r\nfrom openpyxl.chart import BarChart, Series, Reference\r\nimport csv\r\n\r\n#inisiasi excel\r\nwb = Workbook()\r\nws = wb.active\r\n\r\n#open file\r\ndata = open('pulau_indonesia.csv')\r\nrows = csv.reader(data, delimiter=',')\r\n\r\nindex = 0\r\nfor row in rows:\r\n    data_clean = []\r\n    for i in row:\r\n        try:\r\n            i = int(i)\r\n        except:\r\n            pass\r\n        data_clean.append(i)\r\n    ws.append(data_clean)\r\n    index +=1\r\nlen_row = len(data_clean)\r\n\r\nchart1 = BarChart()\r\nchart1.type = \"col\"\r\nchart1.style = 3\r\nchart1.title = \"Bar Chart\"\r\nchart1.y_axis.title = 'Jumlah Pulau'\r\nchart1.x_axis.title = 'Nama Provinsi'\r\n\r\ndata = Reference(ws, min_col=3, min_row=1, max_row=index, max_col=len_row-1)\r\ncats = Reference(ws, min_col=2, min_row=2, max_row=index)\r\nchart1.height = 10 # default is 7.5\r\nchart1.width = 30 # default is 15\r\nchart1.add_data(data, titles_from_data=True)\r\nchart1.set_categories(cats)\r\nws.add_chart(chart1, \"G2\")\r\n\r\nwb.save(\"bar.xlsx\")<\/code><\/pre>\r\n<p><!-- \/wp:code --><!-- wp:paragraph --><\/p>\r\n<p>Kalian bisa mencoba mengubah-ubah chart kalian dengan meilhat dokumentasi, terdapat hampir semua jenis chart yang bisa kalian implementasikan sesuai kebutuhan.<\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:spacer {\"height\":58} --><\/p>\r\n<div class=\"wp-block-spacer\" style=\"height: 58px;\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --><!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Sumber pustaka<\/h3>\r\n<p><!-- \/wp:heading --><!-- wp:paragraph --><\/p>\r\n<p><a href=\"https:\/\/openpyxl.readthedocs.io\/\">https:\/\/openpyxl.readthedocs.io\/<\/a><\/p>\r\n<p><!-- \/wp:paragraph --><!-- wp:paragraph --><\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-02-16 08:00:00","status_publish":"publish","urutan":2,"created_by":11253,"updated_by":11253,"created_at":"2020-12-06 14:11:49","updated_at":"2021-02-11 13:18:25","waktu_publish_formatted":" Selasa, 16 Februari 2021. 08:00:00 WIB."},{"id":182,"uuid":"5f10363c-9695-4eef-a487-463bef8530be","author_user_id":11253,"materi_section_id":59,"judul":"Apa itu SQL","permalink":"apa-itu-sql","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image --><\/p>\r\n<figure id=\"block-cc042186-1432-451f-b879-6963e03d1437\" class=\"wp-block-image\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/09\/title_3_1-1024x192.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama filenya adalah title_3_1-1024x192.png\" \/><\/figure>\r\n<p>&nbsp;<\/p>\r\n<p id=\"block-4fce3a49-a60e-484e-b340-7417884d503d\">Structured Query Language (SQL) adalah sebuah&nbsp;bahasa&nbsp;yang digunakan untuk mengakses&nbsp;data&nbsp;dalam&nbsp;basis data relasional. Bahasa ini secara&nbsp;<em>de facto<\/em>&nbsp;merupakan bahasa standar yang digunakan dalam manajemen basis data relasional. Saat ini hampir semua&nbsp;server basis data&nbsp;yang ada mendukung bahasa ini untuk melakukan manajemen datanya. wikipedia<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-3f6efc2d-ac1f-4401-ac50-a647b821b233\">Pada awal tahun 1970-an, tercetus ide untuk mengembangkan basis data relasional. Niatnya adalah membuat standar bahasa yang dapat digunakan oleh siapa saja. Karena hal tersebut munculah istilah SEQUEL (&nbsp;<em>Structured English Query Language<\/em>). Sebelum adanya SEQUEL ini, pada tahun 1969 IBM terlebih dahulu melahirkan SQUARE sebagai cikal bakal dari SEQUEL. Nama tersebut lalu disingkat menjadi SQL karena adanya permasalahan merk dagang dengan perusahaan lain.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-54ffe6e4-bcb6-43a6-920b-bdee68d86e25\">Pada tahun 1986,&nbsp;<em>ANSI (American National Standards Institute)<\/em>, sebuah badan yang membuat standarisasi&nbsp;merancang sebuah standar untuk SQL. Tidak lama setelahnya,&nbsp;<em>ISO (International Organization for Standardization)<\/em>&nbsp;juga mengeluarkan standar untuk SQL. Ini dikerjakan dengan tujuan untuk menyeragamkan query yang digunakan di pada SQL dikarenakan perkembangan dari SQL yang begitu cepat sehingga banyak sekali perusahaan yang melakukan pengembangan sendiri SQL dengan menambahkan beberapa fitur tambahan. Walaupun begitu, perintah-perintah dasar masih memiliki kesamaan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-25de7959-2c97-4e4a-9670-bed61723ddd8\">Terdapat tiga jenis perintah dasar dalam SQL. Pertama adalah <em>Data Definition, Data Manipulation<\/em> , dan <em>Data Control<\/em>.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-85b868b5-1db0-4aee-aa90-be34cde47fd1\"><strong>Data Definition Language (DDL)<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-57462299-8592-43b3-b010-9e3568e0d7ad\">Perintah ini digunakan untuk membuat struktur sebuah&nbsp;<em>database<\/em>. Terdapat lima perintah utama, diantaranya:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul id=\"block-8208aeb4-61c8-43fb-b6f9-eef95a307a7b\">\r\n<li>Perintah&nbsp;<strong>Create<\/strong>: sebuah perintah yang bisa kamu gunakan ketika membuat sebuah&nbsp;<em>database<\/em>&nbsp;yang baru, baik itu berupa tabel baru atau sebuah kolom baru.<\/li>\r\n<li>Perintah&nbsp;<strong>Alter<\/strong>: biasa digunakan ketika seseorang ingin mengubah struktur tabel yang sebelumnya sudah ada.<\/li>\r\n<li>Perintah&nbsp;<strong>Rename<\/strong>: dapat kamu gunakan untuk mengubah sebuah nama di sebuah tabel ataupun kolom yang ada.<\/li>\r\n<li>Perintah&nbsp;<strong>Drop:&nbsp;<\/strong>Bisa kamu gunakan dalam menghapus baik itu berupa&nbsp;<em>database<\/em>, table maupun kolom hingga index.<\/li>\r\n<li>Perintah&nbsp;<strong>Show:&nbsp;<\/strong>perintah DDL ini digunakan untuk menampilkan sebuah tabel yang ada.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-deaf2605-fdc6-4ad7-9ba6-52acbb64ff65\"><strong>Data Manipulation Language (DML)<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-b2715a0b-4467-4cfc-8522-d05db6b59923\">Perintah dasar SQL ini bertujuan untuk memanipulasi data yang ada dalam sebuah&nbsp;<em>database<\/em>. Beberapa perintah dalam DML di antaranya&nbsp;<em>adalah insert, select, update,&nbsp;<\/em>dan&nbsp;<em>delete<\/em>.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul id=\"block-39524ac0-6525-4bc4-99d1-1eb466b3a4ed\">\r\n<li>Perintah&nbsp;<strong>Insert<\/strong>: Kamu bisa menggunakan perintah ini untuk memasukkan sebuah&nbsp;<em>record<\/em>&nbsp;baru di dalam sebuah tabel&nbsp;<em>database<\/em>.<\/li>\r\n<li>Perintah&nbsp;<strong>Select<\/strong>: Pada perintah ini kamu dapat menggunakannya dalam menampilkan maupun mengambil sebuah data pada tabel. Data yang diambil pun tidak hanya terbatas pada satu jenis saja melainkan lebih dari satu tabel dengan memakai relasi.<\/li>\r\n<li>Perintah&nbsp;<strong>update<\/strong>: Ini dapat kamu gunakan ketika ingin melakukan pembaruan data di sebuah tabel. Contohnya saja jika ada kesalahan ketika memasukkan sebuah record. Kamu tidak perlu menghapusnya dan bisa diperbaiki menggunakan perintah ini.<\/li>\r\n<li>Perintah&nbsp;<strong>Delete<\/strong>: Perintah DML ini dapat digunakan ketika kamu ingin menghapus sebuah record yang ada dalam sebuah tabel.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-1f632949-aa39-4fe3-9e3b-b82f954a5847\"><strong>Data Control Language (DCL)<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-ea281cca-3964-4214-a998-fd594841a9a9\">Perintah SQL ini berhubungan dengan administrasi dan aksesibilitas, digunakan khususnya untuk mengatur hak apa saja yang dimiliki oleh pengguna. Dua perintah yang termasuk pada DCL adalah:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul id=\"block-5cc4669f-e349-4f54-ab81-4edca646acf2\">\r\n<li>Perintah&nbsp;<strong>Grant<\/strong>: Digunakan untuk memberikan hak akses ke user lainnya. Tentu pemberian hak akses ini dapat dibatasi atau diatur.<\/li>\r\n<li>Perintah&nbsp;<strong>Revoke<\/strong>: Digunakan untuk mencabut maupun menghapus hak akses seorang pengguna yang awalnya diberikan akses oleh admin database melalui perintah Grant sebelumnya.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3 id=\"block-eed59487-3f50-40ff-9965-a6ebbfc2e596\"><strong>SQLite<\/strong><\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-8646f3ea-bc44-4d8d-b951-05df34195afb\">Seperti MySQL, SQLite adalah perangkat lunak RDBMS yang digunakan untuk manajemen database SQL yang kita miliki. <em>Lite<\/em> dalam SQLite artinya adalah ringan dalam perihal konfigurasi, administras, dan penggunaan. Inilah alasan utama dalam pelatihan kali ini kita akan menggunakan SQLite sebagai perangkat lunak sistem managemen database.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-e959ce41-fcd1-473a-ba45-f31af1446554\">SQLite memiliki beberapa fitur seperti: s<em>elf-contained, serverless, zero-configuration, transactional.<\/em><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4 id=\"block-ec409c67-2cd5-4641-ad76-9b0c8ee731b4\">Serverless<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-a5f7f34b-6027-4f64-8a06-40fdff206756\">Normalnya, RDBMS seperti MySQL, PostgreSQL, dll membutuhkan server terpisah untuk menjalankan prosesnya. Aplikasi yang membutuhkan akses ke database akan menggunakan protokol TCP\/IP untuk menerima dan mengirimkan permintaan. Ini dinamakan arsitektur klien\/server<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-f0820c4b-f531-45cd-926a-b7935b8331c4\">Berikut penggambaran arsitektur klient\/server RDBMS:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image --><\/p>\r\n<figure id=\"block-3e591383-562f-4127-8d73-e44519c3bc79\" class=\"wp-block-image\"><img src=\"https:\/\/cdn.sqlitetutorial.net\/wp-content\/uploads\/2015\/12\/RDBMS-Client-Server-Architecture.jpg\" alt=\"RDBMS Client Server Architecture\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-56b33793-0f52-4fea-9174-fe53f757ebb5\">Menariknya adalah SQLite tidak bekerja seperti itu, SQLite tidak membutuhkan server khusus untuk berjalan. Aplikasi yang berinteraksi dengan databse SQLite melakukan pembacaan dan penulisan data langsung ke database pada media penyimpanan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-fdbbaf76-345a-4f9e-89d8-e7ca33570574\">Diagram di bawah menggambarkan arsitektur server-less SQLite:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image --><\/p>\r\n<figure id=\"block-847a60a8-3b21-4827-8b77-b2fd79ec67ca\" class=\"wp-block-image\"><img src=\"https:\/\/cdn.sqlitetutorial.net\/wp-content\/uploads\/2015\/12\/What-is-SQLite.jpg\" alt=\"What is SQLite\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4 id=\"block-8dbaddb0-bbe0-4852-8722-af401f2438bc\">Self-Contained<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-d92fa51c-706a-49df-875b-dff5dec9f71a\">SQLite sebagai self-contained artinya SQLite membutuhkan dukungan yang minim dari sistem operasi atau library tambahan. Ini Artinya SQLite sangat cocok pada lingkungan development yang database yang langsung dimasukkan kedalam aplikasi, misal Android.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4 id=\"block-d71a5e34-3085-4b81-83c1-b7242ad9df41\">Zero-configuration<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-3dedd57c-142f-43b6-9f95-5e3ba8a1e5e8\">Karena sifatnya yang server-less maka SQLite juga tidak membutuhkan file konfigurasi khusus agar dapat berjalan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4 id=\"block-b31428ae-9667-4e73-bc19-7482e15fea3b\">Transactional<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-bbbee690-6111-47ea-a522-7cf426e4de1f\">Semua transaksi dalam SQLite bersifat ACIDA (Atomic, Consistent, Isolated, and Durable).<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-0c10be6e-84f8-4ded-8040-c88d07f70879\">Artinya adalah transaksi yang terjadi pada SQLite hanya memiliki dua kemungkinan, terlaksana secara sempurna atau tidak terjadi sama sekali.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4 id=\"block-cbc72939-04a6-4a74-9379-1fbe8628ae88\">Instalasi SQLite<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-7dadce7d-3fb8-4e77-a183-7bf30c83d5eb\">Untuk melakukan instalasi SQLite kita harus melakukan pengunduhan terlebih dahulu. Kita dapat mengikuti langkah berikut<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list {\"ordered\":true} --><\/p>\r\n<ol id=\"block-2c78e223-f69c-47a2-9304-e30d25627778\">\r\n<li>pertama masuk ke situs&nbsp;<a href=\"https:\/\/www.sqlite.org\/\">https:\/\/www.sqlite.org<\/a><\/li>\r\n<li>Lalu buka halaman download&nbsp;<a href=\"https:\/\/www.sqlite.org\/download.html\">https:\/\/www.sqlite.org\/download.html<\/a><\/li>\r\n<\/ol>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-cb7a78c0-4d80-4b14-8734-d7dbb90270ba\">SQLite menyediakan paket instalasi untuk berbagai macam lingkungan, misalnya windows, linux, atau MacOS. Sebagai contoh, jika ingin melakukan kerja pada Windows, maka pilihlah seperti pada gambar di bawah.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image --><\/p>\r\n<figure id=\"block-d8d02ada-5c3d-46a8-b41e-517a43d79570\" class=\"wp-block-image\"><img src=\"https:\/\/cdn.sqlitetutorial.net\/wp-content\/uploads\/2019\/08\/SQLite3-Windows-Download.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama filenya adalah SQLite3-Windows-Download.png\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-246b3cd3-ab77-4275-b463-a373c3289df3\">Instalasi SQLite sendiri cukuplah mudah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list {\"ordered\":true} --><\/p>\r\n<ol id=\"block-5b7da229-6117-40fb-a3b3-16203b2372c1\">\r\n<li>pertama, buatlah folder baru untuk menampung file sqlite. misalkan,&nbsp;<code>C:\\sqlite<\/code>.<\/li>\r\n<li>Kedua lakukan ekstrasi pada hasil unduhan kita dan simpan di folder&nbsp;<code>C:\\sqlite<\/code>&nbsp;folder.<\/li>\r\n<\/ol>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-57422b39-def2-42b3-b4b0-076deb153196\">Buka Command Prompt<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image --><\/p>\r\n<figure id=\"block-20eaa763-4198-47c0-87e8-b7ad3453cd71\" class=\"wp-block-image\"><img src=\"https:\/\/cdn.sqlitetutorial.net\/wp-content\/uploads\/2019\/08\/SQLite3-command-line-window.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama filenya adalah SQLite3-command-line-window.png\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-e255f2a7-ec61-4d6b-b128-bfbe48d5edb8\">lalu navigasikan ke folder the C:\\sqlite.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre id=\"block-35e5c193-6647-463d-ab74-0fe0c7b3dc97\" class=\"wp-block-code\"><code>C:\\cd c:\\sqliteC:\\sqlite&gt;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-dbd2f044-81f4-4df0-a3f5-57ea177a409e\">Lalu ketikkan sqlite3, maka akan muncul tampilan seperti pada gambar di bawah.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre id=\"block-ec19d5e3-977b-43f4-930f-c908633c8033\" class=\"wp-block-code\"><code>C:\\sqlite&gt;sqlite3SQLite version 3.29.0 2019-07-10 17:32:03Enter \".help\" for usage hints.Connected to a transient in-memory database.Use \".open FILENAME\" to reopen on a persistent database.sqlite&gt;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-d263aaee-44f4-42c5-934c-fc3926ac61f5\">Untuk bisa membuka sqlite dari lokasi mana saja, kita bisa menaruh alamat folder sql tadi ke pengaturan PATH di windows. Untuk mengetahui perintah apa saja yang bisa kita lakukan kita dapat mengetik<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre id=\"block-bea2b31f-7972-4816-ab2f-2df33b21b152\" class=\"wp-block-code\"><code>.help<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4 id=\"block-6373dd98-f172-400b-b61d-a95eee882041\">Perintah dalam SQLite<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-4e2b1cec-f547-44e6-a15a-471d7aadd113\">Kita dapat membuat\/mengakses database yang kita miliki dengan menggunakan perintah:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre id=\"block-5cc68a11-250a-4e0a-8e4a-b1221450fba5\" class=\"wp-block-code\"><code>sqlite3 DatabaseName.db<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-bc59d1b7-6ffe-47c3-87fc-385ef9b3d971\">Untuk melakukan pengecekan database yang terhubung kita dapat mengunakan perintah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre id=\"block-e10fc71b-37ce-45d6-b1f7-0847860f7e59\" class=\"wp-block-code\"><code> .database<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-fc763a7d-8660-4e7e-8281-6813a3fd2def\">Untuk keluar dari database kita bisa menggunakan perintah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre id=\"block-d2fb37fa-3799-41b3-a349-11b560f6849e\" class=\"wp-block-code\"><code>.exit<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-f542d83e-dbea-47b2-88f4-537a1d86a6c4\">Jika kita telah memiliki atau membuat database sqlite sebelumnya dan ingin menyambungkannya kita dapat menggunakan perintah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre id=\"block-d0a57e78-6778-44b6-aea0-f82377dd9523\" class=\"wp-block-code\"><code>ATTACH DATABASE 'DatabaseName' As 'Alias-Name';<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-39e7662d-32d6-4c27-a467-ef4580e681aa\">Untuk Melepaskan kita gunakan perintah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre id=\"block-b64c9593-add0-432d-b45f-92bc99b89447\" class=\"wp-block-code\"><code>DETACH DATABASE 'Alias-Name';<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-e3f39677-44a0-4dad-b3c8-aad82b457f2e\">Untuk Membuat tabel baru kita menggunakan perintah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre id=\"block-8ed21523-665a-4979-950e-4a44d05406f3\" class=\"wp-block-code\"><code>CREATE TABLE database_name.table_name(   column1 datatype PRIMARY KEY(one or more columns),   column2 datatype,   column3 datatype,   .....   columnN datatype);<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:list --><\/p>\r\n<ul id=\"block-477faa28-9938-4f50-a977-1bbe65b49212\">\r\n<li>database_name diisi dengan nama database yang kita ingin masukkan tabel<\/li>\r\n<li>table_name adalah nama tabel kita<\/li>\r\n<li>column diisi dengan nama\/head dari kolom kita<\/li>\r\n<li>datatype merupakan jenis datanya (integer, string, number, date, boolean)<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-caecb7f3-9954-4f07-b4b3-c6c42dc467f0\">Terdapat dua jenis <em>Key<\/em> Khusus dari sebuah tabel, yang pertama adalah <em>Primary Key <\/em>dan yang kedua adalah F<em>oreign Key. Primary key<\/em> merupakan identitas dari data pada tabel kalian, jadi tidak ada Primary Key yang sama dalam satu data (contohnya adalah NIK pada kependudukan). <em>Foreign Key<\/em> digunakan sebagai penghubung antara dua tabel. Bisa jadi <em>Primary Key<\/em> pada tabel A merupakan <em>Foreign Key<\/em> pada tabel B.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3 id=\"block-c5e371e2-d92f-48a0-9bb3-5efbf0cefc25\">SQLite GUI - DB Browser<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-fb580d82-e1fd-462a-a7bc-a635258eb760\">Menggunakan SQLite sangatlah mudah, tapi ada kalanya kita membutuhkan sebuah user interface agar lebih memudahkan kita dalam memanipulasi dan memvisualiasikan database kita. Banyak sekali SQLite GUI yang dapat kita gunakan, salah satunya adalah <strong>DB Browser fo SQLite<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4 id=\"block-bce91f1a-db70-4e5c-b5b3-dfd5a5f7ae62\">Instalasi<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-159edc17-e421-4692-ba70-fc60dce4a6ee\">Masuk kedalam halaman <a href=\"https:\/\/sqlitebrowser.org\/dl\/\">https:\/\/sqlitebrowser.org\/dl\/<\/a> dan pilih file yang sesuai dengan spesifikasi alat kita. lalu lakukan instalasi. Setelah berhasil melakukan instalasi kita akan mendapatkan tampilan seperti gambar di bawah.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image --><\/p>\r\n<figure id=\"block-5b428b76-91d6-4803-a07c-4acd19b2ec49\" class=\"wp-block-image\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/09\/sql2-1024x572.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama filenya adalah sql2-1024x572.png\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-e29dc63b-ab3f-4b22-8894-33b1701d8e3f\">Sekian Materi untuk hari ini, Materi pada Esok hari akan membahas tentang penggunaan DB Browser dan Bagaimana untuk merancang ERD.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading --><\/p>\r\n<h2 id=\"block-08e78d53-4ebd-4721-82e7-688d5fef01e0\">Entity Relationship Diagram<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-a81f5188-9c2f-4b57-bf28-27911bd89fca\">Saat kita mengembangkan perangkat lunak atau pun mengerjakan sebuah proyek yang menggunakan banyak data sehingga membutuhkan penggunaan database khusus maka kemampuan untuk dapat merancang ERD akan sangat membantu untuk menaikkan kapabilitas dan efisiensi sistem database kita.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-6a932d49-4106-4c5d-8251-2a4bbd480a6f\">ERD merupakan kepanjangan dari Entity Relationship Diagram, merupakan salah satu tipe diagram struktural yang digunakan pada saat kita mendesain database. pada ERD terdapat beberapa simbol dan konektor yang digunakan untuk menggambarkan dua hal, yaitu semua Entitas dalam sistem dan hubungan antar entitas tersebut.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3 id=\"block-a8612bc7-9a56-467f-b3ac-d61e31c06b0b\">Kapan perlu Menggambar ERD<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-28b4d0fe-697b-4362-9df2-529db17f7504\">Pada beberapa kasus yang memperlihatkan betapa pembuatan ERD akan sangat memudahkan. kasus-kasus tersebut diantaranya<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul id=\"block-b3ce9573-ac24-469e-8b05-227ff5518dec\">\r\n<li><strong>Mendesain Database<\/strong> - Mengubah database, baik menambahkan atau mengurangi bukanlah perkara yang sederhana. Menghapus satu database bisa mempengaruhi database lain yang terhubung. Karena dari itu mengetahui bagaimana database tersebut bekerja akan sangat membantu.<\/li>\r\n<li><strong>Analisa Database<\/strong>&nbsp;- Adakalanya database yang harus kita kerjakan bukanlah buatan kita, akan tetapi merupakan turunan dari pekerja atau peneliti sebelumnya. Dengan menggunakan ERD kita akan dapat menganalisa sistem database tersebut dan menentukan alur kerja sistem database.<\/li>\r\n<li><strong>Pembuatan Database<\/strong>&nbsp;- Beberapa perangkat lunak memiliki kemampuan untuk mengkonversi desain ERD kita menjadi sistem database secara langsung.<\/li>\r\n<li><strong>Membantu dalam alur<\/strong> <strong>kerja<\/strong>&nbsp;- Saat kita membuat konseptual ERD maka kita dapat mengembangkan menjadi ERD nyata. Dengan mengetahui sistem alur informasi dalam database kita juga menjadi lebih mengerti tentang alur kerja keseluruhan dan melakukan pengembangan.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3 id=\"block-23465e10-f6a2-4dd0-9641-7db6f2574043\">Notasi dalam ERD<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-c8091d91-19fc-4751-bee4-61ef5acbe35a\">Terdapat banyak Notasi dan simbol dalam ERD, pada kesempatan kali ini kita akan membahas beberapa notasi atau simbol penting.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3 id=\"block-93ed8e80-9789-46df-8b8a-c818d0f8cc1f\">Entitas<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-5def3149-4bd8-4a74-9674-3d3cd929bf13\">Sesuatu yang dapat didefinisikan pada suatu sistem disebut entitas, biasa digambarkan sebagai tabel. Dalam bahasa sederhananya entitas adalah kumpulan objek\/benda. Pada ERD, sebuah entitas ditunjukan dengan persegi tumpul.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image --><\/p>\r\n<figure id=\"block-796653f0-4719-4d02-9f67-aab174519e6c\" class=\"wp-block-image\"><img src=\"https:\/\/cdn-images.visual-paradigm.com\/guide\/data-modeling\/what-is-erd\/03-an-erd-entity.png\" alt=\"Entity\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3 id=\"block-86f7c24f-af3e-47ac-9600-7793536415a1\">Atribut<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-d3f264c9-466b-44db-9fa7-b2ed8f428fbf\">Biasa digambarkan suatu kolom dalam tabel. Berisi karakteristik atau parameter dari tabel tersebut. Pada saat mengubah ERD konseptual menjadi ERD sebenarnya ada baiknya kita mengecek atribut apa saja yang diperbolehkan pada suatu RDBMS. Misalnya, Oracel menggunakan varchar dimana sqlite menggunakan Text.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-17877f50-4391-4b05-8f6b-f5bb4813d37c\">Contoh dari atribut ditunjukan pada gambar dibawah.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image --><\/p>\r\n<figure id=\"block-c5b02ae3-9515-41fc-861c-37a8b31b24e8\" class=\"wp-block-image\"><img src=\"https:\/\/cdn-images.visual-paradigm.com\/guide\/data-modeling\/what-is-erd\/04-an-erd-entity-with-entities.png\" alt=\"Entity Attributes\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4 id=\"block-432ca78f-6fa1-454a-bde4-77a4f2491756\">Primary Key<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-b53969cf-f872-4c86-8c99-eadcdbf664f9\">Seperti yang disebutkan pada materi sebelumnya, Primary Key merupakan sebuah data atau kolom yang menunjukan identitas dari data tersebut. Primary key biasa unik antara satu data dengan data yang lain pada satu tabel yang sama.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4 id=\"block-8c821dc8-86ca-40b2-875a-037a3f3136c5\">Foreign Key<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-94470acb-1ad8-46cc-ae05-304d9387f33b\">Kunci penghubung dengan database lain. biasanya dipakai untuk memudahkan operasi lintas tabel.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4 id=\"block-44db2c6b-17f6-44d2-8172-958c6b7ecff0\">Kardinalitas<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-530f55ff-b854-4295-abea-b38831030032\">Kardinalitas menggambarkan tentang asosiasi atau hubungan antara dua tabel atau lebih. Relasi kardinalitas yang paling umum digambarkan ada tiga, yaitu hubungan satu - satu, hubungan satu - banyak, atau hubungan banyak - banyak<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":5} --><\/p>\r\n<h5 id=\"block-abd9c0c5-32a4-4d21-b696-d9abbad6f605\">Contoh Hubungan Satu - Satu<\/h5>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-1728ccea-fb9f-4f83-ada5-45c735b7b436\">Misalnya pada kejadian dimana satu orang hanya bisa memiliki satu NIK.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image --><\/p>\r\n<figure id=\"block-9281d9cb-54b3-41f1-b090-05fba98a2a3c\" class=\"wp-block-image\"><img src=\"https:\/\/cdn-images.visual-paradigm.com\/guide\/data-modeling\/what-is-erd\/07-erd-one-to-one-relationship-example.png\" alt=\"One-to-One cardinality example\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":5} --><\/p>\r\n<h5 id=\"block-d403b31f-a57a-4ec2-9353-41618ac6502a\">Contoh Hubungan Satu - Banyak<\/h5>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-61a9405a-43f8-4ce6-b418-ac739a20f300\">Misalnya pada kejadian dimana satu fakultas dapat memiliki banyak murid akan tetapi satu murid hanya bisa terdaftar pada satu fakultas.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image --><\/p>\r\n<figure id=\"block-da98f2cb-b00d-4f17-b686-ef1b01cf3cc2\" class=\"wp-block-image\"><img src=\"https:\/\/cdn-images.visual-paradigm.com\/guide\/data-modeling\/what-is-erd\/08-erd-one-to-many-example.png\" alt=\"One-to-Many cardinality example\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":5} --><\/p>\r\n<h5 id=\"block-9b37b46e-aeb6-4951-9461-859168ef045f\">Contoh Hubungan Banyak - Banyak<\/h5>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-8d5b7868-6e07-401b-a3cf-b7ba886cb681\">Misalnya pada kejadian dimana satu kelas dapat diikuti oleh banyak mahasiswa dan satu mahasiswa dapat mengikuti banyak kelas,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image --><\/p>\r\n<figure id=\"block-e28098b1-474c-493f-a073-b61a87f9d97b\" class=\"wp-block-image\"><img src=\"https:\/\/cdn-images.visual-paradigm.com\/guide\/data-modeling\/what-is-erd\/09-erd-many-to-many-example.png\" alt=\"Many-to-Many cardinality example\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3 id=\"block-ae71da03-bc2c-4dd8-b822-72abb5cc8079\">Model Data<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-d18c80b2-6e02-466d-8d47-b95f33a958ac\">Terdapat kita Model Data utama dalam ERD<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul id=\"block-7926f355-542c-48e9-bfb5-aefdb6999cb9\">\r\n<li>ERD Konseptual<\/li>\r\n<li>ERD Logis<\/li>\r\n<li>ERD nyata\/fisik<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-7ce38ef3-82f3-47da-8972-704bf1a055de\">Sederhananya, perbedaan diantara mereka bertiga terdapat dari seberapa dalam penggambaran dilakukan. ERD Konseptual biasanya hanya berisi Tabel dan hubungan dengan tabel lainnya, ERD Logis sudah mengikut sertakan kolom apa saja yang ingin dimasukkan pada tabel. Dimana ERD fisik sudah merupakan rancangan akhir sebelum dibuat kedalam sistem Database<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:table --><\/p>\r\n<figure class=\"wp-block-table\">\r\n<table>\r\n<tbody>\r\n<tr>\r\n<th>Fitur ERD<\/th>\r\n<th>Konseptual<\/th>\r\n<th>Logis<\/th>\r\n<th>Fisik<\/th>\r\n<\/tr>\r\n<tr>\r\n<td>Entitas<\/td>\r\n<td>Ya<\/td>\r\n<td>Ya<\/td>\r\n<td>Ya<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>Relasi<\/td>\r\n<td>Ya<\/td>\r\n<td>Ya<\/td>\r\n<td>Ya<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>Kolom<\/td>\r\n<td>&nbsp;<\/td>\r\n<td>Ya<\/td>\r\n<td>Ya<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>jenis Kolom<\/td>\r\n<td>&nbsp;<\/td>\r\n<td>Tergantung<\/td>\r\n<td>Ya<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>Primary Key<\/td>\r\n<td>&nbsp;<\/td>\r\n<td>&nbsp;<\/td>\r\n<td>Ya<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>Foreign Key<\/td>\r\n<td>&nbsp;<\/td>\r\n<td>&nbsp;<\/td>\r\n<td>Ya<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<\/figure>\r\n<p><!-- \/wp:table --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3 id=\"block-0e9e8705-4615-4b3d-b27f-077e973a2c4f\">Contoh ERD<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4 id=\"block-e8659d6f-1e38-48ba-9ee7-687efb430203\">Sistem Penyewaan Film<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:image --><\/p>\r\n<figure id=\"block-58b5e1c7-818a-4730-a77d-a3ce026a33c9\" class=\"wp-block-image\"><img src=\"https:\/\/cdn-images.visual-paradigm.com\/guide\/data-modeling\/what-is-erd\/13-erd-example-movie-rental-system.png\" alt=\"ERD example - Movie Rental System\" \/>\r\n<figcaption>sumber : https:\/\/cdn-images.visual-paradigm.com\/guide\/data-modeling\/what-is-erd\/13-erd-example-movie-rental-system.png<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3 id=\"block-343001fa-7138-4ee6-8414-dec8d3e09c46\">Menggambar ERD<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-ae07f5a8-91a9-4e54-9d86-8d2ef6e58a1f\">Untuk Menggambar ERD bisa dilakukan menggunakan berbagai macam perangkat lunak yang tersedia di internet. Menggunakan perangkat lunak seperti photoshop atau pun microsoft excel pun dapat dilakukan. salah satu situs yang bisa digunakan untuk melakukan pembuatan ERD secara daring adalah <a href=\"https:\/\/app.diagrams.net\/\">https:\/\/app.diagrams.net\/<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image --><\/p>\r\n<figure id=\"block-74322119-6ebc-4698-8640-d70ebbe65b87\" class=\"wp-block-image\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/09\/ERD1-1.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama filenya adalah ERD1-1.png\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:image --><\/p>\r\n<figure id=\"block-a9739cfb-1f65-4246-bbfd-e3902c455a1a\" class=\"wp-block-image\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/09\/ERD2-1024x472.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama filenya adalah ERD2-1024x472.png\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-86b09615-3bc9-4aec-9d28-f9b68626ea09\"><strong>Sumber bacaan eksternal:<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:embed {\"url\":\"https:\/\/www.w3schools.com\/sql\/https:\/\/www.sqlite.org\/docs.htmlhttps:\/\/dev.mysql.com\/doc\/refman\/8.0\/en\/\"} --><\/p>\r\n<figure class=\"wp-block-embed\">\r\n<div class=\"wp-block-embed__wrapper\">https:\/\/www.w3schools.com\/sql\/https:\/\/www.sqlite.org\/docs.htmlhttps:\/\/dev.mysql.com\/doc\/refman\/8.0\/en\/<\/div>\r\n<\/figure>\r\n<p><!-- \/wp:embed --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-12abe8be-d11a-4c17-a0d5-4b927e5a3278\">Video Eksternal:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-484db0b1-2ac5-4cb1-b039-1a63ee6d2c30\"><a href=\"https:\/\/www.youtube.com\/watch?v=1KJpXYQ6T5w\" target=\"_blank\" rel=\"noreferrer noopener\">Apa itu SQL?<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-3b5ace7f-f180-41c4-aea5-11cfa36226cd\"><a href=\"https:\/\/www.youtube.com\/watch?v=wDJZjJJFEV8\" target=\"_blank\" rel=\"noreferrer noopener\">Penjelasan Basis Data ERD - Mas Nur Hasan<\/a><\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-02-17 08:00:00","status_publish":"publish","urutan":3,"created_by":11253,"updated_by":11253,"created_at":"2020-12-06 14:15:44","updated_at":"2021-02-11 13:18:41","waktu_publish_formatted":" Rabu, 17 Februari 2021. 08:00:00 WIB."},{"id":184,"uuid":"a3d95158-25c8-47f3-96b0-ece229a78aea","author_user_id":11253,"materi_section_id":59,"judul":"Manipulasi SQL","permalink":"manipulasi-sql","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p><img class=\"wp-image-11513\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/09\/title_4_1-1024x192.png\" alt=\"\" \/><\/p>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Bekerja dengan SQL tentu tidak bisa dipisahkan dengan query. Semakin kita mahir dalam mengkombinasikan query yang dibutuhkan maka akan semakin powerfull juga sistem basis data yang kita bangun. Melakukan filtering data semenjak di basis data akan lebih efisien daripada saat sudah berada pada query python.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":42} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Jendela DB Browser<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:image {\"id\":11509,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-11509\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/09\/basedata-1024x577.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Terdapat 4 tab utama dalam db browser yaitu<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Database Structure<\/li>\r\n<li>Browser Data<\/li>\r\n<li>Edit Pragmas<\/li>\r\n<li>Execute SQL<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Database Structure digunakan untuk melihat schema dari database yang kita miliki. Browser Data digunakan untuk melihat isi data dari tabel kita. Edit Pragmas untuk mengubah konfigurasi query non table kita. Execute SQL digunakan untuk menjalankan query yang kita butuhkan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk Pelatihan kali ini kita akan menggunakan tab Execute SQL untuk menjalankan semua query pada halaman ini. Setelah Query tersebut dituliskan kita dapat menggunakan tombol F5 atau tombol yang diberi kotak merah pada gambar.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":11510,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-11510\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/09\/basedata2.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk basis data yang kita gunakan dalam materi kali ini dapat diunduh dari link berikut (sumber: www.sqlitetutorial.net)<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><a href=\"https:\/\/cdn.sqlitetutorial.net\/wp-content\/uploads\/2018\/03\/chinook.zip\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\"chinook SQLite sample database (opens in a new tab)\">chinook SQLite sample database<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Lalu buka menggunakan menu <em>open database<\/em>.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":46} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Select<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>query select digunakan untuk memilih dan menampilkan data pada basis data yang kita pilih. secara sederhana query yang digunakan adalah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>select * from customers<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>tanda apostrof artinya kita akan mengambil semua kolom yang ada pada tabel nametabel. jika kita menginginkan hanya satu jenis kolom maka kita maka kita dapat menuliskan<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>select CustomerId from customers -- untuk satu kolom\r\nselect CustomerId, FirstName from customers -- untuk banyak kolom<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Pencarian dari banyak tabel bisa dilakukan dengan menentukan alias untuk setiap tabel. misal saat akan memanggil dari tabel customer dan employees maka kolom dipanggil dengan cara menggunakan alias.kolom<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>select a.CustomerId, b.EmployeeId from customers a, employees b<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk melakukan pencarian dengan syarat tertentu maka kita bisa menggunakan where<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>select * from customers where CustomerId = 1<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Misalkan pada kolom yang kita cari terdapat banyak nilai yang sama kita dapat menggunakan <em>distinct <\/em>untuk mengambilnya sebagai nilai unik<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>select distinct City from customers where City = \"Paris\";\r\n-- bedakan dengan\r\nselect City from customers where City = \"Paris\";<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk mengurutkan data yang akan kita tampilkan kita dapat menggunakan Order By<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>select * from customers Order By City ASC, FirstName DESC;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Query di atas akan mengurutkan terlebih dahulu hasil pencarian tabel customers terhadar kolom City secara Ascending setelah itu baru kolom FirstName secara Descending.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":50} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Join<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Query Join digunakan untuk menggabungkan dua tabel atau lebih saat melakukan proses data. Bentuk visualisasi dari berbagai query join dapat dilihat pada gambar dibawah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":11511,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-11511\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/09\/sql-joins.png\" alt=\"\" \/>\r\n<figcaption>sumber: <a href=\"https:\/\/www.dofactory.com\/sql\/join\">https:\/\/www.dofactory.com\/sql\/join<\/a><\/figcaption>\r\n<\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Inner Join digunakan untuk mengambil hanya data yang saling beririsan, saat ada data yang tidak memiliki hubungan pada kedua tabel maka tidak akan dipanggil<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>select * from albums a inner join artists b on a.ArtistId = b.ArtistId;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Left Join digunakan untuk mengambil keseluruhan data tabel satu dan data irisan pada tabel dua<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>select * from albums a left join artists b on a.ArtistId = b.ArtistId;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":37} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Operator<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Terdapat dua jenis operator yaitu comparison dan logical. comparisan adalah operator yang digunakan untuk membandingkan dua nilai sedangkan logical adalah operator yang dipakai untuk mengembalikan data sesuai syarat logic yang ditentukan<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Comparison<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:table --><\/p>\r\n<figure class=\"wp-block-table\">\r\n<table>\r\n<tbody>\r\n<tr>\r\n<td>Operator<\/td>\r\n<td>Pengertian<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>=<\/td>\r\n<td>Sama dengan<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>&lt;&gt; atau !=<\/td>\r\n<td>Tidak Sama dengan<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>&lt;<\/td>\r\n<td>Kurang dari<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>&gt;<\/td>\r\n<td>Lebih dari<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>&lt;=<\/td>\r\n<td>Kurang dari sama dengan<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>&gt;=<\/td>\r\n<td>Lebih dari sama dengan<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<\/figure>\r\n<p><!-- \/wp:table --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Logical<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:table --><\/p>\r\n<figure class=\"wp-block-table\">\r\n<table>\r\n<tbody>\r\n<tr>\r\n<td>Operator<\/td>\r\n<td>Pengertian<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>ALL<\/td>\r\n<td>Return jika semua ekspresi benar<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>AND<\/td>\r\n<td>Return jika kedua ekspresi benar<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>ANY<\/td>\r\n<td>Return jika ada ekspresi yang benar<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>BETWEEN<\/td>\r\n<td>Return jika nilai berada di antara<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>EXIST<\/td>\r\n<td>Return jika sub query mengembalikan nilai<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>IN<\/td>\r\n<td>Return jika nilai ada pada list<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>LIKE<\/td>\r\n<td>Return jika nilai sama dengan pola<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>NOT<\/td>\r\n<td>Untuk Membalik pengertian operator lain<\/td>\r\n<\/tr>\r\n<tr>\r\n<td>OR<\/td>\r\n<td>Return jika salah satu ekspresi benar<\/td>\r\n<\/tr>\r\n<\/tbody>\r\n<\/table>\r\n<\/figure>\r\n<p><!-- \/wp:table --> <!-- wp:spacer {\"height\":60} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Manipulation<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Insert<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Query yang digunakan untuk memasukkan nilai pada tabel dan\/atau kolom tertentu. query secara umumnya adalah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>INSERT INTO table (column1,column2 ,..)\r\nVALUES( value1,\tvalue2 ,...);<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Contohnya,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>INSERT INTO artists (ArtistId,Name)\r\nVALUES( 300,'Slank');<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Update<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Query yang digunakan untuk mengubah nilai pada tabel dan\/atau kolom tertentu. query secara umumnya adalah,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>UPDATE table\r\nSET column_1 = new_value_1,\r\n    column_2 = new_value_2\r\nWHERE\r\n    search_condition <\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Contohnya,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>UPDATE artists\r\nSET Name = 'Noah'\r\nWHERE\r\n    ArtistId = 300;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Delete<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Query yang digunakan untuk menghapus baris pada tabel tertentu. query secara umumnya adalah,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>DELETE FROM table\r\nWHERE search_condition<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Contohnya,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>DELETE FROM artists\r\nWHERE ArtistId = 300;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Transaction<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Transaksi dilakukan agar data yang kita manipulasi semua perubahannya teraplikasikan ke basis data. Query yang digunakan adalah,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>BEGIN TRANSACTION;\r\n-- manipulation query kita\r\nCOMMIT; --or\r\nROLLBACK;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Begin Transaction digunakan untuk memulai proses, Commit digunakan untuk mengaplikasikan perubahan dimana rollback digunakan untuk mengembalikan ke sebelum di ubah.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":51} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Sumber eksternal<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><a href=\"https:\/\/www.tutorialspoint.com\/sqlite\/index.htm\">https:\/\/www.tutorialspoint.com\/sqlite\/index.htm<\/a><\/p>\r\n<p>https:\/\/www.sqlitetutorial.net\/<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-02-18 08:00:00","status_publish":"publish","urutan":4,"created_by":11253,"updated_by":11253,"created_at":"2020-12-06 14:17:28","updated_at":"2021-02-11 13:18:54","waktu_publish_formatted":" Kamis, 18 Februari 2021. 08:00:00 WIB."},{"id":185,"uuid":"a0237d0f-efc5-444e-986e-4e5193ba4b04","author_user_id":11253,"materi_section_id":59,"judul":"Python's SQL","permalink":"python-s-sql","konten":"<p><!-- wp:paragraph --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-11603\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/title_5_1-1024x192.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Connection<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Langkah pertama yang perlu dilakukan untuk melakukan manipulasi basis data sqlite melalui python adalah dengan membuat koneksi dengan basis data yang akan kita pergunakan. Jika basis data tersebut telah ada maka secara otomatis akan menghubungkan pada basis data tersebut, jika tidak ada maka sqlite akan membuatkan basis data yang baru tersebut.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Berikut langkah-langkah untuk mengkoneksikan basis data:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Pergunakan metode connect() pada library sqlite3 lalu masukan nama basis data sebagai argument<\/li>\r\n<li>Buat obyek cursor dengan menggunakan obyek koneksi yang tercipta saat menggunakan metode connect().<\/li>\r\n<li>Tutup obyek cursor saat pekerjaan telah berhasil dilakukan.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Contoh bisa dilihat di bawah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>    import sqlite3\r\n\r\n    connection = sqlite3.connect('academyawards.db')\r\n    cursor = connection.cursor()\r\n    print(\"Database created and Successfully Connected to SQLite\")\r\n    cursor.close()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>sqlite3.connect merupakan metode yang digunakan untuk melakukan koneksi dengan database. Dengan menggunakan metode cursor kita dapat menjalankan query sqlite di dalam python.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":52} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Membuat Tabel<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Langkah untuk membuat tabel adalah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Koneksikan terhadap basis data<\/li>\r\n<li>Siapkan query untuk membuat tabel<\/li>\r\n<li>Jalankan query menggunakan&nbsp;<code>cursor.execute(query)<\/code><\/li>\r\n<li>Tutup koneksi cursor dan basis data<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>    connection = sqlite3.connect(\"academyawards.db\")\r\n    create_film_table = '''CREATE TABLE IF NOT EXISTS films (\r\n                                 id INTEGER PRIMARY KEY AUTOINCREMENT,\r\n                                 name TEXT NOT NULL,\r\n                                 year integer NOT NULL,\r\n                                 awards integer NOT NULL,\r\n                                 nominations integer NOT NULL);'''\r\n\r\n    cursor = connection.cursor()\r\n    cursor.execute(create_film_table)\r\n    connection.commit()\r\n    cursor.close()\r\n    connection.close()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>execute() digunakan untuk menjalankan query yang telah disiapkan. commit() digunakan untuk mengaplikasikan perubahan ke dalam tabel.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":49} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>CRUD Operation<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Operasi CRUD terdiri dari beberapa fungsi utama manipulasi data diantaranya, Menambahkan, Mengubah dan Menghapus. Query yang dituliskan mirip dengan apa yang telah dituliskan untuk operasi pembuatan tabel.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>    connection = sqlite3.connect(\"academyawards.db\")\r\n    crud_query = '''Isikan dengan query sqlite yang ingin kalian gunakan, \r\n    insert, update, delete, atau select;'''\r\n\r\n    cursor = connection.cursor()\r\n    cursor.execute(crud_query)\r\n    connection.commit()\r\n    cursor.close()\r\n    connection.close()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk mengisikan banyak nilai kita bisa mengganti execute() dengan executemany()<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>    connection = sqlite3.connect(\"academyawards.db\")\r\n    crud_query = '''Isikan dengan query sqlite yang ingin kalian gunakan, \r\n    insert, update, delete, atau select;'''\r\n\r\n    input_list = [(data satu),(data dua)]\r\n\r\n    cursor = connection.cursor()\r\n    cursor.executemany(crud_query,input_list)\r\n    connection.commit()\r\n    cursor.close()\r\n    connection.close()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk mengisikan variabel python dalam query sqlite kita bisa menggunakan tanda \"?\"<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>    connection = sqlite3.connect(\"academyawards.db\")\r\n    crud_query = '''insert into films (name, year, awards, nominations) values (?,?,?,?);'''\r\n\r\n    input_list = (data1, data2, data3, data4)\r\n\r\n    cursor = connection.cursor()\r\n    cursor.execute(crud_query,input_list)\r\n    connection.commit()\r\n    cursor.close()\r\n    connection.close()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk Membaca isi dari tabel selain menggunakan metode execute() kita juga akan menggunakan fetchall(), fetchmany() dan fetchone(). fetchall() digunakan untuk mengambil semua data dari query kita, fetchmany() digunakan untuk mengambil data dengan jumlah tertentu sedangkan fetchone() digunakan untuk mengambil hanya satu data.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>    connection = sqlite3.connect(\"academyawards.db\")\r\n    crud_query = '''query untuk membaca'''\r\n\r\n    coount = 10\r\n\r\n    cursor = connection.cursor()\r\n    cursor.execute(crud_query)\r\n    #bisa dipilih salah satu\r\n    hasilsemua =  cursor.fetchall()\r\n    hasiltertentu = cursor.fetchmany(count)\r\n    hasilsatu = cursor.fetchone()\r\n    cursor.close()\r\n    connection.close()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":55} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Sumber Bacaan Eksternal<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p><a href=\"https:\/\/towardsdatascience.com\/python-sqlite-tutorial-the-ultimate-guide-fdcb8d7a4f30\">https:\/\/towardsdatascience.com\/python-sqlite-tutorial-the-ultimate-guide-fdcb8d7a4f30<\/a><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-02-19 08:00:00","status_publish":"publish","urutan":5,"created_by":11253,"updated_by":11253,"created_at":"2020-12-06 14:18:58","updated_at":"2021-02-11 13:19:08","waktu_publish_formatted":" Jumat, 19 Februari 2021. 08:00:00 WIB."}]},{"id":96,"uuid":"760c7c42-cbb2-4622-ba84-1fbf2b8f0f52","materi_id":10,"nama":"Materi Pekan 2","permalink":"materi-pekan-2","urutan":2,"created_by":11253,"updated_by":11253,"created_at":"2020-12-13 22:20:40","updated_at":"2021-01-28 12:43:03","posting":[{"id":308,"uuid":"40786c82-095b-4735-a48f-35cbde97588c","author_user_id":11253,"materi_section_id":96,"judul":"Data Science & NLP","permalink":"data-science-nlp","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Pada kesempatan kali ini kita akan berusaha untuk mengenal apa itu <em>Natural Language Processing <\/em>dan <em>Data Science <\/em>dan bagaimana mereka berdua berhubungan dengan Python sebagai bahasa pemograman yang akan kita gunakan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":50} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3,\"backgroundColor\":\"vivid-cyan-blue\",\"textColor\":\"white\"} --><\/p>\r\n<h3 id=\"dua\" class=\"has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\">Natural Language Processing [NLP]<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Pertanyaan yang mungkin akan muncul adalah, apa itu NLP? seberapa pentingkah NLP untuk dipelajari? <em>Natural Language Processing<\/em> dapat kita pecah menjadi dua kata, yaitu <em>Natural Language<\/em> dan <em>Processing<\/em>.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Natural Language - Bahasa yang muncul dan terus berkembang sebagai cara agar setiap manusia bisa berkomunikasi. Contohnya adalah Bahasa Indonesia, Bahasa Jepang, dan Bahasa Inggris.<\/li>\r\n<li>Processing &ndash; Bagaimana suatu sistem mengolah data sesuai instruksi\/tujuan.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Jadi jika kita tarik kesimpulannya, maka pengertian dari <em>Natural Language Processing<\/em> adalah,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:pullquote --><\/p>\r\n<figure class=\"wp-block-pullquote\">\r\n<blockquote>\r\n<p>Bagaimana kita bekerja dengan data yang berbentuk teks<\/p>\r\n<\/blockquote>\r\n<\/figure>\r\n<p><!-- \/wp:pullquote --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Contoh Kasus Sederhana<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Kasus Pertama<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Misalkan kita memposting sebuah foto seperti pada gambar di bawah pada akun sosial media yang kita miliki.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":13007,\"width\":512,\"height\":288} --><\/p>\r\n<figure class=\"wp-block-image is-resized\"><img class=\"wp-image-13007\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/nature-3082832_1280-1024x575.jpg\" alt=\"\" width=\"512\" height=\"288\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah beberapa waktu kita mendapatkan beberapa komentar seperti di bawah ini.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Budi - Hasil tangkapan yang baik.<\/li>\r\n<li>Nisa - Alam yang indah sekali.<\/li>\r\n<li>Rudi - Komposisi yang yang terlalu gelap, dimana keindahan alam tertutupi oleh langit yang mendung.<\/li>\r\n<li>...<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Jika kita ingin mengetahui bagaimana orang-orang menilai foto kita maka kita dapat melihat masing-masing komentar yang diberikan dan menilai apakah itu opini postifi atau opini negatif. Akan tetapi, jika komentar yang didapatkan berjumlah ratusan maka melakukan penilaian secara mandiri akan memakan waktu dan tenaga. Maka dari itu kita bisa mengaplikasian teknik NLP pada setiap komentar dan mendapatkan apakah opini tersebut bernilai positif atau negatif (Pada kasus ini kita akan mendapatkan bahwa komentar Budi dan Nisa bernilai positif, sedangkan komentar Rudi bernilai negatif.)<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Kasus Kedua<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Misalkan kita memiliki ratusan surat pada kotak masuk email kita, beberapa contohnya seperti yang ditampilkan pada list dibawah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Rinda - Hi, Saya Rinda dan saya memiliki uang yang ...<\/li>\r\n<li>Nurina - Hi, ini pekerjaan saya minggu lalu. tolong di cek.<\/li>\r\n<li>Phillip - Hi, jadwal liburan kita saya sematkan bersama email ini.<\/li>\r\n<li>...<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Kita ingin bisa memisahkan mana email yang termasuk spam, dan bukan. Bagaimana kita melakukannya? kita dapat melakukan labeling pada setiap email dengan mempelajari setiap isi dari email tersebut. Dengan menerapkan NLP teknik, kita dapat memberikan label spam pada email yang berisi kata uang misalnya. Hasil dari labeling kita dapat dilihat pada list di bawah ini,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul id=\"block-4f3a01c1-66ff-4781-9f15-766ac25388c1\">\r\n<li>Rinda - Hi, Saya Rinda dan saya memiliki uang yang [spam]<\/li>\r\n<li>Nurina - Hi, ini pekerjaan saya minggu lalu. tolong di cek. [pekerjaan]<\/li>\r\n<li>Phillip - Hi, jadwal liburan kita saya sematkan ... [liburan][pribadi]<\/li>\r\n<li>...<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:paragraph --><\/p>\r\n<p>Kasus <strong>pertama <\/strong>adalah apa yang kita sebut dengan <em>sentiment analysis<\/em> atau <em>text analysis<\/em>. Pada kasus <strong>kedua <\/strong>adalah apa yang kita sebut dengan <em>topic modeling<\/em>.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":50} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3,\"backgroundColor\":\"vivid-cyan-blue\",\"textColor\":\"white\"} --><\/p>\r\n<h3 class=\"has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\">Data Science<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Pekerjaan kita dalam NLP akan menggunakan prinsip dalam <em>Data Science<\/em> karena dari itu akan lebih menyenangkan jika kita mengenal apa itu Data Science. Ada sebuah phrasa yang saya sangat sukai untuk menggambarkan apa itu Data Science<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:pullquote --><\/p>\r\n<figure class=\"wp-block-pullquote\">\r\n<blockquote>\r\n<p>Mencari arti dari data<\/p>\r\n<\/blockquote>\r\n<\/figure>\r\n<p><!-- \/wp:pullquote --> <!-- wp:paragraph --><\/p>\r\n<p>Jadi seorang <em>Data scientist<\/em> tidak hanya melakukan pengolahan pada data yang dimiliki. tapi juga haruslah mendapatkan sebuah informasi yang bermakna dalam data tersebut. Yang dimana informasi tersebut akan menjadi dasar dari pengambilan sebuah keputusan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Diagram Venn yang dapat kita gunakan untuk mengerti apa itu <em>Data Science <\/em>ditunjukan pada gambar di bawah ini.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":13018,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-13018\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/materi_6_1.jpg\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p><em>Data Science<\/em> terdiri dari tiga komponen utama, yaitu Matematika, Komputasi, dan Komunikasi. Mengetahui ketiga hal tersebut merupakan hal utama dalam mempelajari <em>Data Science.<\/em> Hanya mengetahui komputasi dan matematika adalah apa yang kita sebut dengan Machine Learning Engineer, dan mengetahui Matematika dan Komunikasi saja adalah peneliti pada umumnya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Jika kita jabarkan ketiga hal terhadap apa yang akan kita pelajari dan gunakan kedepannya, maka kita mendapatkan hasil sebagai berikut<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Programming &ndash; Data (pandas, sklearn) NLP (nltk, sastrawi)<\/li>\r\n<li>Math &amp; Stats &ndash; Cleaning (corpus, document-term matrix) EDA (word count) NLP ( Sentiment Analysis, Topic Modeling)<\/li>\r\n<li>Communication &ndash; Design (matplotlib, visualize, extract insight)<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Data Science Workflow<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Alur kerja seorang <em>Data Scientist<\/em> dapat dijabarkan menjadi 5 bagian, yaitu:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Start With the Question<\/li>\r\n<li>Get &amp; Clean Data<\/li>\r\n<li>Perform EDA<\/li>\r\n<li>Apply Technique<\/li>\r\n<li>Share Insight<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Start With the Question<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Pada bagian kali ini kalian akan memulai untuk mencari suatu permasalahan yang akan kalian pecahkan atau analisis. Misalkan, Kalian ingin mengetahui bagaimana antusiasme masyarakat indonesia pada dunia otomotif di masa pandemi sekarang. Selalu mulai dengan latar belakang masalah, lalu berjalan menuju permasalahan yang dihadapi, dan tujuan dari analisis kalian.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Get &amp; Clean Data<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Ambil semua data yang kalian butuhkan, pada kesempatan kali ini kita akan menggunakan teknik webscraping dari beberapa media misalnya situs berita, atau wikipedia jika dibutuhkan. Kita jika akan menarik data menggunakan API dari twitter atau media lain yang menyediakan. Setelah itu kita akan melakukan pembersihan data dan penyimpanan data pada basis data yang kita inginkan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Perform EDA<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><em>Exploratory Data Analysis (<\/em>EDA) adalah saat kita mencoba mendalami data yang kita telah kita miliki. Kita akan mencoba mencari pola dan pattern khusus yang akan mengarahkan kita pada sebuah data insight.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Apply Technique<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Disini kita akan mengimplementasikan teknik pada NLP, seperti Analisis Sentiment atau teknik machine learning seperti Unsupervised dan Supervised Learning.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><strong>Share Insight<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Akhirnya kita sampai pada bagian kita akan berusaha mengkomunikasikan informasi kita pada audiens yang kita pilih. Disini kita perlu kemampuan untuk mengolah data menjadi bentuk-bentuk yang lebih mudah dipahami seperti tabel atau plot. Ditamplikan bisa berupa laporan (pdf, excel) atau presentasi (ppt).<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Pada beberapa pekan kedepan kita akan mencoba melakukan penerapan teknik NLP dan Alur kerja <em>Data Science<\/em> untuk mempelajari sentimen analysis pada opini publik. Sebagai bahan referensi kamu dapat melihat beberapa contoh di bawah ini:<br \/><br \/><a href=\"https:\/\/pers.droneemprit.id\/dki-jakarta-dan-sampahnya\/\">https:\/\/pers.droneemprit.id\/dki-jakarta-dan-sampahnya\/<\/a><br \/><br \/><a href=\"https:\/\/pers.droneemprit.id\/hari-tani-nasional-sudahkah-petani-didengar\/\">https:\/\/pers.droneemprit.id\/hari-tani-nasional-sudahkah-petani-didengar\/<\/a><br \/><br \/><br \/><\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-02-22 08:00:00","status_publish":"publish","urutan":1,"created_by":11253,"updated_by":11253,"created_at":"2020-12-13 22:22:54","updated_at":"2021-02-11 13:21:22","waktu_publish_formatted":" Senin, 22 Februari 2021. 08:00:00 WIB."},{"id":309,"uuid":"5c88b97d-3681-4362-ba07-cc2dbdee3c14","author_user_id":11253,"materi_section_id":96,"judul":"Webscraping","permalink":"webscraping","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Secara harfiah, <em>webscraping<\/em>, seperti pada namanya <em>web<\/em> dan <em>scraping<\/em> memiliki arti \"Mengeruk ke dalam web\", puitis sekali bukan (smile). Secara praktikal, pengertiannya adalah mengambil data pada situs internet secara langsung dengan memanfaatkan struktur situs tersebut.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":10178,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-10178\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/09\/hari_9_2.png\" alt=\"\" \/>\r\n<figcaption>sumber : prowebscraper.com\/blog\/wp-content\/uploads\/2017\/11\/What_is_Web_Scraping.png<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Beberapa Langkah yang harus kita lakukan saat akan melakukan pengambilan\/scraping data pada situs web adalah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Request response<\/li>\r\n<li>Inspect halaman<\/li>\r\n<li>Parse dan ekstrak data yang kita inginkan<\/li>\r\n<li>Simpan data ke dalam fotmat yang kita inginkan<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Legalitas?<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Saat kita akan melakukan pengerukan data pada suatu situs tentu saja ada kemungkinan situs tersebut memiliki data yang dilindungi hukum atau merupakan data yang berhubungan dengan privasi. Apakah legal untuk melakukan pengambilan data menggunakan pada situs tersebut? Sayangnya ini masih menjadi sebuah pertanyaan yang belum jelas jawaban pastinya, karena pada umumnya menampilkan data di internet seperti memberikan akses untuk khalayak umum.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Beberapa poin di bawah akan menjelaskan sedikit tentang legalitas.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Ambil data publik sebanyak yang kamu inginkan. Data publik seperti wikipedia merupakan relatif lebih aman untuk dilakukan pengambilan.<\/li>\r\n<li>Lakukan pengambilan secara wajar, lalu hindari penggunaan data untuk keperluan komersial.<\/li>\r\n<li>Penggunaan data dengan copyright untuk tujuan komersial, tidaklah etis dan termasuk ilegal. Ada baiknya bila terdapat copyright tanyakan secara pribadi apakah data tersebut bisa diambil atau tidak.<\/li>\r\n<li>Selalu perhatikan Terms of Service (ToS) jika ada<\/li>\r\n<li>Jika kalian menggunakan API seandainya disediakan, maka itu merupakan cara legal untuk melakukan pengambilan data.<\/li>\r\n<li>Berikan jarak pada pengambilan data kalian, misalnya 1 request per 15 detik.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:spacer {\"height\":40} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>HTML DASAR<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><strong>HTML<\/strong>&nbsp;adalah singkatan dari&nbsp;<strong>Hypertext Markup Language<\/strong>. HTML memungkinkan seseorang untuk membangun sebuah halaman situs dengan menggunakan struktur kode sederhana. Ingat, HTML bukanlah merupakan suatu bahasa pemograman.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Kemampuan untuk memahami kode HTML dasar sangat penting untuk melakukan scraping dikarenakan hal tersebut yang akan menjadi kunci pencarian saat kita akan mengambil data yang kita butuhkan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>HTML dibangun oleh beberapa elemen seperti paragraf, image, dan judul, layaknya kita menulis dengan menggunakan perangkat lunak pengolah kata.Element pada HTML tersebut biasanya di tuliskan dengan tag pembuka dan penutup yang menggunakan kode&nbsp;<em>&lt;tag&gt;&lt;\/tag&gt;<\/em>.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html&gt;  \r\n&lt;html&gt;  \r\n    &lt;head&gt;\r\n    &lt;\/head&gt;\r\n    &lt;body&gt;\r\n        &lt;p&gt; Hello World &lt;\/p&gt;\r\n    &lt;body&gt;\r\n&lt;\/html<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Kode di atas adalah kode dasar HTML yang sering digunakan saat beberapa orang belajar tentang HTML:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><br \/>1.&nbsp;<code>&lt;!DOCTYPE html&gt;<\/code>: Deklarasi pertama bahwa itu tipe dokumen HTML.<br \/>2. &nbsp;Diantara tag <code>&lt;html&gt;<\/code>&nbsp;dan&nbsp;<code>&lt;\/html&gt;<\/code> digunakan untuk menyimpan semua kode yang akan kita tulis<br \/>3. Kode yang ingin kita simpan tapi tidak tampilkan, misal script yang kita buat. Maka ditaruh diantara tag&nbsp;<code>&lt;head&gt;<\/code>dan&nbsp;<code>&lt;\/head&gt;<\/code>.<br \/>4. Bagian yang ingin kita tampilkan kita tulis diantara tag <code>&lt;body&gt;<\/code>&nbsp; dan &nbsp;<code>&lt;\/body&gt;<\/code>.<br \/>5. <code>&lt;p&gt;<\/code> digunakan untuk memulai suatu paragraf&nbsp;.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Tag &lt;head&gt; dan &lt;body&gt; merupakan tag yang setara (<em>sibling<\/em>) karena keduanya berada di bawah tag &lt;html&gt; sedangkan tag &lt;html&gt; sendiri merupakan <em>parent<\/em> dari tag &lt;head&gt; dan &lt;body&gt;.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Selain tags kita juga harus mengenal dua properti yang biasanya dimiliki oleh sebuah tag, yaitu class dan id. Bukan merupakan kewajiban properti ini ada, tapi dengan properti ini kita bisa mengidentifikasi dengan lebih mudah suatu elemen dalam html. Sebuah elemen dapat memiliki beberapa class, dan satu class dapat disematkan kedalam beberapa elemen. Akan tetapi, setiap elemen hanya dapat memiliki satu id unik.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Ada beberapa hal yang harus kita ingat saat ingin melakukan web scraping. pertama kita harus tahu apakah website yang kita ingin ambil datanya memperbolehkan kita untuk hal tersebut? jika iya apakah data tersebut boleh digunakan untuk keperluan komersil atau hanya pengunaan pribadi. Salah satu website yang bisa kita gunakan untuk latihan adalah wikipedia.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":50} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Langkah - Langkah<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:list {\"ordered\":true} --><\/p>\r\n<ol>\r\n<li>Import semua library yang dibutuhkan<\/li>\r\n<li>tentukan alamat yang ingin kita buka, lalu akses dengan menggunakan request atau urlopen<\/li>\r\n<li>Masukkan dalam Metode beautifulsoup<\/li>\r\n<li>Inspeksi Halaman Web<\/li>\r\n<li>Ambil class dan\/atau id elemen html yang kita inginkan<\/li>\r\n<li>Gunakan metode find atau findall untuk mengambil data<\/li>\r\n<\/ol>\r\n<p><!-- \/wp:list --> <!-- wp:spacer {\"height\":40} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Beautifulsoup4<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Ada beberapa library atau modul yang bisa digunakan untuk melakukan web scraping, diantaranya:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Request<\/li>\r\n<li>BeautifulSoup4<\/li>\r\n<li>lxml<\/li>\r\n<li>Selenium<\/li>\r\n<li>Scrapy<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Yang akan kita bahas kali ini adalah BeautifulSoup. BeautifulSoup merupakan library python digunakan untuk melakukan web scraping dalam package bs4.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk menginstall bs4 bisa menggunakan pip atau conda.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>pip install beautifulsoup4<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Kita import libray yang kita butuhkan,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from urllib.request import urlopen\r\nfrom bs4 import BeautifulSoup<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>urllib.request digunakan untuk membuka url yang akan ambil datanya<\/li>\r\n<li>bs4 merupakan library yang kita gunakan untuk memanggil atau menggunakan BeautifulSoup untuk mengambil data dari HTML.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>alamat = \"https:\/\/blog.sanbercode.com\/\"\r\nhtml = urlopen(alamat)\r\ndata = BeautifulSoup(html, 'html.parser')<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Pada bagian <em>alamat<\/em> kita bisa ubah menjadi website yang kita inginkan tapi ingat, tidak semua website memperbolehkan bot untuk melakukan akses.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Sebelum memulai untuk mangambil data kita harus menentukan pada bagian mana kita akan mengambil datanya. Seperti yang disebutkan pada bagian sebelumnya, mengerti HTML dan komponen di dalamnya sangat penting. Kita ambil contoh kita akan mencoba mengambil data di website blog.sanbercode<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":11702,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-11702\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/gambar-1-1024x370.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Misal kita akan mengambil kata-kata Mengenal Dunia Programming, maka kita bisa melakukan inspeksi komponen html dengan cara klik kanan pada tulisan tersebut.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":11703,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-11703\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/gambar-2-1024x491.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:image {\"id\":11704,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-11704\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/gambar-3.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah kita klik maka akan muncul halaman inspeksi, lalu dari halaman tersebut kita mendapatkan tag &lt;a&gt; dan class = \"text-dark\". Maka data tersebut dapat kita masukan pada kode selanjutnya<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>items = data.findAll(\"a\", {\"class\":\"text-dark\"})<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>findAll digunakan untuk mencari semua tags \"a\" dan class \"text-dark\" pada halaman tersebut. Jika kita hanya ingin mengambil data dari tag pertama yang ditemukan oleh sistem, maka gunakanlah find().<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>items = data.find(\"a\", {\"class\":\"text-dark\"})<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>jika kita uji dengan menggunakan print (items) maka akan kita dapatkan hasil,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>print (items)\r\nprint (len(items))<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>[&lt;a class=\"text-dark\" href=\"https:\/\/blog.sanbercode.com\/mengenal-dunia-programming\/\"&gt;\r\n                Mengenal dunia Programming&lt;\/a&gt;, &lt;a class=\"text-dark\" href=\"https:\/\/blog.sanbercode.com\/implementasi-debugging-tools-telescope-di-laravel\/\"&gt;\r\n                Implementasi Debugging Tools Telescope di Laravel&lt;\/a&gt;, &lt;a class=\"text-dark\" href=\"https:\/\/blog.sanbercode.com\/facebook-login-tutorial-dengan-laravel-5-7-dan-socialite\/\"&gt;\r\n                Facebook Login Tutorial dengan Laravel 5.7 dan Socialite&lt;\/a&gt;, &lt;a class=\"text-dark\" href=\"https:\/\/blog.sanbercode.com\/agile-software-development-sebuah-pengenalan\/\"&gt;\r\n                Agile Software Development, Sebuah Pengenalan&lt;\/a&gt;, &lt;a class=\"text-dark\" href=\"https:\/\/blog.sanbercode.com\/knowledge-management-apa-sih\/\"&gt;\r\n                Knowledge Management, Apa sih?&lt;\/a&gt;, &lt;a class=\"text-dark\" href=\"https:\/\/blog.sanbercode.com\/server-upload-file-ke-google-drive-via-command-line\/\"&gt;\r\n                Server upload file ke google drive via command line&lt;\/a&gt;, &lt;a class=\"text-dark\" href=\"https:\/\/blog.sanbercode.com\/mockup-ui\/\"&gt;\r\n                Mockup UI&lt;\/a&gt;, &lt;a alt=\"View all posts in Backend\" class=\"text-dark\" href=\"https:\/\/blog.sanbercode.com\/category\/backend\/\"&gt;Backend&lt;\/a&gt;, &lt;a alt=\"View all posts in Devops\" class=\"text-dark\" href=\"https:\/\/blog.sanbercode.com\/category\/devops\/\"&gt;Devops&lt;\/a&gt;, &lt;a alt=\"View all posts in Frontend\" class=\"text-dark\" href=\"https:\/\/blog.sanbercode.com\/category\/frontend\/\"&gt;Frontend&lt;\/a&gt;, &lt;a alt=\"View all posts in Info\" class=\"text-dark\" href=\"https:\/\/blog.sanbercode.com\/category\/info\/\"&gt;Info&lt;\/a&gt;, &lt;a alt=\"View all posts in Management and Support\" class=\"text-dark\" href=\"https:\/\/blog.sanbercode.com\/category\/management-and-support\/\"&gt;Management and Support&lt;\/a&gt;, &lt;a class=\"text-dark\" href=\"https:\/\/blog.sanbercode.com\/server-upload-file-ke-google-drive-via-command-line\/\"&gt;\r\n                        Server upload file ke google drive via command line&lt;\/a&gt;, &lt;a class=\"text-dark\" href=\"https:\/\/blog.sanbercode.com\/telegram-notification-channel-via-laravel-5-8\/\"&gt;\r\n                        Telegram Notification Channel via Laravel 5.8&lt;\/a&gt;, &lt;a class=\"text-dark\" href=\"https:\/\/blog.sanbercode.com\/mockup-ui\/\"&gt;\r\n                        Mockup UI&lt;\/a&gt;, &lt;a class=\"text-dark\" href=\"https:\/\/blog.sanbercode.com\/knowledge-management-apa-sih\/\"&gt;\r\n                        Knowledge Management, Apa sih?&lt;\/a&gt;, &lt;a class=\"text-dark\" href=\"https:\/\/blog.sanbercode.com\/agile-software-development-sebuah-pengenalan\/\"&gt;\r\n                        Agile Software Development, Sebuah Pengenalan&lt;\/a&gt;]\r\n\r\n17<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Terdapat terlalu banyak data yang didapatkan, artinya banyak komponen html yang memiliki tag dan class yg sama. Jika kita lihat maka kita tahu ada 17 isi dari variabel items yang kita tahu ternyata adalah list. Karena hasil scrap adalah list artinya kita dapat mengambil data yang kita butuhkan dengan memberikan indeks pada variabel items. <br \/><em>Mengenal Dunia Programming<\/em> berada pada urutan pertama, artinya indeks nomor 0 maka kita tulis kembali persamaannya menjadi,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>items = data.findAll(\"a\", {\"class\":\"text-dark\"})[0]\r\nprint (items)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>akan didapatkan hasil seperti ini,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>&lt;a class=\"text-dark\" href=\"https:\/\/blog.sanbercode.com\/mengenal-dunia-programming\/\"&gt;\r\n                Mengenal dunia Programming&lt;\/a&gt;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Masih belum berbentuk seperti yang kita inginkan, yang dapat kita lakukan adalah kita bisa mengambil hanya kompenen teks dalam tag \"a\" tersebut dengan menambahkan get_text()<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>items = data.findAll(\"a\", {\"class\":\"text-dark\"})[0]\r\nprint (items.get_text())<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Akhirnya kita dapatkan teks yang kita inginkan, dari sedikit contoh ini kita tahu bahwa sangat penting untuk mengerti struktur dari html untuk dapat melakukan scraping data dari web yang kita inginkan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Kode Lengkapnya dapat dilihat di bawah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from urllib.request import urlopen\r\nfrom bs4 import BeautifulSoup\r\n\r\nalamat = \"https:\/\/blog.sanbercode.com\/\"\r\nhtml = urlopen(alamat)\r\ndata = BeautifulSoup(html, 'html.parser')\r\n\r\nitems = data.findAll(\"a\", {\"class\":\"text-dark\"})\r\nfor item in items:\r\n    print (item.get_text())\r\n<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":50} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Mengambil data Wikipedia<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-afb83662-9b37-4c00-a140-bb811b6eac53\">Sebelum bermain dengan data pada wikipedia, kita akan mengenal lebih jauh tentang beautifulsoup dan metode yang terkandung di dalamnya. Pertama kita akan menyiapkan variabel html kita<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>html_doc = \"\"\"\r\n&lt;html&gt;&lt;head&gt;&lt;title&gt;The Dormouse's story&lt;\/title&gt;&lt;\/head&gt;\r\n&lt;body&gt;\r\n&lt;p class=\"title\"&gt;&lt;b&gt;The Dormouse's story&lt;\/b&gt;&lt;\/p&gt;\r\n\r\n&lt;p class=\"story\"&gt;Once upon a time there were three little sisters; and their names were\r\n&lt;a href=\"http:\/\/example.com\/elsie\" class=\"sister\" id=\"link1\"&gt;Elsie&lt;\/a&gt;,\r\n&lt;a href=\"http:\/\/example.com\/lacie\" class=\"sister\" id=\"link2\"&gt;Lacie&lt;\/a&gt; and\r\n&lt;a href=\"http:\/\/example.com\/tillie\" class=\"sister\" id=\"link3\"&gt;Tillie&lt;\/a&gt;;\r\nand they lived at the bottom of a well.&lt;\/p&gt;\r\n\r\n&lt;p class=\"story\"&gt;...&lt;\/p&gt;\r\n\"\"\"<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Lalu kita ambil data tersebut menggunakan library beautifulsoap<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from bs4 import BeautifulSoup\r\ndata = BeautifulSoup(html_doc, 'html.parser')<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":40} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Filter<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Pada kesempatan sebelumnya kita mengetahui bahwa filter yang kita gunakan dalam metode pencarian adalah filter string terhadap tag html yang kita cari. Pada kenyataannya terdapat beberapa filter yang dapat kita pakai.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>String<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Seperti yang kita tahu, saat kita menggunakan string maka beautifulsoap akan mencari tag pada html yang memiliki nilai persis dengan string tersebut<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>data.find_all('b')\r\n#[&lt;b&gt;The Dormouse's story&lt;\/b&gt;]<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Regular Expression<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Jika tidak memiliki spesifik tag yang akan kita cari maka kita bisa memanfaatkan regular expression (regex) untuk mencari tag dengan awalan, akhiran, atau mengandung syarat yang kita tentukan. Kode dibawah akan mengembalikan semua tag yang diawali oleh huruf b.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import re\r\ndata.find_all(re.compile(\"^b\"))\r\n\r\n#[&lt;body&gt;\r\n&lt;p class=\"title\"&gt;&lt;b&gt;The Dormouse's story&lt;\/b&gt;&lt;\/p&gt;\r\n&lt;p class=\"story\"&gt;Once upon a time there were three little sisters; and their names were\r\n&lt;a class=\"sister\" href=\"http:\/\/example.com\/elsie\" id=\"link1\"&gt;Elsie&lt;\/a&gt;,\r\n&lt;a class=\"sister\" href=\"http:\/\/example.com\/lacie\" id=\"link2\"&gt;Lacie&lt;\/a&gt; and\r\n&lt;a class=\"sister\" href=\"http:\/\/example.com\/tillie\" id=\"link3\"&gt;Tillie&lt;\/a&gt;;\r\nand they lived at the bottom of a well.&lt;\/p&gt;\r\n&lt;p class=\"story\"&gt;...&lt;\/p&gt;\r\n&lt;\/body&gt;, &lt;b&gt;The Dormouse's story&lt;\/b&gt;]<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>List<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>List digunakan jika kita menginginkan pencarian pada lebih dari satu tag. beautifulsoap akan melakukan pencarian dengan semua parameter kata kunci pada list.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>data.find_all([\"a\", \"b\"])\r\n# [&lt;b&gt;The Dormouse's story&lt;\/b&gt;,\r\n#  &lt;a class=\"sister\" href=\"http:\/\/example.com\/elsie\" id=\"link1\"&gt;Elsie&lt;\/a&gt;,\r\n#  &lt;a class=\"sister\" href=\"http:\/\/example.com\/lacie\" id=\"link2\"&gt;Lacie&lt;\/a&gt;,\r\n#  &lt;a class=\"sister\" href=\"http:\/\/example.com\/tillie\" id=\"link3\"&gt;Tillie&lt;\/a&gt;]<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":40} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Search &amp; Navigasi<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4><code>find_parents()<\/code>&nbsp;and&nbsp;<code>find_parent()<\/code><\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Pada umumnya, pencarian menggunakan find dan findAll\/find_all akan memberikan hasil pencarian pada children tag\/ ke arah bawah dari data kita. find_parent akan melakukan pencarian sebaliknya yaitu naik. kita navigasikan data kita terlebih dahulu.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>data = bs(html_doc, 'html.parser')\r\ndata_baru = data.find('p')\r\nprint (data_baru)\r\n#&lt;p class=\"title\"&gt;&lt;b&gt;The Dormouse's story&lt;\/b&gt;&lt;\/p&gt;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Lalu kita akan coba mencari tag yang berada di atas tag &lt;p&gt; tersebut<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>data_2 = data_baru.find_parent()\r\nprint(data_2)\r\n#&lt;body&gt;\r\n#&lt;p class=\"title\"&gt;&lt;b&gt;The Dormouse's story&lt;\/b&gt;&lt;\/p&gt;\r\n#&lt;p class=\"story\"&gt;Once upon a time there were three little #sisters; and their names were\r\n#&lt;a class=\"sister\" href=\"http:\/\/example.com\/elsie\" #id=\"link1\"&gt;Elsie&lt;\/a&gt;,\r\n#&lt;a class=\"sister\" href=\"http:\/\/example.com\/lacie\" #id=\"link2\"&gt;Lacie&lt;\/a&gt; and\r\n#&lt;a class=\"sister\" href=\"http:\/\/example.com\/tillie\" #id=\"link3\"&gt;Tillie&lt;\/a&gt;;\r\n#and they lived at the bottom of a well.&lt;\/p&gt;\r\n#&lt;p class=\"story\"&gt;...&lt;\/p&gt;\r\n#&lt;\/body&gt;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4><code>find_next_sibling()&nbsp;and&nbsp;find_previous_sibling()<\/code><\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p><code>find_next_sibling()<\/code> digunakan untuk mencari tag apa yang ada setelah tag &lt;p&gt;. <code>find_previous_sibling()<\/code> digunakan untuk mencari tag apa yang ada sebelum tag &lt;p&gt;. tag yang dicari merupakan tag yang memiliki level yang sama.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>data = bs(html_doc, 'html.parser')\r\ndata_baru = data.find('p')\r\ndata_2 = data_baru.find_next_sibling()\r\n\r\nprint(data_2)\r\n\r\n#&lt;p class=\"story\"&gt;Once upon a time there were three little #sisters; and their names were\r\n#&lt;a class=\"sister\" href=\"http:\/\/example.com\/elsie\" #id=\"link1\"&gt;Elsie&lt;\/a&gt;,\r\n#&lt;a class=\"sister\" href=\"http:\/\/example.com\/lacie\" #id=\"link2\"&gt;Lacie&lt;\/a&gt; and\r\n#&lt;a class=\"sister\" href=\"http:\/\/example.com\/tillie\" #id=\"link3\"&gt;Tillie&lt;\/a&gt;;\r\n#and they lived at the bottom of a well.&lt;\/p&gt;\r\n<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>.<code>contents<\/code><\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Contents digunakan untuk mencari content atau tag apa saja yang berada di dalam tag yang kita tentukan. ini digunakan jika kita ingin mengambil parameter dari tag tersebut dan mengembalikannya dalam bentuk list.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>data = bs(html_doc, 'html.parser')\r\ndata_baru = data.findAll('p')[1]\r\n\r\nprint(data_baru)\r\n\r\n#&lt;p class=\"story\"&gt;Once upon a time there were three little #sisters; and their names were\r\n#&lt;a class=\"sister\" href=\"http:\/\/example.com\/elsie\" #id=\"link1\"&gt;Elsie&lt;\/a&gt;,\r\n#&lt;a class=\"sister\" href=\"http:\/\/example.com\/lacie\" #id=\"link2\"&gt;Lacie&lt;\/a&gt; and\r\n#&lt;a class=\"sister\" href=\"http:\/\/example.com\/tillie\" #id=\"link3\"&gt;Tillie&lt;\/a&gt;;\r\n#and they lived at the bottom of a well.&lt;\/p&gt;\r\n<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang kita akan coba ambil semua contents dalam tag tersebut.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>data_2 = data_baru.contents\r\nprint(data_2)\r\n\r\n#['Once upon a time there were three little sisters; and their names were\\n', &lt;a class=\"sister\" href=\"http:\/\/example.com\/elsie\" id=\"link1\"&gt;Elsie&lt;\/a&gt;, ',\\n', &lt;a class=\"sister\" href=\"http:\/\/example.com\/lacie\" id=\"link2\"&gt;Lacie&lt;\/a&gt;, ' and\\n', &lt;a class=\"sister\" href=\"http:\/\/example.com\/tillie\" id=\"link3\"&gt;Tillie&lt;\/a&gt;, ';\\nand they lived at the bottom of a well.']\r\n\r\n#atau\r\n\r\nfor item in data_2:\r\n    print(item)\r\n\r\n#Once upon a time there were three little sisters; and their names #were\r\n#\r\n#&lt;a class=\"sister\" href=\"http:\/\/example.com\/elsie\" #id=\"link1\"&gt;Elsie&lt;\/a&gt;\r\n#,\r\n#\r\n#&lt;a class=\"sister\" href=\"http:\/\/example.com\/lacie\" #id=\"link2\"&gt;Lacie&lt;\/a&gt;\r\n# and\r\n#\r\n#&lt;a class=\"sister\" href=\"http:\/\/example.com\/tillie\" #id=\"link3\"&gt;Tillie&lt;\/a&gt;\r\n#;\r\n#and they lived at the bottom of a well.\r\n<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":40} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Bermain dengan Wikipedia<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-afb83662-9b37-4c00-a140-bb811b6eac53\">Salah satu situs yang dapat menjadi sumber data eksternal data analis adalah wikipedia. wikipedia juga merupakan sumber yang baik untuk kita melatih untuk dapat \"menangkap\" data karena berbagai jenis data yang dimiliki. Kali ini kita akan mencoba untuk mengambil data tabel yang ada di wikipedia.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-5e0b431e-b01a-44ac-8e4c-73835aea891c\">Persiapan yang dilakukan sama seperti yang kita lakukan pada materi sebelumnya, pertama kita import library yang dibutuhkan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre id=\"block-8259ed4a-0522-4acc-9dd7-4f901706fd55\" class=\"wp-block-code\"><code>from urllib.request import urlopen\r\nfrom bs4 import BeautifulSoup<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-17954a05-55fd-4bd6-84f8-f5c8a715f024\">Ketikkan kode utama yang akan kita gunakan, sebagai contoh kita akan mencoba mengambil tabel <a href=\"https:\/\/en.wikipedia.org\/wiki\/List_of_brightest_stars\">List of Brightest Stars<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre id=\"block-7f6270bc-cc55-4dc8-b1d5-069224d72a59\" class=\"wp-block-code\"><code>alamat = \"https:\/\/en.wikipedia.org\/wiki\/List_of_brightest_stars\"\r\nhtml = urlopen(alamat)\r\ndata = BeautifulSoup(html, 'html.parser')<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-9bc02915-d86a-459f-a570-9f48be90bc16\">Sama seperti sebelumnya, kita coba inspeksi halaman situs untuk mendapatkan elemen yang kita butuhkan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":11752,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure id=\"block-de7edc39-6985-4aa9-bdf4-6dfd278c1e12\" class=\"wp-block-image size-large\"><img class=\"wp-image-11752\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/gambar5-1024x604.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-ab38c634-2bd1-4d92-b57f-4f555c8e4827\">Kita dapatkan tag \"table dengan class \"wikitable\" . Kita gunakan kedua informasi tersebut sebagai variabel pencarian kita.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre id=\"block-2687a4f3-ae80-4cc9-b28d-2d98b75c617e\" class=\"wp-block-code\"><code>table = data.findAll(\"table\", {\"class\":\"wikitable\"})<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-dbca3e3a-3466-47fd-91af-eee0547e19fb\">Cara yang kita lakukan untuk mengambil semua data dalam tabel tersebut adalah kita ambil perbaris lalu bergerak ambil tiap sel dari baris tersebut. Kita dapatkan untuk baris tag yang digunakan adalah \"tr\" maka kodenya dapat kita ketikkan,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre id=\"block-3c4a83be-c294-4ba4-9a00-1f8e0d61aff3\" class=\"wp-block-code\"><code>table = data.findAll(\"table\", {\"class\":\"wikitable\"})[0]\r\nrows = table.findAll(\"tr\")<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-5e2789fd-62a9-41f8-a659-6e8c07ced4c9\">Karena kita memiliki banyak baris dalam satu tabel dan banyak kolom\/sel dalam satu baris maka kita akan menggunakan perulangan atau <em>looping<\/em> untuk mendapatkan datanya. Masalahnya, jika kita inspeksi lebih lanjut ternyata dalam tabel kita terdapat dua jenis tag kolom untuk judul dan isi seperti yang diperlihatkan gambar dibawah.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":11753,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure id=\"block-2995d2a8-b572-415c-b8c8-834fc581b217\" class=\"wp-block-image size-large\"><img class=\"wp-image-11753\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/gambar7-1024x576.png\" alt=\"\" \/>\r\n<figcaption>kolom\/sel judul<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:image {\"id\":11754,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure id=\"block-34613236-d24b-4db4-853f-4caaf6cf538b\" class=\"wp-block-image size-large\"><img class=\"wp-image-11754\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/gambar8-1024x576.png\" alt=\"\" \/>\r\n<figcaption>kolom\/sel isi<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-db5a182f-2cc6-4d49-b03e-6a97a23d3afb\">Untuk judul menggunakan tag \"th\", untuk isi menggunakan tag \"td\". Sedangkan materi selama ini <em>findAll<\/em> yang kita gunakan hanya menggunakan satu tag. Apakah kita harus membuat dua <em>statement findAll<\/em>? Jawabannya adalah kita dapat menggunakan kurung siku \"[]\" sebagai solusi. Dengan berkaca pada kedua hal diatas maka kode yang akan tuliskan menjadi,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre id=\"block-2e40b755-c749-40b3-a4f1-f3c2f230a521\" class=\"wp-block-code\"><code>table = data.findAll(\"table\", {\"class\":\"wikitable\"})[0]\r\nrows = table.findAll(\"tr\")\r\nfor row in rows:\r\n    for cell in row.findAll([\"td\", \"th\"]):\r\n         print(cell.get_text())<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-464796f9-a2a5-47e5-bd87-06cb37457fb4\"><strong>Memasukkan Hasil Akhir pada List<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-b75fc432-8ec3-421a-a85d-e9cef5f60158\">Jika sebelumnya kita menggunakan print, maka kali ini kita akan mencoba menyimpan data kita pada sebuah list. Caranya cukup mudah untuk dilakukan. kita hanya perlu menentukan variabel kosong yang dideklarasikan sebagai list. karena kita memiliki dua perulangan maka kita membutuhkan dua variabel kosong, yang pertama untuk menyimpan satu beberapa sel menjadi baris dan yang kedua untuk menyimpan beberapa baris menjadi tabel. Setiap satu variabel kosong ditulis diluar satu loop. Setelah itu kita gunakan metode append untuk menuliskan data kita pada list tersebut.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre id=\"block-530f5439-5607-4610-b570-27b76db67958\" class=\"wp-block-code\"><code>hasil = []\r\nfor row in rows:\r\n    info = []\r\n    for cell in row.findAll([\"td\", \"th\"]):\r\n        info.append(cell.get_text())\r\n    hasil.append(info)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-7dee89c6-7759-41a0-bd3e-77aa97c92497\">Jika kita lakukan perintah <em>print<\/em> maka kita akan dapat melihat hasil yang telah kita dapatkan. Sekian materi untuk kesempatan kali ini. Pada hari selanjutnya kita akan membahas tentang bagaimana jika kita akan melakukan web scraping dari situs lain, misal situs data atau harga.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p id=\"block-ddee3a6f-ce86-46ad-a80a-36a074ea9e24\">&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":31} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Sumber bacaan eksternal:<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:core-embed\/wordpress {\"url\":\"https:\/\/ngodingdata.com\/tutorial-web-scraping-dengan-beautifulsoup-di-python-part-1\/\",\"type\":\"wp-embed\",\"providerNameSlug\":\"wordpress\",\"className\":\"\"} --><\/p>\r\n<figure class=\"wp-block-embed-wordpress wp-block-embed is-type-wp-embed is-provider-wordpress\">\r\n<div class=\"wp-block-embed__wrapper\">https:\/\/ngodingdata.com\/tutorial-web-scraping-dengan-beautifulsoup-di-python-part-1\/<\/div>\r\n<\/figure>\r\n<p><!-- \/wp:core-embed\/wordpress --> <!-- wp:paragraph --><\/p>\r\n<p><a href=\"https:\/\/www.crummy.com\/software\/BeautifulSoup\/bs4\/doc\/\">https:\/\/www.crummy.com\/software\/BeautifulSoup\/bs4\/doc\/<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><a href=\"https:\/\/hkalabs.com\/scraping-data-tabel-html-wikipedia-with-python\/\">Scraping Data Tabel HTML Wikipedia (with Python)<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><a href=\"https:\/\/hkalabs.com\/scraping-data-tabel-html-wikipedia-with-python\/embed\/#?secret=WwCaQrGfAN\">https:\/\/hkalabs.com\/scraping-data-tabel-html-wikipedia-with-python\/embed\/#?secret=WwCaQrGfAN<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><a href=\"https:\/\/simpleanalytical.com\/how-to-web-scrape-wikipedia-python-urllib-beautiful-soup-pandas\">https:\/\/simpleanalytical.com\/how-to-web-scrape-wikipedia-python-urllib-beautiful-soup-pandas<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><a href=\"https:\/\/towardsdatascience.com\/step-by-step-tutorial-web-scraping-wikipedia-with-beautifulsoup-48d7f2dfa52d\">https:\/\/towardsdatascience.com\/step-by-step-tutorial-web-scraping-wikipedia-with-beautifulsoup-48d7f2dfa52d<\/a><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-02-23 08:00:00","status_publish":"publish","urutan":2,"created_by":11253,"updated_by":11253,"created_at":"2020-12-13 22:25:56","updated_at":"2021-02-11 13:21:41","waktu_publish_formatted":" Selasa, 23 Februari 2021. 08:00:00 WIB."},{"id":310,"uuid":"3dac9eec-eb78-4915-8e34-eb1afb708eba","author_user_id":11253,"materi_section_id":96,"judul":"API","permalink":"api","konten":"<p><!-- wp:paragraph --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-11952\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/title_12_1-1024x192.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>API (Application Programming Interface)<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Berdasarkan wikipedia, API adalah penerjemah&nbsp;komunikasi antara klien dengan server untuk menyederhanakan implementasi dan perbaikan&nbsp;<em>software<\/em>. Atau secera sederhana API adalah teknologi yang memungkinkan 2 aplikasi atau lebih dapat berkomunikasi , tanpa melihat bentuk aplikasi tersebut, atau dengan bahasa apa aplikasi tersebut dibuat.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>REST (Representional State Transfer)<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>REST adalah suatu arsitektur metode komunikasi untuk pertukaran data yang umumnya menggunakan protokol HTTP. REST menjadikan objek\/data pada server sebagai sumber data yang dapat ditambah, diubah atau dihapus. Dan umumnya REST dapat digunakan di berbagai bahasa pemrograman.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Berdasarkan pada definisi keduanya, maka RESTful API merupakan bentuk komunikasi antar program (API) dengan menggunakan arsitektur REST, yang diantaranya menggunakan protokol HTTP. Beberapa metode HTTP yang umum digunakan, antara lain:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>GET, kegiatan menerima data.<br \/>contoh: <code>GET https:\/\/situsweb\/api\/users\/detail\/1<\/code> =&gt; mengambil data detail user dengan id = 1.<\/li>\r\n<li>POST, kegiatan pengiriman\/input data untuk diproses selanjutnya.<br \/>contoh: <code>POST https:\/\/situsweb\/api\/users<\/code> =&gt; mengirim data user.<\/li>\r\n<li>PUT, kegiatan mengubah data.<br \/>contoh <code>PUT https:\/\/situsweb\/api\/users\/update\/1<\/code> =&gt; melakukan update pada data user dengan id = 1.<\/li>\r\n<li>DELETE, kegiatan menghapus data.<br \/>contoh: <code>DELETE https:\/\/situsweb\/api\/users\/delete\/1<\/code> =&gt; menghapus data user dengan id = 1.<\/li>\r\n<\/ul>\r\n<p>&nbsp;<\/p>\r\n<p>Pada kesempatan selanjutnya kita akan menggunakan API yang disediakan oleh twitter untuk mengakses data yang dimiliki oleh twitter. Sebelum itu kita akan mencoba untuk mengambil data covid melalui publik API yang disediakan dengan menggunakan aplikasi bernama POSTMAN.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":50} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>POSTMAN<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Postman merupakan salah satu aplikasi terpopuler dalam menangani API. Untuk menggunakannya Anda bisa terlebih dahulu mendownload nya di link berikut: <a href=\"https:\/\/www.postman.com\/downloads\/\">https:\/\/www.postman.com\/downloads\/<\/a>. Setelah mendownload aplikasi Postman tersebut, lakukan instalasi dan kemudian lakukan Sign Up (bisa dilakukan melalui aplikasi atau melalui web berikut: <a href=\"https:\/\/identity.getpostman.com\/signup\">https:\/\/identity.getpostman.com\/signup<\/a>).<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah Sign Up dan berhasil masuk ke dalam aplikasi Postman, berikut tampilan yang akan Anda temukan:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image --><\/p>\r\n<figure class=\"wp-block-image\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Postman1-1024x549.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama filenya adalah Postman1-1024x549.png\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Collection<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Disarankan untuk mengelompokkan API yang akan digunakan pada satu Collection, dengan cara memilih menu \"Collection\" pada sidebar dan klik \"+ New Collection\" kemudian memasukkan nama Collection tersebut, bisa menggunakan nama Project maupun nama web \/ sumber API nya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image --><\/p>\r\n<figure class=\"wp-block-image\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Postman4-618x1024.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama filenya adalah Postman4-618x1024.png\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>REQUEST<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Selanjutnya Anda bisa menambahkan request API dengan menekan tombol \"+\" pada menu yang tersedia (1) . Selanjutnya Anda bisa memasukkan URL yang dituju pada bagian yang telah disediakan (2). Pada Postman telah disediakan berbagai method yang dapat Anda temukan pada sebelah kiri dari kolom input URL, mulai dari GET, POST, PUT, DELETE dan lainnya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image --><\/p>\r\n<figure class=\"wp-block-image\"><img src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Postman2-1024x549.png\" alt=\"Gambar ini memiliki atribut alt yang kosong; nama filenya adalah Postman2-1024x549.png\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Dibawah kolom input URL, Anda akan menemukan menu\/tab \"Params\", \"Authentication\", \"Header\", \"Body\", dan lainnya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Menu \"Params\" yang dapat digunakan untuk menambah query yang akan membuat URL yang digunakan bertambah panjang (biasanya diawali dengan \"?\").<\/li>\r\n<li>Pada menu \"Authentication\", Anda akan menemukan metode Auth yang terkadang diperlukan untuk dapat mengakses suatu API (umumnya menggunakan API Key, Bearer Token, atau OAuth tergantung sumber\/penyedia API).<\/li>\r\n<li>Pada menu \"Header\", Anda juga dapat mengatur Authentication dengan menggunakan key \"Authentication\" dan value dari Authentication yang diperlukan (misal bearer {token}). Pada bagian ini biasanya dimasukkan informasi tambahan yang digunakan oleh back-end\/server untuk mengatur bagaimana cara response akan diberikan.<\/li>\r\n<li>Menu \"Body\", yang biasa diperlukan ketika menggunakan method \"POST\" atau mengirim suatu form kepada back-end\/server.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:spacer {\"height\":50} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Melakukan Pengambilan Data via API<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Pada kesempatan kali ini kita akan mencoba untuk melakukan pengambilan data covid via postman. Silahkan kunjungi link di bawah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><a href=\"https:\/\/covid-19-apis.postman.com\/\">https:\/\/covid-19-apis.postman.com\/<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Lalu masuk kebagian collection,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":11944,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-11944\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/materi_12_1-1024x511.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah itu pilih featured API Collections (memilih bagian mana saja akan mengarahkan kita pada halaman yg sama).<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Kita coba pilih NovelCOVID API, lalu pilih doc untuk melihat dokumentasi. Kita akan mendapatkan tampilan seperti di bawah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":11945,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-11945\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/materi_12_2-1024x486.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Kita akan mencoba untuk mendapatkan data untuk semua continents, salin alamat yang ditunjukan pada dokumen<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>https:\/\/corona.lmao.ninja\/v2\/continents?yesterday=true&amp;sort<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Lalu kita buka Postman yang telah kita install dan masukkan alamat API yang telah kita salin<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":11946,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-11946\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/materi_12_3-1024x316.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Jangan lupa untuk memastikan metode yang kita pilih adalah GET, seperti yang tertulis pada dokumentasi. Lalu klik tombol biru <em><strong>Send<\/strong><\/em>. Maka akan didapatkan hasil seperti pada gambar di bawah.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":11947,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-11947\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/materi_12_4-1024x526.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Seperti yang terlihat data yang kita terima berbentuk JSON dan ditampilkan pada bagian <em>body<\/em>. Jika kita ingin mengunduh data yang ditampilkan kita bisa memilih tanda panah pada sebelah tombol<em> <strong>Send<\/strong><\/em> dan pilih <em><strong>Send and Download<\/strong><\/em><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":11948,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-11948\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/materi_12_5-1024x177.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":50} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:paragraph --><\/p>\r\n<p>Link Video Eksternal:<br \/><br \/><a href=\"https:\/\/www.youtube.com\/watch?v=vQJJ_K1JbEA\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\"REST API #1 APA ITU API ? - Web Programming UNPAS (opens in a new tab)\">REST API #1 APA ITU API ? - Web Programming UNPAS<\/a><br \/><br \/><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Sumber Bacaan :<br \/><br \/><a href=\"https:\/\/www.freecodecamp.org\/news\/what-is-an-api-in-english-please-b880a3214a82\/\">What is an API? In English, please.<\/a><\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-02-24 08:00:00","status_publish":"publish","urutan":3,"created_by":11253,"updated_by":11253,"created_at":"2020-12-13 22:27:39","updated_at":"2021-02-24 01:15:00","waktu_publish_formatted":" Rabu, 24 Februari 2021. 08:00:00 WIB."},{"id":311,"uuid":"97133e1c-b5a7-4b54-8938-332b5cfb5213","author_user_id":11253,"materi_section_id":96,"judul":"Twitter's API","permalink":"twitter-s-api","konten":"<!-- wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>Machine Learning dan juga data mining tidak pernah jauh dari yang dinamakan data. Semakin banyak data valid yang terkumpul tentu saja hasil analisis akan menjadi lebih terpercaya. Maka dari itu teknik pengumpulan data menjadi salah satu hal yang penting. Pertanyaannya adalah dari mana data itu bisa didapatkan? Media sosial. Media sosial memegang salah satu peranan penting dalam dinamisasi data saat ini. kita bisa mendapatkan banyak sekali data untuk kebutuhan analisis di sosial media. Salah satu sosial media yang dapat kita gunakan adalah twitter.<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:spacer {\"height\":36} -->\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<!-- \/wp:spacer -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph {\"fontSize\":\"medium\"} -->\r\n<p class=\"has-medium-font-size\"><strong>Kenapa Twitter?<\/strong><\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>Twitter merupakan sumber raksasa data. sifatnya yang memiliki mayoritas open user dan data yang dapat diambil merupakan nilai plus tersendiri. Twitter API juga memiliki banyak variasi endpoint yang membuat pengambilan data akan menjadi sangat menyenangkan bagi para analis.<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>Salah satu manfaat dari hal ini adalah kita dapat melihat sentimen publik terhadap suatu produk atau perusahaan yang kita miliki. Kita juga dapat mentarget cuitan dari satu user khusus dan menentukan lokasi pencarian kita secara spesifik.<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>Twitter, merupakan tambang emas dimana kita bisa melihat pandangan masyarakat secara umum.<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:spacer {\"height\":36} -->\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<!-- \/wp:spacer -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph {\"fontSize\":\"medium\"} -->\r\n<p class=\"has-medium-font-size\"><strong>Mempersiapkan Akun Twitter Developer<\/strong><\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:image {\"id\":12025,\"sizeSlug\":\"large\"} -->\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-12025\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/twitter1-1024x474.png\" alt=\"\" \/><\/figure>\r\n<!-- \/wp:image -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Masuk ke <a href=\"https:\/\/developer.twitter.com\/en\">https:\/\/developer.twitter.com\/<\/a><\/li>\r\n<li>Log in dengan akun twitter kalian<\/li>\r\n<li>Klik tombol apply di kanan atas<\/li>\r\n<li>lalu klik tombol <em>apply for a developer account<\/em> seperti pada gambar di atas.<\/li>\r\n<li>Lalu kalian bisa mengisi alasan kenapa kalian ingin mendaftar, pilih saja <em>explore the API<\/em><\/li>\r\n<\/ul>\r\n<!-- \/wp:list -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:image {\"id\":12024,\"sizeSlug\":\"large\"} -->\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-12024\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/twitter3-1024x259.png\" alt=\"\" \/><\/figure>\r\n<!-- \/wp:image -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Jangan Lupa untuk mengisi nomer telepon,<\/li>\r\n<li>lalu pastikan kalian memilih individual developer account<\/li>\r\n<li>Setelah itu kalian akan diberikan beberapa pertanyaan terkait motivasi mendaftar akun developer. Jawab dengan jujur dan menggunakan bahasa inggris.<\/li>\r\n<li>Ikuti langkah-langkah selanjutnya hingga pendaftaran selesai.<\/li>\r\n<\/ul>\r\n<!-- \/wp:list -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:image {\"id\":12026,\"sizeSlug\":\"large\"} -->\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-12026\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/twitter4-1024x421.png\" alt=\"\" \/><\/figure>\r\n<!-- \/wp:image -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Setelah selesai jangan lupa untuk masuk ke dashboard , dan lakukan konfigurasi API key &amp; secret, Bearer token, dan Access Token &amp; Secret. Simpan semuanya dalam sebuah file khusus agar tidak terlupa.<\/li>\r\n<li>Kita akan membutuhkan semua data tersebut diatas, jadi diharapkan tidak lupa atau buka situs\/file untuk kemudahan saat pengisian.<\/li>\r\n<\/ul>\r\n<!-- \/wp:list -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:spacer {\"height\":36} -->\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<!-- \/wp:spacer -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph {\"fontSize\":\"medium\"} -->\r\n<p class=\"has-medium-font-size\"><strong>Postman &amp; Twitter<\/strong><\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>Sekarang kita akan mencoba untuk memanfaatkan aplikasi postman untuk lebih mengenal API pada twitter. Kita dapat membaca keterangan lebih lengkap di,<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph {\"align\":\"center\"} -->\r\n<p class=\"has-text-align-center\"><a href=\"https:\/\/developer.twitter.com\/en\/docs\/twitter-api\/early-access\">https:\/\/developer.twitter.com\/en\/docs\/twitter-api\/early-access<\/a><\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>Pada kesempatan kali ini kita akan mencoba satu API <em>endpoint<\/em> yaitu User. Sebelumnya mari kita konfigurasikan terlebih dahulu aplikasi postman kita.<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:list -->\r\n<ul>\r\n<li>Buat sebuah halaman baru<\/li>\r\n<li>masuk pada tab <em>Autho<\/em>rization lalu pada dropdown type pilih <em>Bearer Token<\/em>.<\/li>\r\n<li>Isikan bearer token kalian pada isian di sebelah kanan.<\/li>\r\n<\/ul>\r\n<!-- \/wp:list -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:image {\"id\":12027,\"sizeSlug\":\"large\"} -->\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-12027\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/twitter6.png\" alt=\"\" \/>\r\n<figcaption><\/figcaption>\r\n<\/figure>\r\n<!-- \/wp:image -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>Terdapat 4 jalur <em>endpoint <\/em>untuk mendapatkan data user yang kita inginkan, mereka adalah<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>https:\/\/api.twitter.com\/2\/users?ids= #1\r\nhttps:\/\/api.twitter.com\/2\/users\/:id #2\r\nhttps:\/\/api.twitter.com\/2\/users\/by?username= #3\r\nhttps:\/\/api.twitter.com\/2\/users\/by\/username\/:username #4<\/code><\/pre>\r\n<!-- \/wp:code -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>Penjelasan masing-masing endpoint sebagai berikut<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:list {\"ordered\":true} -->\r\n<ol>\r\n<li>Digunakan untuk mengambil data banyak user menggunakan id mereka. Dalam hal ini id merupakan numerik. isi semua id di dalam query param dipisahkan oleh koma<\/li>\r\n<li>Digunakan untuk mengambil data satu user menggunakan id mereka.<\/li>\r\n<li>Digunakan untuk mengambil data banyak user menggunakan username mereka (biasanya dimulai dengan @). Isikan semua username di dalam query param dipisahkan oleh koma<\/li>\r\n<li>Digunakan untuk mengambil data satu user menggunakan username mereka (biasanya dimulai dengan @).<\/li>\r\n<\/ol>\r\n<!-- \/wp:list -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>Query parameters (ditulis dibagian params)<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:list -->\r\n<ul>\r\n<li>user.fields - sub parameter yang ingin ditampilkan [ <code>created_at<\/code>,&nbsp;<code>description<\/code>,&nbsp;<code>entities<\/code>,&nbsp;<code>id<\/code>,&nbsp;<code>location<\/code>,&nbsp;<code>name<\/code>,&nbsp;<code>pinned_tweet_id<\/code>,&nbsp;<code>profile_image_url<\/code>,&nbsp;<code>protected<\/code>,&nbsp;<code>public_metrics<\/code>,&nbsp;<code>url<\/code>,&nbsp;<code>username<\/code>,&nbsp;<code>verified<\/code>,&nbsp;<code>withheld<\/code> ] #pilih yang kalian inginkan, batasi dengan koma<\/li>\r\n<\/ul>\r\n<!-- \/wp:list -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>Contohnya disini kita akan mencoba mencari user id pak Jokowi dan kita ingin mengetahui deskripsi dan lokasi akun pak Jokowi maka tampilan postman kita menjadi,<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:image {\"id\":12043,\"sizeSlug\":\"large\"} -->\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-12043\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/materi_13_1-1.png\" alt=\"\" \/><\/figure>\r\n<!-- \/wp:image -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>Pada path variabel, isikan username yang ingin lihat pada kolom value baris key username. Pada query params, isian user.fields dimasukkan ke kolom key dan location,description dimasukkan ke kolom value.<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>Lalu akan didapatkan hasil,<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>{\r\n    \"data\": {\r\n        \"description\": \"Akun Twitter resmi Presiden Republik Indonesia Joko Widodo \ud83c\uddee\ud83c\udde9. \\n#MenujuIndonesiaMaju\",\r\n        \"username\": \"jokowi\",\r\n        \"id\": \"366987179\",\r\n        \"name\": \"Joko Widodo\",\r\n        \"location\": \"Jakarta\"\r\n    }\r\n}<\/code><\/pre>\r\n<!-- \/wp:code -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:spacer {\"height\":38} -->\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<!-- \/wp:spacer -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph {\"fontSize\":\"medium\"} -->\r\n<p class=\"has-medium-font-size\"><strong>Twitter &amp; Python<\/strong><\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>Untuk dapat mengambil data dari twitter kita akan memanfaatkan sebuah library yang bernama tweepy. pertama kita instal terlebih dahulu library tersebut di mesin kita.<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>pip install tweepy<\/code><\/pre>\r\n<!-- \/wp:code -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>Pertama mari kita import library kita dan juga semua key yang kita butuhkan.<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>import tweepy\r\nconsumer_key = \"wXXXXXXXXXXXXXXXXXXXXXXX1\"\r\nconsumer_secret = \"qXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXh\"\r\naccess_token = \"9XXXXXXXX-XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXi\"\r\naccess_token_secret = \"kXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXT\"<\/code><\/pre>\r\n<!-- \/wp:code -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>Lalu kita buat variabel untuk autentikasi dan akses token<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>auth = tweepy.OAuthHandler(consumer_key, consumer_secret)\r\nauth.set_access_token(access_token, access_token_secret)\r\napi = tweepy.API(auth)<\/code><\/pre>\r\n<!-- \/wp:code -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>Sebagai contoh pertama mari kita lihat apa yang ada di timeline kita,<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>mytimeline = api.home_timeline()\r\nfor tweet in mytimeline:\r\n   print (tweet.text)<\/code><\/pre>\r\n<!-- \/wp:code -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:list -->\r\n<ul>\r\n<li><em>home_timeline<\/em> - akan memanggil tweet di dalam timeline kita<\/li>\r\n<li><em>tweet.text<\/em> - dipakai untuk mengambil teks seperti get_text() saat kita melakukan web scraping<\/li>\r\n<\/ul>\r\n<!-- \/wp:list -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>Untuk mengambil data dari suatu user tertentu kita bisa dengan menggunakan <em>user_timeline <\/em>lalu kita bisa menentukan parameter <em>id<\/em>. Untuk mendapatkan jumlah tweet yang ingin kita ambil kita bisa menggunakan variabel <em>count<\/em>. Mari kita coba untuk mengambil tweet yang dikeluarkan pak Jokowi.<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>nama = \"jokowi\"\r\njumlahtweet = 20\r\n\r\nhasil = api.user_timeline(id=nama, count=jumlahtweet)\r\n\r\nfor tweet in hasil:\r\n   print (tweet.text)<\/code><\/pre>\r\n<!-- \/wp:code -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>Maka inilah hasil yang akan kita dapatkan,<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>Selamat bekerja Bapak Isdianto sebagai Gubernur Kepulauan Riau. https:\/\/t.co\/Nnq13QJEWU\r\nTarget kita jelas: angka kematian serendah-rendahnya, angka kesembuhan setinggi-tingginya, dan kendalikan laju pert&hellip; https:\/\/t.co\/8rnjG1gQXw\r\nKasus global Covid-19 sudah 15,8 juta dengan kematian 640 ribu jiwa. Kita harus menyikapinya dengan bekerja luar bi&hellip; https:\/\/t.co\/kZrCu345rB\r\nDi luar tantangan dan kesulitan yang datang bersama pandemi Covid-19, selalu ada peluang-peluang baru.\r\n\r\nHanya mere&hellip; https:\/\/t.co\/kZyhybqAH9\r\nSaya dan Ibu negara mengikuti pemeriksaan kesehatan berkala, termasuk uji swab Covid-19 yang kami jalani kemarin so&hellip; https:\/\/t.co\/eWpVWJpBxv\r\nMengayuh sepeda di akhir pekan, di area seputar Istana Bogor, lumayan membuat tubuh berkeringat. Dengan berolahraga&hellip; https:\/\/t.co\/bJlvkBHuQj\r\nSetelah 42 tahun berdiri, Masjid Istiqlal kini bersolek lebih megah setelah direnovasi besar-besaran oleh Kementeri&hellip; https:\/\/t.co\/YVJO9wHpwH\r\nDemi mengurangi beban koperasi dan UMKM akibat pandemi Covid-19, pemerintah menyiapkan sejumlah kebijakan.\r\n\r\nDi ant&hellip; https:\/\/t.co\/hDMzisWBcT\r\nPesan untuk anak-anakku di seluruh Tanah Air: sabar. Sekarang ini, anak-anak sedang belajar hal baru: beradaptasi d&hellip; https:\/\/t.co\/8a8zGYnjlj\r\nWishing good health for His Majesty King Salman bin Abdul Aziz, Custodian of the Two Holy Mosques. May Allah reward&hellip; https:\/\/t.co\/cPcCPubOUq\r\nLebih 70 juta anak Indonesia merasakan dampak pandemi Covid-19. Mereka tak bebas bermain bersama kawan sebaya, dan&hellip; https:\/\/t.co\/yjoxIb8NKB\r\nSaya kembali bertemu dan menyerahkan secara langsung bantuan modal kerja kepada 60 pelaku usaha mikro dan kecil dar&hellip; https:\/\/t.co\/udMwLgClSO\r\nKita akan melaksanakan uji klinis vaksin Covid-19 tahap ketiga dengan melibatkan 1.620 sukarelawan. Proses dan prot&hellip; https:\/\/t.co\/N9x6LSf3le\r\nMeski kita tengah disibukkan dengan penanganan pandemi Covid-19, saya tetap menginstruksikan agar layanan diagnosti&hellip; https:\/\/t.co\/Bzyb9Tulf6\r\nTahun 2018, diperkirakan ada 845.000 penduduk Indonesia  mengidap TBC, dan 98.000 orang meninggal karena penyakit m&hellip; https:\/\/t.co\/B52ffC89BB\r\nDi tengah upaya penanganan Covid-19 serta dampak yang ditimbulkannya, kecepatan penggunaan anggaran yang diperoleh&hellip; https:\/\/t.co\/gUpdfZjC65\r\nSelama 4 tahun berturut-turut pemerintah pusat berhasil mempertahankan opini Wajar Tanpa Pengecualian dari BPK.\r\n\r\nK&hellip; https:\/\/t.co\/rgon2zp5RK\r\nDengan tim terpadu ini, perencanaan dan eksekusi program-program penanganan Covid dan pemulihan ekonomi bisa berjal&hellip; https:\/\/t.co\/LVSDtH4Vv6\r\nPemerintah membentuk satu tim terpadu Penanganan Covid-19 dan Pemulihan Ekonomi Nasional yang bertugas merumuskan k&hellip; https:\/\/t.co\/K7yMY1AmlG\r\nMau keluar rumah?\r\nPakai masker.\r\n\r\nHendak jogging atau bersepeda?\r\nPakai masker.\r\n\r\nTak ada ruang untuk melenggang t&hellip; https:\/\/t.co\/58R9TXYgIL<\/code><\/pre>\r\n<!-- \/wp:code -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>Dalam kesempatan kali ini kita telah mempelajari langkah-langkah untuk menggunakan RESTful API dasar pada platform twitter. Untuk melakukan pengecekan kita dapat menggunakan Postman dan untuk pengambilan data kita dapat menggunakan library tweepy pada python.<\/p>\r\n<!-- \/wp:paragraph --><!-- wp:paragraph --><!-- \/wp:paragraph -->","waktu_publish":"2021-02-25 08:00:00","status_publish":"publish","urutan":4,"created_by":11253,"updated_by":11253,"created_at":"2020-12-13 22:29:50","updated_at":"2021-02-11 13:22:09","waktu_publish_formatted":" Kamis, 25 Februari 2021. 08:00:00 WIB."},{"id":312,"uuid":"b01b54e6-86e7-42f3-970b-bb6d6d8ee7bd","author_user_id":11253,"materi_section_id":96,"judul":"Text Pre-Processing","permalink":"text-pre-processing","konten":"<!-- wp:paragraph --><!-- \/wp:paragraph --><!-- wp:paragraph -->\r\n<p>Salah satu teknik untuk memperbaiki validitas dari data yang kita miliki adalah dengan melakukan pra-prosesi untuk teks. Artinya kita akan membersihkan data teks kita dari beberapa item yang sebenarnya tidak dibutuhkan saat mesin kita akan melakukan analisa. Tidak semua pra-prosesi ini dibutuhkan, penggunaannya disesuikan dengan kebutuhan masing-masing. Karena tidak selamanya sedikit itu menguntungkan.<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:spacer {\"height\":30} -->\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<!-- \/wp:spacer -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:heading {\"level\":3,\"backgroundColor\":\"vivid-cyan-blue\",\"textColor\":\"white\"} -->\r\n<h3 class=\"has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\">Case folding<\/h3>\r\n<!-- \/wp:heading -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>Case folding adalah teknik pembersihan dimana kita hanya menyisakan kata-kata dengan alfabet kecil, artinya semua angka, tanda baca, huruf besar, alamat situs, dsb diganti\/dihilangkan.<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:spacer {\"height\":30} -->\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<!-- \/wp:spacer -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:heading {\"level\":4} -->\r\n<h4>Mengubah Teks Menjadi Lowercase<\/h4>\r\n<!-- \/wp:heading -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>Mengubah suatu teks menjadi huruf kecil sangatlah penting saat akan melakukan pembersihan karena ini akan memudahkan kita dalam pencocokan. Contohnya saja saat akan melakukan pencarian kecamatan 'Astanaanyar' tidak dapat dilakukan jika pada dokumen ternyata tertulis 'AstanaAnyar'. Tapi akan lebih mudah saat kita semua teks kita buat hurufnya menjadi kecil sehingga kita tahu yang kita cari adalah 'astanaanyar'.<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>Untuk melakukan hal ini kita dapat memanfaatkan fungsi pada python, yaitu lowercase()<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>kalimat = \"Rendang adalah makanan terenak nomer 1 di Dunia yang berasal dari Indonesia.\"\r\nlower_case = kalimat.lower()\r\nprint(lower_case)\r\n<\/code><\/pre>\r\n<!-- \/wp:code -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>Maka akan menghasilkan,<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code># \"rendang adalah makanan terenak nomer 1 di dunia yang berasal dari indonesia.\"<\/code><\/pre>\r\n<!-- \/wp:code -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:spacer {\"height\":30} -->\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<!-- \/wp:spacer -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:heading {\"level\":4} -->\r\n<h4>Menghapus angka<\/h4>\r\n<!-- \/wp:heading -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>Pada beberapa kasus, angka merupakan hal yang tidak terlalu dibutuhkan terutama saat kita menilai analisis sentimen. Contohnya adalah kalimat<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>'Budi menyukai 5 apel'<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>dan<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>'Budi menyukai apel'<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>Tidak terlalu berbeda dan memiliki nilai sentimen yang sama yaitu positif. Hal ini dikarenakan kata 'menyukai' lebih penting saat akan melakukan analisis sentimen.<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>Untuk menghilangkan angka kita dapat memanfaatan modul re (reguler expression) yang dimiliki python<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>import re\r\n\r\nkalimat = \"Rendang adalah makanan terenak nomer 1 di Dunia yang berasal dari Indonesia.\"\r\n\r\nhasil = re.sub(r\"\\d+\", \"\", kalimat)\r\nprint(hasil)<\/code><\/pre>\r\n<!-- \/wp:code -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>re.sub merupakan fungsi yang digunakan untuk melakukan penggantian pada suatu kalimat. Pada fungsi ini terdapat 3 variabel yang harus dimasukkan.<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>variabel pertama adalah variabel yang akan diganti, pada kasus ini kita menggunakan \"\\d+\" yang artinya kita akan mencari angka (decimal) pada kalimat, '+' artinya dia akan mengikutsertakan karakter setelah angka tersebut yang tidak dipisah oleh spasi. (misal, 1a, 2hari).<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>variabel kedua adalah variabel pengganti yang kita inginkan, pada kasus ini kita menggunakan \"\". Ini artinya kita tidak menggantinya dengan karakter apapun dan hanya menghapusnya.<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>variabel ketiga adalah data teks yang akan kita olah, pada kasus ini adalah variabel 'kalimat'.<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>fungsi di atas saat kita tampilkan akan menghasilkan,<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>#Rendang adalah makanan terenak nomer di Dunia yang berasal dari Indonesia.\"<\/code><\/pre>\r\n<!-- \/wp:code -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:spacer {\"height\":30} -->\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<!-- \/wp:spacer -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:heading {\"level\":4} -->\r\n<h4>Menghapus tanda baca<\/h4>\r\n<!-- \/wp:heading -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>Sama halnya dengan angka, tanda baca dalam kalimat tidak memiliki pengaruh pada&nbsp;saat kita akan melakukan analisis sentiment. Menghapus tanda baca seperti [!&rdquo;#$%&amp;&rsquo;_`~] dapat dilakukan di pyhton dengan memanfaatkan modul string.<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>import str\r\n\r\nkalimat = \"membaca&amp; adalah__ kunci dari kehidupan!!\"\r\nhasil = kalimat.translate(str.maketrans(\"\",\"\",string.punctuation))\r\nprint(hasil)<\/code><\/pre>\r\n<!-- \/wp:code -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>Maka hasilnya adalah,<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>#membaca adalah kunci dari kehidupan<\/code><\/pre>\r\n<!-- \/wp:code -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:spacer {\"height\":30} -->\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<!-- \/wp:spacer -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:heading {\"level\":4} -->\r\n<h4>Menghapus whitespaces<\/h4>\r\n<!-- \/wp:heading -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>Sering kali saat kita mengambil data dengan menggunakan teknik webscraping atau mengambil via api langsung dari twitter karakter seperti newline (\\n) atau newtab (\\t) masih sering kita dapatkan padahal hal tersebut tidak kita butuhkan. Hal ini dapat kita hilangkan dengan memanfaatkan metode strip pada string.<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>kalimat = \" \\t membaca ada kunci\\t \"\r\nhasil = kalimat.strip()\r\nprint(hasil)<\/code><\/pre>\r\n<!-- \/wp:code -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>maka akan menghasilkan,<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>#membaca adalah kunci<\/code><\/pre>\r\n<!-- \/wp:code -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:spacer {\"height\":30} -->\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<!-- \/wp:spacer -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:heading {\"level\":3,\"backgroundColor\":\"vivid-cyan-blue\",\"textColor\":\"white\"} -->\r\n<h3 class=\"has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\">Tokenizing<\/h3>\r\n<!-- \/wp:heading -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>Tokenizing adalah teknik pemisahan sebuah kalimat menjadi kata per kata yang biasa disebut token. Contohnya adalah kalimat,<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>Aku bermain sepakbola di lapangan<\/code><\/pre>\r\n<!-- \/wp:code -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>menjadi<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>['aku','bermain','sepakbola','di','lapangan']<\/code><\/pre>\r\n<!-- \/wp:code -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>Fungsinya adalah agar kita dapat lebih mudah melakukan analisis data terhadap kata yang keluar. Misalkan kita ingin menghitung kata apa yang sering keluar, berapa kali kata tersebut keluar dan semacamnya. Hal ini dapat kita lakukan dengan memanfaatkan fungsi split.<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>kalimat = \"Budi suka bermain bola\"\r\npisah = kalimat.split()\r\nprint(pisah)<\/code><\/pre>\r\n<!-- \/wp:code -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>maka akan menghasilkan,<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>#['Budi','suka','bermain','bola']<\/code><\/pre>\r\n<!-- \/wp:code -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:spacer {\"height\":30} -->\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<!-- \/wp:spacer -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:heading {\"level\":3,\"backgroundColor\":\"vivid-cyan-blue\",\"textColor\":\"white\"} -->\r\n<h3 class=\"has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\">Filtering (Stopword)<\/h3>\r\n<!-- \/wp:heading -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>Filtering adalah menghilangkan kata-kata yang tidak terpakai atau banyak digunakan dari kalimat (stopword). Kata tersebut bisa kata sambung atau kata ganti orang, contohnya<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>Aku menyukai masakan di restoran depan kantor<\/code><\/pre>\r\n<!-- \/wp:code -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>menjadi,<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>Menyukai masakan restoran kantor<\/code><\/pre>\r\n<!-- \/wp:code -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>Hal ini dilakukan karena sama seperti angka kata sambung kadang tidak terlalu berpengaruh pada saat kita akan melakukan analisis sentiment.<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>query = 'budi dan ani menyukai makanan jepang dan china'\r\nstopwords = ['dan']\r\nquerywords = query.split()\r\n\r\nresultwords  = [word for word in querywords if word not in stopwords]\r\nresult = ' '.join(resultwords)\r\n\r\nprint(result)<\/code><\/pre>\r\n<!-- \/wp:code -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>Maka akan menghasilkan,<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>#budi ani menyukai makanan jepang china<\/code><\/pre>\r\n<!-- \/wp:code -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>Yang harus diingat pada saat melakukan stopword adalah kadang tidak semua kasus kita harus melakukan stopword, terutama pada kasus yang kita ingin melihat makna suatu kalimat. Pertimbangan pemakaian filtering ini tergantung pada user.<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:spacer {\"height\":30} -->\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<!-- \/wp:spacer -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:heading {\"level\":3,\"backgroundColor\":\"vivid-cyan-blue\",\"textColor\":\"white\"} -->\r\n<h3 class=\"has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\">Stemming<\/h3>\r\n<!-- \/wp:heading -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>Stemming adalah teknik dimana kita mengembalikan semua kata ke dalam bentuk dasarnya. contohnya,<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>Ayah membeli dua buah bola berwarna merah di tempat penjualan mainan.<\/code><\/pre>\r\n<!-- \/wp:code -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>menjadi,<\/p>\r\n<!-- \/wp:paragraph -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:code -->\r\n<pre class=\"wp-block-code\"><code>Ayah beli dua buah bola warna merah di tempat jual main<\/code><\/pre>\r\n<!-- \/wp:code -->\r\n<p>&nbsp;<\/p>\r\n<!-- wp:paragraph -->\r\n<p>Kita akan menggunakan bantuan library khusus untuk melakukan stemming yang akan dijelaskan pada kesempatan selanjutnya.<\/p>\r\n<!-- \/wp:paragraph --><!-- \/wp:paragraph -->","waktu_publish":"2021-02-26 08:00:00","status_publish":"publish","urutan":5,"created_by":11253,"updated_by":11253,"created_at":"2020-12-13 22:31:20","updated_at":"2021-02-11 13:22:36","waktu_publish_formatted":" Jumat, 26 Februari 2021. 08:00:00 WIB."}]},{"id":115,"uuid":"89633c4a-26cb-4e26-bb83-d6ebd90578cc","materi_id":10,"nama":"Materi Pekan 3","permalink":"materi-pekan-3","urutan":3,"created_by":11253,"updated_by":11253,"created_at":"2020-12-20 19:03:12","updated_at":"2021-01-28 12:43:03","posting":[{"id":382,"uuid":"21fb797b-fca0-43f2-9596-08a7d989ea3a","author_user_id":11253,"materi_section_id":115,"judul":"NLTK & Sastrawi","permalink":"nltk-sastrawi","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Pada Kesempatan sebelumya kita telah mempelajari tentang analisis sentimen sederhana dengan menggunakan dataset kata positif dan negatif. Teknik itu penting untuk kita yang belum memiliki dataset tweet yang telah terlabel sehingga kita tidak dapat melakukan learn jika ingin menggunakan algoritma mesin.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Seperti yang kita pelajari sebelumnya, kemampuan kita untuk melakukan pra-proses terhadap teks yang akan analisis menjadi sangat penting. Alasannya adalah karena itu akan mengurangi jumlah noise dalam data dan pada beberapa kesempatan mengurangi beban kerja dari mesin kita.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Ada dua library yang dapat kita gunakan, pertama adalah NLTK dan kedua adalah Sastrawi.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":50} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>NLTK<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>NLTK adalah kependekan dari <em>Natural Language Tool Kit<\/em>, sebuah library yang digunakan untuk memudahkan kita dalam melakukan pengolahan terhadap bahasa. Beberapa kemampuan yang dimiliki oleh NLTK diantaranya adalah,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Tokenize kedalam kalimat atau kata<\/li>\r\n<li>Stopwords<\/li>\r\n<li>Stemming atau pengembalian ke dalam bentuk dasar<\/li>\r\n<li>Corpus<\/li>\r\n<li>Dll<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Salah satu library yang mumpuni saat kita akan melakukan kegiatan NLP atau <em>Natural Language Processing<\/em>. Akan tetapi, salah satu kekurangan dari library ini adalah dukungannya yang lebih berat ke dalam bahasa inggris, sehingga pengembangan dalam bahasa indonesia masih perlu dilakukan lagi.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk melakukan instalasi pada python kita dapat memanfaatkan pip,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>pip install nltk<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>lau kita install semua library yang kita butuhkan,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>python -m nltk.downloader popular<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Tokenize<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Tokenize dalam NLTK dapat dilakukan ke dalam dua bagian, yaitu kalimat dan kata. Untuk melakukan tokenize kalimat kita menggunakan, metode sent_tokenize, sedangkan untuk melakukan tokenize kata kita akan menggunakan word_tokenize<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from nltk.tokenize import sent_tokenize, word_tokenize\r\n\r\nkalimat = 'Saya senang bermain bola. Adik saya senang bermain basket.'<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Jika kita coba lakukan tokenize kalimat ke dalam kalimat tersebut maka kan menghasilkan,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>t_kalimat = sent_tokenize(kalimat)\r\nprint (t_kalimat)\r\n#['Saya senang bermain bola.', 'Adik saya senang bermain basket.']<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Jika kita coba lakukan tokenize kata ke dalam kalimat tersebut maka kan menghasilkan,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>t_kata = word_tokenize(kalimat)\r\nprint (t_kata)\r\n#['Saya', 'senang', 'bermain', 'bola', '.', 'Adik', 'saya', 'senang', 'bermain', 'basket', '.']<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Stopwords<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Stopwords adalah kata-kata yang biasanya tidak memiliki arti khusus dalam sebuah kalimat dan sering keluar dalam kalimat, seperti aku, yang, dia, akan, dsb. NLTK memiliki dataset stopword selain bahasa inggris juga bahasa indonesia.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from nltk.corpus import stopwords\r\n\r\nenglish_s = stopwords.words('english')\r\nindonesia_s = stopwords.words('indonesian')\r\n\r\nprint(len(english_s), \"stopwords:\", english_s)\r\nprint(len(indonesia_s), \"stopwords:\", indonesia_s)\r\n\r\n#179 stopwords: ['i', 'me', 'my', 'myself', 'we', 'our', 'ours', 'ourselves',...]\r\n#758 stopwords: ['ada', 'adalah', 'adanya', 'adapun', 'agak', 'agaknya', 'agar', 'akan',...]<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Stemming<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Stemming adalah mengembalikan ke dalam kata dasar. Pada library NLTK kemampuan ini masih terbatas pada bahasa inggris.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from nltk.stem import PorterStemmer\r\n \r\nst = PorterStemmer()\r\nprint(st.stem('monitoring'))\r\n# monitor\r\nprint(st.stem('stemmed'))\r\n#stem<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":50} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Sastrawi<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Sastrawi adalah library NLP yang dikhususkan untuk bahasa indonesia. Untuk awal mulanya sastrawi diperuntukan untuk bahasa pemograman PHP, akan tetapi selanjutnya dilakukan juga pengalihan ke dalam bahasa pemograman python.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>untuk melakukan instalasi cukup dengan<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>pip install PySastrawi<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Salah satu kelebihan sastrawi yang tidak dimiliki oleh NLTK adalah kemampuan stemming dalam bahasa Indonesia.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from Sastrawi.Stemmer.StemmerFactory import StemmerFactory\r\n\r\nfactory = StemmerFactory()\r\nstemmer = factory.create_stemmer()\r\n\r\n# stemming process\r\nsentence = 'Perkembangan kuliner di indonesia cukup membanggakan dalam 10 tahun terakhir'\r\noutput   = stemmer.stem(sentence)\r\n\r\nprint(output)\r\n#kembang kuliner di indonesia cukup bangga dalam 10 tahun akhir\r\n\r\n<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":50} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Mengolah Berita<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Pada kesempatan kali kita akan mencoba untuk mencoba mengimplementasikan text preprocessing menggunakan NLTK terhadap suatu berita. Langkah-langkah yang akan kita lakukan adalah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Mengambil data pada situs berita<\/li>\r\n<li>Melakukan Text-Preprocessing pada data<\/li>\r\n<li>Menampilkan hasil untuk dilakukan analisis<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Mengambil berita dari situs berita<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Berita yang akan kita ambil berasal dari situs kompasdotcom. kita akan memilih satu berita dan mencoba melakukan analisis.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Pertama kita import semua library yang dibutuhkan<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from urllib.request import urlopen, Request\r\nfrom bs4 import BeautifulSoup as bs\r\nimport requests<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah itu kita lakukan requses pada alamat yang kita tuju. pada kesempatan kali ini kita mencoba mengambil berita dari<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><a href=\"https:\/\/nasional.kompas.com\/read\/2020\/10\/15\/18022671\/polri-ungkap-percakapan-para-tersangka-di-grup-whatsapp-kami-medan?page=all#page2\">https:\/\/nasional.kompas.com\/read\/2020\/10\/15\/18022671\/polri-ungkap-percakapan-para-tersangka-di-grup-whatsapp-kami-medan?page=all#page2<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>user_agent='Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit\/602.2.14 (KHTML, like Gecko) Version\/10.0.1 Safari\/602.2.14'\r\nheaders = {'User-Agent': user_agent,'Accept':'text\/html,application\/xhtml+xml,application\/xml;q=0.9,image\/webp,*\/*;q=0.8'}\r\n\r\nalamat = \"https:\/\/nasional.kompas.com\/read\/2020\/10\/15\/18022671\/polri-ungkap-percakapan-para-tersangka-di-grup-whatsapp-kami-medan?page=all#page2\"\r\nreq = Request(alamat, headers=headers)\r\nhtml = urlopen(req)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah itu kita akan mencoba untuk mengambil data dengan memanfaatkan beautifulsoup<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>data = bs(html, 'html.parser')\r\nbox = data.find(\"div\",{\"class\":\"read__content\"})\r\n\r\nhidelabel = box.findAll('strong')\r\nfor delete in hidelabel:\r\n    delete.decompose()\r\n\r\nitems = box.findAll('p')\r\nhasil = [item.get_text() for item in items]\r\n<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"align\":\"center\",\"id\":12106,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-12106\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/materi_15_1-1024x484.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Saat melakukan inspeksi ternyata semua paragraf berita berada pada tag <em>div<\/em> dan class <em>read__content<\/em>. Sayangnya di dalam tag tersebut juga ada element iklan yang cukup mengganggu. Setelah dicek ternyata, iklan tersebut berada di dalam tag <em> strong<\/em>, maka dari itu kita coba bersihkan dengan menggunakan metode <em>decompose<\/em>. Jika kita lakukan print maka hasilnya adalah.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>[' - Polisi menangkap admin serta anggota grup aplikasi WhatsApp bernama &ldquo; KAMI Medan&rdquo; karena diduga terkait aksi menolak  UU Cipta Kerja yang berujung rusuh di Medan, Sumatera Utara.', 'Total empat orang yang ditangkap di Medan dalam kurun waktu 9-12 Oktober 2020, yakni KA, JG, NZ, WRP.', 'KA atau Khairi Amri merupakan Ketua Koalisi Aksi Menyelamatkan Indonesia (KAMI) Medan. Kepala Divisi Humas  Polri Irjen Argo Yuwono menyebut KA sebagai admin grup tersebut.', '&ldquo;Yang dimasukkan ke WAG ini ada foto kantor DPR RI dimasukkan di WAG, kemudian tulisannya, &lsquo;Dijamin komplit, kantor, sarang maling dan setan&rsquo;, ada di sana tulisannya,&rdquo; ucap Argo di Gedung Bareskrim, Jakarta Selatan, Kamis (15\/10\/2020).', '', 'Kemudian, KA, menurut polisi, juga menulis &ldquo;Mengumpulkan saksi untuk melempari DPR dan melempari polisi&rdquo; serta &ldquo;Kalian jangan takut dan jangan mundur&rdquo; di grup tersebut.', 'Kemudian, di grup yang sama, tersangka JG diduga menulis instruksi pembuatan skenario seperti kerusuhan Mei 1998.', '&ldquo;Kemudian ada juga (JG) menyampaikannya &lsquo;Buat skenario seperti 98&rsquo;, kemudian &lsquo;Penjarahan toko China dan rumah-rumahnya&rsquo;, kemudian &lsquo;Preman diikutkan untuk menjarah&rsquo;,&rdquo; kata Argo.', 'Tersangka JG juga diduga menulis perihal bom molotov yang menurut polisi berbunyi &ldquo;Batu kena satu orang, bom molotov bisa kebakar 10 orang dan bensin bisa berjajaran&rdquo;.', '', 'Aparat pun mengklaim telah menemukan bom molotov saat aksi di Medan tersebut. Bom molotov itu, katanya, diduga dilempar dan membakar sebuah mobil.', 'Untuk tersangka NZ, polisi menuturkan, perannya juga menulis di grup tersebut.', '&ldquo;Dia (NZ) menyampaikan bahwa &lsquo;Medan cocoknya didaratin. Yakin pemerintah sendiri bakal perang sendiri sama China&rsquo;,&rdquo; tuturnya.', 'Terakhir, tersangka WRP diduga menyampaikan perihal kewajiban membawa bom molotov.', 'Argo menuturkan, WRP menulis &ldquo;Besok wajib bawa bom molotov&rdquo;.', '', 'Dalam kasus tersebut, polisi menyita barang bukti berupa telepon genggam, dokumen percakapan para tersangka, serta uang Rp 500.000.', 'Menurut Argo, uang tersebut dikumpulkan melalui grup WhatsApp tersebut untuk logistik saat aksi.', 'Keempat tersangka dijerat Pasal 28 ayat 2 jo Pasal 45A ayat 2 UU ITE dan Pasal 160 KUHP. Ancaman hukumannya 6 tahun penjara.', 'Saat ini, seluruh tersangka ditahan di Rutan Salemba cabang Bareskrim Polri. Polisi menegaskan tidak akan mengabulkan penangguhan penahanan.']<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Melakukan pembersihan<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah Berhasil mendapatkan datanya maka kita akan mecoba melakukan pembersihan sederhana dengan bantuan libary NLTK. yang pertama akan kita lakukan adalah mengecilkan semua huruf dan menghilangkan karakter yang kurang penting.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Kita import library yang dibutuhkan<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import re\r\nfrom nltk.corpus import stopwords\r\nfrom nltk.tokenize import word_tokenize\r\n<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Lalu kita mulai bersihkan data kita,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>hasil = [item.lower() for item in hasil]\r\nhasil = [' '.join(re.sub(\"(@[A-Za-z0-9]+)|([^0-9A-Za-z \\t])|(\\w+:\\\/\\\/\\S+)\", \" \", item).split()) for item in hasil]\r\n\r\nparagraf = ' '.join(hasil)\r\nstop_words = set(stopwords.words('indonesian'))\r\nword_tokens = word_tokenize(paragraf) \r\nparagraf_2 = ' '.join([w for w in word_tokens if not w in stop_words])\r\n\r\nprint (paragraf_2)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah menghilangkan karakter dan mengecilkan huruf kita menghilangkan stopword pada data kita. Untuk menghilangkan stopword ini kita memanfaatkan metode word_tokenize yang dimiliki oleh NLTK untuk memisahkan setiap katanya. Saat kita melakukan print pada data kita akan menghasilkan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>polisi menangkap admin anggota grup aplikasi whatsapp bernama medan diduga terkait aksi menolak uu cipta kerja berujung rusuh medan sumatera utara total orang ditangkap medan kurun 9 12 oktober 2020 ka jg nz wrp ka khairi amri ketua koalisi aksi menyelamatkan indonesia medan kepala divisi humas polri irjen argo yuwono menyebut ka admin grup dimasukkan wag foto kantor dpr ri dimasukkan wag tulisannya dijamin komplit kantor sarang maling setan tulisannya argo gedung bareskrim jakarta selatan kamis 15 10 2020 ka polisi menulis mengumpulkan saksi melempari dpr melempari polisi takut mundur grup grup tersangka jg diduga menulis instruksi pembuatan skenario kerusuhan mei 1998 jg menyampaikannya skenario 98 penjarahan toko china rumah rumahnya preman diikutkan menjarah argo tersangka jg diduga menulis perihal bom molotov polisi berbunyi batu kena orang bom molotov kebakar 10 orang bensin berjajaran aparat mengklaim menemukan bom molotov aksi medan bom molotov diduga dilempar membakar mobil tersangka nz polisi perannya menulis grup nz medan cocoknya didaratin pemerintah perang china tersangka wrp diduga perihal kewajiban membawa bom molotov argo wrp menulis besok wajib bawa bom molotov polisi menyita barang bukti telepon genggam dokumen percakapan tersangka uang rp 500 000 argo uang dikumpulkan grup whatsapp logistik aksi keempat tersangka dijerat pasal 28 ayat 2 jo pasal 45a ayat 2 uu ite pasal 160 kuhp ancaman hukumannya 6 penjara tersangka ditahan rutan salemba cabang bareskrim polri polisi mengabulkan penangguhan penahanan<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:paragraph --><\/p>\r\n<p>Hasil akhir kode kita menjadi<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from urllib.request import urlopen, Request\r\nfrom bs4 import BeautifulSoup as bs\r\nimport requests\r\nimport re\r\nfrom nltk.corpus import stopwords\r\nfrom nltk.tokenize import word_tokenize\r\n\r\nuser_agent='Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit\/602.2.14 (KHTML, like Gecko) Version\/10.0.1 Safari\/602.2.14'\r\nheaders = {'User-Agent': user_agent,'Accept':'text\/html,application\/xhtml+xml,application\/xml;q=0.9,image\/webp,*\/*;q=0.8'}\r\n\r\nalamat = \"https:\/\/nasional.kompas.com\/read\/2020\/10\/15\/18022671\/polri-ungkap-percakapan-para-tersangka-di-grup-whatsapp-kami-medan?page=all#page2\"\r\nreq = Request(alamat, headers=headers)\r\nhtml = urlopen(req)\r\n\r\n\r\ndata = bs(html, 'html.parser')\r\nbox = data.find(\"div\",{\"class\":\"read__content\"})\r\nhidelabel = box.findAll('strong')\r\nfor delete in hidelabel:\r\n    delete.decompose()\r\nitems = box.findAll('p')\r\nhasil = [item.get_text() for item in items]\r\n\r\n\r\nhasil = [item.lower() for item in hasil]\r\nhasil = [' '.join(re.sub(\"(@[A-Za-z0-9]+)|([^0-9A-Za-z \\t])|(\\w+:\\\/\\\/\\S+)\", \" \", item).split()) for item in hasil]\r\nparagraf = ' '.join(hasil)\r\nstop_words = set(stopwords.words('indonesian'))\r\nword_tokens = word_tokenize(paragraf) \r\nparagraf_2 = ' '.join([w for w in word_tokens if not w in stop_words])<\/code><\/pre>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-03-01 08:00:00","status_publish":"publish","urutan":1,"created_by":11253,"updated_by":11253,"created_at":"2020-12-20 19:05:04","updated_at":"2021-02-25 01:14:39","waktu_publish_formatted":" Senin, 01 Maret 2021. 08:00:00 WIB."},{"id":383,"uuid":"24db210d-93be-4581-ab5c-310dfc76a736","author_user_id":11253,"materi_section_id":115,"judul":"Data Analysis - KMeans","permalink":"data-analysis-kmeans","konten":"<p><!-- wp:paragraph --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-11796\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/title_9_1-1024x192.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Mayoritas data yang beredar atau berhasil didapatkan merupakan data mentah yang belum memiliki label. Contohnya adalah data perjalan seseorang ke kantor. Kita mungkin akan mendapatkan banyak data misalnya 500 m, 700 m, dsb. Jika kita mendapatkan data 2 Km, mungkin kita akan melabelinya sebagai jarak tempuh jauh jika melihat data sebelumnya di 500 m. Akan tetapi, jika ternyata terdapat data dengan nilai 10 Km mungkin 2 Km tadi akan menjadi label jarak tempuh sedang. Dari hal tersebut terlihat betapa data yang akan kita dapatkan merupakan data mentah yang pelabelannya bisa sangat dtentukan oleh jumlah dataset yang kita miliki. Untuk mempelejari hal tersebut maka kita membutuhkan metode <em>Unsupervised Learning<\/em>. Salah satu cara yang akan kita gunakan adalah Klustering. Kenapa? Karena dengan Klustering kita akan dapat membagi data tersebut sesuai dengan kedekatan atau kesamaan nilai atribut dari setiap data. Pada kesempatan kali ini kita akan menggunakan metode K-Means.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Apa itu metode K-Means? K-Means merupakan metode klustering yang melakukan pembagian dengan mencari nilai sentroid secara berulang dan mengevaluasi jarak geometri data dari nilai sentroid tersebut di setiap perulangan. Hal ini dilakukan hingga kita mendapatkan nilai sentroid yang lebih stabil.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":10339,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-10339\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/09\/kmeansViz.png\" alt=\"\" \/>\r\n<figcaption>langkah-langkah k-means dilakukan. Sumber : https:\/\/stanford.edu\/<\/figcaption>\r\n<\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Misalkan kita mempunyai data seperti pada gambar (a), jika kita menentukan bahwa kita akan menggunakan 2 sentroid maka akan di tempatkan dua buah sentroid (atau bisa disebut titik pusat massa) secara random. Nanti setiap data akan ditempatkan sesuai dengan nilai kedekatan dua buah atribut (x dan y) yang mereka miliki. Setelah itu kita akan mendapatkan dua zona klustering (gambar (c)). lalu kita akan mencari dua buah sentroid lagi, tapi kali ini tidak secara random tapi melihat dari setiap zona (gambar (d)). Setelah itu dilakukan lagi penempatan untuk mendapatkan zona klustering baru (gambar (e)). Ini terus dilakukan hingga didapatkan nilai sentroid yang stabil.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":50} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Persiapan Data<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Sebagai bahan latihan kita akan menggunakan data yang kita ambil menggunakan teknik web scraping. Kita akan mengambil data pokemon pada situs,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>https:\/\/pokemondb.net\/pokedex\/all<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>kita kan mengambil data pokemon dengan index 1 - 200. Kenapa kita menggunakan data ini? Karena data pokemon yang masih belum memiliki label evolusi atau pembagian menurut kekuatan sehingga akan lebih mudah untuk menjadi contoh saat menggunakan klustering dengan metode K-Means.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Langkah pertama adalah melakukan import library dan pengambilan data situs secara keseluruhan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import csv\r\nfrom urllib.request import urlopen, Request\r\nimport requests\r\nfrom bs4 import BeautifulSoup as bs \r\nimport pandas as pd\r\n\r\nalamat = \"https:\/\/pokemondb.net\/pokedex\/all\"\r\nsafeAdd = Request(alamat, headers={'User-Agent': 'Mozilla\/5.0'})\r\nhtml = urlopen(safeAdd)\r\ndata = bs(html, 'html.parser')<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Jika kita lakukan inspeksi komponen html maka kita akan mendapatkan bahwa data tabel yang ingin kita ambil memiliki class = 'table' dan id = 'pokedex'. Kita akan mengambil data dengan alur, mengambil seluruh table, mengambil setiap baris pada tabel, mengambil setiap sel pada satu row.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>table = data.find(\"table\", {\"id\":\"pokedex\"})\r\nrows = data.findAll(\"tr\")\r\n\r\nrow_data = []\r\nfor row in rows:\r\n    pass<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Karena kita telah menentukan bahwa kita akan berhenti pada index pokemon 200 maka ita haruslah membuat sebuah <em>stop function<\/em>. Baru setelah itu kita akan mengambil semua data baris, pada kasus ini baris ditunjukan dengan class 'th' dan 'td'.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>    if row.contents[1].get_text() == \"201\": #stop function\r\n        break\r\n\r\n    for item in row.findAll([\"th\",\"td\"]): #gathering function\r\n        pass<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Lalu kita akan melakukan perulangan pada satu row untuk mendapatkan isi data dari setiap sel dan akan kita masukkan pada sebuah list. kode akhir kita akan menjadi,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>row_data = []\r\nfor row in rows:\r\n    cell_data = []\r\n\r\n    if row.contents[1].get_text() == \"201\": #stop function\r\n        break\r\n\r\n\r\n    for item in row.findAll([\"th\",\"td\"]): #gathering function\r\n        cell_data.append(item.get_text())\r\n    row_data.append(cell_data)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Langkah selanjutnya adalah kita akan menyimpan data dalam format csv dengan memanfaatkan dataframe pandas. Ini dilakukan agar setiap ingin melakukan pengolahan kita tidak perlu melakukan pengambilan dari situs web dan menjaga situs web tersebut.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>df = pd.DataFrame(row_data)\r\ndf.columns = df.iloc[0]\r\ndf = df[1:]\r\n\r\ndf.to_csv('data_pokemon.csv',index=False)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":50} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Mencari Zona Klustering<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Menggunakan data yang telah kita dapatkan kita akan mencoba untuk melakukan klusterisasi pada data tersebut. Sebagai contoh kali ini kita akan menggunakan metode K-Means dengan nilai K adalah 3.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Pertama kita membaca data yang dihasilkan pada bagian sebelumnya, kita akan menggunakan bantuan pandas untuk memudahkan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>data = pd.read_csv(\"data_pokemon.csv\") \r\n# Preview the first 5 lines of the loaded data \r\nprint(data.head())<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk melakukan klustering kita membutuhkan dua atribut yang akan menjadi basis perhitungan nilai mereka nanti. Pada kesempatan kali ini kita akan menggunakan nilai Attack dan Defense, karena menurut penulis tumbuh kembang pokemon akan berbanding lurus dengan Attack dan Defense mereka.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Sebelumnya kita akan memastikan data yang kita miliki merupakan numeric dan kita akan menambahkan kolom transformasi untuk kedua atribut tersebut. Transformasi yang akan saya gunakan adalah logaritmik. Jangan lupa untuk menambahkan library numpy pada library sebelumnya<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>    data[\"Attack\"] = pd.to_numeric(data[\"Attack\"])\r\n    data[\"Defense\"] = pd.to_numeric(data[\"Defense\"])\r\n\r\n    #menambahkan dua kolom tranformasi\r\n    data[\"Alog\"] = np.log(data[\"Attack\"])\r\n    data[\"Dlog\"] = np.log(data[\"Defense\"])\r\n\r\n    print(data.head())<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah itu kita akan mengambil data atribut yang kita pakai dan mengubahnya ke dalam bentuk array.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>    log_data = data.iloc[:, 10:12]\r\n    print(log_data.head())\r\n    #       Alog      Dlog\r\n    #0  3.891820  3.891820\r\n    #1  4.127134  4.143135\r\n    #2  4.406719  4.418841\r\n    #3  4.605170  4.812184\r\n    #4  3.951244  3.761200\r\n\r\n    # mengubahnya menjadi array\r\n    log_array = np.array(log_data)\r\n    print (log_array)\r\n    #[[3.8918203  3.8918203 ]\r\n    # [4.12713439 4.14313473]\r\n    # [4.40671925 4.41884061]\r\n    # [4.60517019 4.81218436]...]<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang mari kita mulai untuk melakukan klustering, kita akan menggunakan library sklearn untuk itu dan library matplotlib untuk melakukan visualisasi. Tambahkan kedua library tersebut di awal.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from sklearn.cluster import KMeans\r\nimport matplotlib.pyplot as plt\r\n\r\nkmeans = KMeans(n_clusters=3, random_state=200)\r\nkmeans.fit(log_array)\r\ndata['kluster'] = kmeans.labels_\r\nprint(data.head())<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>variabel kmeans digunakan untuk menginisiasi metode kita dengan n menunjukan jumlah sentroid dan random state sebagai dasar dari pengacakan saat melakukan pengolahan data. kmeans.fit digunakan untuk meemulai melakukan pengolahan dan hasilnya disimpan kembali ke dalam dataframe awal.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Selanjutnya kita akan melakukan visualisasi agar dapat melihat data kita lebih baik.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>plt.scatter(data.Attack, data.Defense, s = 20, c = data.kluster, marker = \"o\", alpha = 0.5)\r\nplt.title(\"Hasil Klustering K-Means\")\r\nplt.xlabel(\"Atk\")\r\nplt.ylabel(\"Def\")\r\nplt.show()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"align\":\"center\",\"id\":10363,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-10363\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/09\/hari_10_2-1024x537.png\" alt=\"\" \/>\r\n<figcaption>hasil visualisasi<\/figcaption>\r\n<\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:spacer {\"height\":50} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Mencari 'K'<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Seperti pada namanya, penentuan nilai K merupakan salah satu hal penting untuk dilakukan. Pada contoh sebelumnya kita telah terlebih dahulu menentukan nilai k yang akan kita pakai adalah 3. Pertanyaannya apakah ini merupakan nilai terbaik? untuk dapat menjawabnya kita akan menggunakan dua metode penentuan nilai k terbaik, yaitu <em> Elbow Method<\/em> dan <em>Silhouette Method. <\/em>Kita akan menggunakan data yang kita generate agar lebih mudah membayangkan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang mari kita persiapkan datanya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from sklearn.datasets import make_blobs\r\n\r\nX, y = make_blobs(n_samples=1000, centers=3, n_features=2, shuffle=True, random_state=31)\r\nplt.scatter(X[:, 0], X[:, 1], s = 20, marker = \"o\", alpha = 0.8)\r\nplt.show()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Maka data akan terlihat seperti,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":10366,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-10366\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/09\/hari_10_3.png\" alt=\"\" \/>\r\n<figcaption>hasil visualisasi<\/figcaption>\r\n<\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Elbow Method<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p><em>Elbow Method <\/em>menggunakan apa yang dinamakan kuadrat jarak, dimana jarak yang dimaksud disni adalah jarak antar titik dengan pusat klusternya dimana nanti ini akan dijumlahkan dan dinamakan WSS (Within-Cluster-Sum of Squared). Nilai K terbaik didapatkan dimana nilai WSS sudah mulai stabil, atau saat membentuk 'siku'.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>sse = []\r\nk_list = []\r\nfor k in range(1, 11):\r\n    kmeans = KMeans(n_clusters = k).fit(X)\r\n    centroids = kmeans.cluster_centers_\r\n    prediksi = kmeans.predict(X)\r\n    nilai_sse = 0\r\n    \r\n    for i in range(len(X)):\r\n        titik_pusat = centroids[prediksi[i]]\r\n        nilai_sse += (X[i, 0] - titik_pusat[0]) ** 2 + (X[i, 1] - titik_pusat[1]) ** 2\r\n    \r\n    sse.append(nilai_sse)\r\n    k_list.append(k)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Lalu kita lakukan plot,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>    plt.plot(k_list,sse)\r\n    plt.show()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"align\":\"center\",\"id\":10375,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-10375\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/09\/hari_10_4.png\" alt=\"\" \/>\r\n<figcaption>hasil plot<\/figcaption>\r\n<\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Dari Plot tersebut kita mengetahui nilai terbaik adalah nilai k = 3 , dimana dari data sebelumnya ini terbukti. Akan tetapi, tidak setiap waktu kita dapat dengan jelas melihat dimana keberadaan titik belok dari plot. Pada saat itulah kita akan menggunakan metode lain.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Silhouette Method<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p><em>Silhouette Method<\/em> menggunakan nilai koefisien yang dihitung dari seberapa dekat relasi antara objek dalam sebuah cluster, dan seberapa jauh sebuah cluster terpisah dengan cluster lain.&nbsp;persamaan yang digunakan adalah,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Koefisien <em>Silhouette = (x-y)\/ max(x,y)<\/em><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Dimana x adalah jarak dengan kluster lain dan y adalah jarak relasi antar objek pada kluster yang sama. Nilai K optimum didapatkan dari nilai puncak plot K terhadap Koefisien <em>Silhouette<\/em><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Kita akan membutuhkan modul tambahan dari sklearn untuk menggunakan metode ini.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from sklearn.metrics import silhouette_score\r\n\r\ndata = []\r\nk_list = []\r\n\r\nfor k in range(2, 11):\r\n    kmeans = KMeans(n_clusters = k).fit(X)\r\n    labels = kmeans.labels_\r\n    data.append(silhouette_score(X, labels, metric = 'euclidean'))\r\n    k_list.append(k)\r\n\r\nplt.plot(k_list,data)\r\nplt.show()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Maka akan didapatkan hasil,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":10381,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-10381\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/09\/hari_10_5.png\" alt=\"\" \/>\r\n<figcaption>hasil visualisasi<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Dari hasil tersebut kita dapat melihat bahwa nilai puncak berada pada nilai K = 3 dan ini sesuai dengan data yang kita miliki.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":50} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Sumber bacaan:<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p><a href=\"https:\/\/scikit-learn.org\/stable\/modules\/clustering.html#k-means\">https:\/\/scikit-learn.org\/stable\/modules\/clustering.html#k-means<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><a href=\"https:\/\/medium.com\/@16611129\/memahami-k-mean-clustering-pada-machine-learning-dengan-phyton-430323d80868\">https:\/\/medium.com\/@16611129\/memahami-k-mean-clustering-pada-machine-learning-dengan-phyton-430323d80868<\/a><\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-03-02 08:00:00","status_publish":"publish","urutan":2,"created_by":11253,"updated_by":11253,"created_at":"2020-12-20 19:08:01","updated_at":"2021-02-11 13:23:35","waktu_publish_formatted":" Selasa, 02 Maret 2021. 08:00:00 WIB."},{"id":384,"uuid":"495fcd7c-d18d-4ca7-87e8-c5558128a10a","author_user_id":11253,"materi_section_id":115,"judul":"Data Analysis - SVM & KNN","permalink":"data-analysis-svm-knn","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":11837,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-11837\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/title_10_1-1024x192.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:spacer {\"height\":40} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>SVM<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Support vector machines (SVM) adalah salah satu Metode Supervised Learning&nbsp; yang digunakan untuk melakukan klasifikasi. Memiliki prinsip dasar untuk melakukan klasifikasi dengan menggunakan batas pemisah. SVM menggunakan prinsip mencari margin maksimum pada batas (hyperplane) untuk menemukan batas pemisah terbaik antara tiap kelas. Bagaimana bentuk batas pemisah ini bergantung pada kernel yang akan kita gunakan. Untuk sistem dengan data tak terpisahkan, SVM akan menggunakan kernel untuk mentransformasi data masukan kedalam dimensional yang lebih tinggi (Jika awalnya hanya menggunakan 2 dimensi maka akan dinaikkan ke 3 dimensi (kedalaman)).<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":11838,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-11838\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/linearlyVsNLinearly.png\" alt=\"\" \/>\r\n<figcaption>sumber : <a href=\"https:\/\/www.svm-tutorial.com\/2015\/06\/svm-understanding-math-part-3\/\">https:\/\/www.svm-tutorial.com\/2015\/06\/svm-understanding-math-part-3\/<\/a><\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Terdapat beberapa kernel yang dapat digunakan:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Linear kernel<\/li>\r\n<li>Polinomial Kernel<\/li>\r\n<li>Radial Basis Function Kernel<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Penerapan SVM<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Pada kesempatan kali ini kita akan menggunakan library scikit-learn untuk mencoba menggunakan SVM pada sebuah dataset. Data set yang kita gunakan adalah data set pokemon yang telah kita ambil pada kegiatan web scraping dahulu dan telah kita beri label dengan menggunakan metode clustering. Label tersebut yang akan menjadi dasar penentuan kita.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Pertama kita akan mengimport semua library yang dibutuhkan, dan kita akan melakukan pengambilan data dari data kita dahulu.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import pandas as pd\r\nimport csv\r\nfrom sklearn import svm\r\n\r\ndataset = pd.read_csv ('namafile.csv')<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Seperti yang kita tahu sebelumnya, pada basis data pokemon ini terdapat beberapa fitur (attack, defense, speed, dll) yang akan kita jadikan dataset kita. Jika saya melakukan print dataframe.head() maka akan terlihat seperti pada gambar dibawah.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":11839,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-11839\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/1-1024x113.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang mari kita ambil dataset yang akan gunakan beserta dengan labelnya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>set_data = dataset.iloc [:, 4:10]\r\nkluster_data = dataset.iloc [:,12] \r\n\r\nprint(set_data)\r\nprint (kluster_data)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":11840,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-11840\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/2.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk memulai model belajar kita maka kita akan membagi set_data diatas menjadi 75% train data dan 25% test data.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>x_train, x_test, y_train, y_test = train_test_split(set_data, kluster_data, test_size=0.25,random_state=150) # 75% training and 25% test<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang mari kita buat model untuk melakukan klasifikasi, pada kesempatan kali ini kernel yang saya coba gunakan adalah kernel linear.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from sklearn import svm\r\n\r\nmodel_s = svm.SVC(kernel='linear') # Linear Kernel\r\nmodel_s.fit(x_train, y_train)\r\ny_pred = model_s.predict(x_test)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>model_s.fit digunakan untuk melatih model kita dan model_s.predict digunakan untuk melakukan tes pada test data kita. Untuk melihat akurasi dari model yang telah kita buat menggunakan metode SVM (kernel=linear) tersebut kita bisa menggunakan <em>classification_report<\/em>().<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from sklearn.metrics import classification_report\r\nprint(classification_report(y_test, y_pred))<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":11841,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-11841\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/3.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Mendapatkan hasil akurasi 95% merupakan hasil yang bisa dibilang baik. sekarang kita bisa melakukan prediksi terhadap data baru yang akan kita masukkan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>hp = 30\r\na = 30\r\nd =  45\r\nsa = 50\r\nsd = 40\r\ns = 40\r\n\r\nprediksi = model_s.predict([[hp,a,d,sa,sd,s]])\r\nprint(prediksi)\r\n\r\n#[2]<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Kalian dapat melakukan percobaan dengan mengganti kernel yang dipakai atau melakukan normalisasi atau standarisasi data jika dibutuhkan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":40} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>K-NN<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Seperti yang kita tahu di Indonesia terdapat pengelompokkan penduduk pada tingkat RT dan RW. Pembagian penduduk pada tingkat ini tidak memerlukan pemikirin rumit eknomi, kewilayahan, dsb. Penentuan RT dan RW dilihat dari kedekatan satu rumah dengan rumah yang lain. Inilah penggambaran sederhana dari K-NN. Menilik istilahnya K-NN (K-Nearest Neighbors ) adalah model atau algoritma yang menentukan klasifikasi suatu data dari beberapa tetangga (K) terdekatnya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Bagaimana penentuan jarak ini ditentukan? untuk bidang datar penentuan jarak ini dapat dengan mudah menggunakan persamaan pythagoras. Untuk n-dimensi kita dapat menggunakan persamaan Euclidian atau untuk kasus lebih general kita dapat menggunakan persamaan Minkowski.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":11842,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-11842\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/bY54gXf5T46Rt1KRfKMn_distance_formula_pythagoras.gif\" alt=\"\" \/>\r\n<figcaption>sumber: www.teacherschoice.com.au<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Penerapan K-NN<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Pada Penerapan kali ini kita tetap akan menggunakan basis data pokemon yang kita miliki dengan. Perbedaannya adalah kita akan menggunakan dua data yang telah ditransformasi ke dalam bentuk logaritma.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import pandas as pd\r\nimport csv\r\nfrom sklearn.neighbors import KNeighborsClassifier\r\n\r\ndataset = pd.read_csv ('namafile.csv')\r\nset_data = dataset.iloc[:, 10:12]\r\nkluster_data = dataset.iloc[:,12]<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Lalu seperti pada kesempatan sebelumnya kita akan membagi set_data diatas menjadi 75% train data dan 25% test data.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from sklearn.model_selection import train_test_split\r\n\r\nx_train, x_test, y_train, y_test = train_test_split(set_data, kluster_data, test_size=0.25,random_state=150)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Mari kita mulai latih model kita menggunakan data tersebut lalu kita lakukan tes. Untuk kesempatan kali ini kita akan menggunakan nilai K = 1<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>model_k = KNeighborsClassifier(n_neighbors=1)\r\nmodel_k.fit(x_train, y_train)\r\ny_pred = model_k.predict(x_test)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>mari kita lihat akurasi dari model yang kita gunakan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from sklearn.metrics import classification_report\r\n\r\nprint(classification_report(y_test, y_pred))<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":11843,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-11843\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/4.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Menentukan K<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Seperti yang tertulis pada namanya, penentuan parameter k pada penggunaan model ini menjadi sangat penting. Berhasil menentukan nilai k yang optimum akan meningkatkan validitas prediksi kedepannya. Mari kita coba menentukan nilai K terbaik untuk data kita dengan menggunakan fungsi perulangan dan visualisasi menggunakan matplotlib.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import numpy as np\r\nfrom matplotlib import pyplot as plt\r\n\r\nerror = []\r\nfor i in range(1, 50):\r\n    model_k = KNeighborsClassifier(n_neighbors=i)\r\n    model_k.fit(x_train, y_train)\r\n    y_pred = model_k.predict(x_test)\r\n    error.append(np.mean(y_pred != y_test))\r\n\r\nplt.figure(1)  \r\nplt.plot(range(1, 50), error, color='red', marker='o', markersize=5)\r\nplt.title('Error pada nilai K')  \r\nplt.xlabel('K')  \r\nplt.ylabel('Error rata-rata')\r\nplt.show()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"id\":11844,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-11844\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/Figure_1-1024x531.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Dari plot tersebut secara rata-rata penggunaan model K-NN pada data kita memiliki nilai error yang sangat rendah dengan error terkecil berada pada saat K = 4 dan K = 5. sehingga saat akan melakukan prediksi maka kita dapat menggunakan nilai K = 4 atau K = 5.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>lna = 3.4011973816621555\r\nlnd =  3.8066624897703196\r\n\r\nprediksi = model_k.predict([[lna,lnd]])\r\n#[2]<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Kita mendapatkan hasil yang sama saat menggunakan metode SVM. Apa yang dapat kalian ambil kesimpulan dari sini? Apakah metode klusterisasi menggunakan K-Means menghasilkan hasil yang cukup baik? Apakah ini karena data pokemon yang diciptakan memang memiliki keseimbangan yang baik?<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":40} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Sumber Eksternal:<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p><a href=\"https:\/\/scikit-learn.org\/stable\/modules\/naive_bayes.html#gaussian-naive-bayes\">https:\/\/scikit-learn.org\/stable\/modules\/naive_bayes.html#gaussian-naive-bayes<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><a href=\"https:\/\/scikit-learn.org\/stable\/modules\/tree.html#classification\">https:\/\/scikit-learn.org\/stable\/modules\/tree.html#classification<\/a><\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-03-03 08:00:00","status_publish":"publish","urutan":3,"created_by":11253,"updated_by":11253,"created_at":"2020-12-20 19:09:38","updated_at":"2021-02-11 13:23:45","waktu_publish_formatted":" Rabu, 03 Maret 2021. 08:00:00 WIB."},{"id":385,"uuid":"9decd4b1-8043-4163-a7b9-44b5b5136ec3","author_user_id":11253,"materi_section_id":115,"judul":"Corpus & Document-Term Matrix","permalink":"corpus-document-term-matrix","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Pada saat kita mempelajari tentang pengambilan data pada twitter kita mengetahui bahwa data yang kita dapatkan merupakan data teks. Misalkan kita mengambil 5 buah tweet dan memasukkan ke dalam tabel maka hasilnya kan terlihat seperti gambar di bawah.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":13527,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-13527\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/materi_14_1.jpg\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Itulah yang disebut dengan corpus. Corpus adalah perpustakaan\/kumpulan data dalam bentuk teks. Pada umumnya saat kita melakukan pengambilan data untuk NLP data yang kita dapatkan adalah dalam bentuk corpus seperti terlihat di atas. Akan tetapi, seperti yang kita pelajari di dua hari kebelakang bahwa penggunaan machine learning atau EDA kedepannya membutuhkan data dalam bentuk numerik, karena akan lebih mudah untuk dianalisa. Maka dari itu kita akan menggunakan yang dinamakan document-term matrix.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Document Term Matrix adalah penggambaran suatu corpus yang dalam bentuk matriks yang berdasar pada frekuensi suatu kata keluar. Jika kita menggunakan data sebelumnya untuk membuat document term matriks maka akan terlihat seperti gambar di bawah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":13529,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-13529\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/materi_14_2.jpg\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Seperti yang kita lihat, corpus yang kita miliki telah memiliki bentuk matriks seperti matriks matermatika pada umumnya. Nah, penggunaan matriks ini lebih lanjut adalah dengan melakukan pembobotan dari suatu dokumen atau dalam hal ini adalah kalimat\/paragraf dari sebuah tweet. Untuk tugas ini kita akan menggunakan konsep TF-IDF<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3,\"backgroundColor\":\"vivid-cyan-blue\",\"textColor\":\"white\"} --><\/p>\r\n<h3 class=\"has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\">Apa itu TF-IDF?<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:paragraph --><\/p>\r\n<p>TF-IDF adalah singkatan dari Term Frequency &mdash; Inverse Document Frequency, yaitu seperti namanya? menghitung seberapa sering sebuah kata atau bahasan keluar. Secara sederhana, TF-IDF adalah pembobotan terhadap kata.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":10814,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-10814\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/09\/hari_16_2.png\" alt=\"\" \/>\r\n<figcaption>sumber : https:\/\/medium.com\/@cmukesh8688\/tf-idf-vectorizer-scikit-learn-dbc0244a911a<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Seperti pada gambar di atas TF-IDF bekerja dengan mencari dua nilai utama yaitu TF (Seberapa sering suatu nilai keluar) dan IDF (nilai pembobotan dilihat dari seberapa sering suatu kata keluar, invers karena semakin sering keluar maka dia semakin kecil nilai pembobotannya).<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Kita akan contohkan seperti ini, misalkan kita punya dua data dalam corpus kita.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>A = Andi bermain bola<br \/>B = Budi bermain basket<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Kita akan ubah bentuk tersebut kedalam bentuk term document matrix nya<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":13536,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-13536\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/materi_14_3.jpg\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah itu kita akan mencoba mencari nilai df dan D\/df nya. df adalah seberapa sering kata tersebut keluar pada corpus dan D\/df adalah seberapa jumlah data (pada kasus ini dua, A dan B) atau pada gambar diatas ditulis dengan n lalu dibagi nilai df.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":13537,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-13537\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/materi_14_4.jpg\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Karena kita sudah mendapatkan nilai n\/df nya maka kita sekarang tinggal mencari nilai idf dari data. Untuk penambahan satu pada n dan df pada gambar utama, itu merupakan hasil persetujuan. Ada yang melakukannya ataupun hanya penggunakan +1 di akhir logaritma.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":13538,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-13538\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/materi_14_5.jpg\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Dari tabel di atas kita sudah bisa melihat nilai pembobotan dari tiap kata, dimana kata 'bermain' memiliki bobot yang lebih rendah dibanding kata yang lain dikarenakan kata bermain lebih dua kali disebut pada keseluruhan dokumen dan menjadi lebih tidak unik. <br \/>Untuk mendapatkan pembobotan dokumen bukan hanya kata, sekarang kita lakukan langkah terakhir dengan mengalikan tf dan idf, dimana tf adalah kolom kedua dan ketiga (A dan B).<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":13542,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-13542\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/materi_14_6.jpg\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Hasil akhirnya tinggal kita jumlah kan kolom A dan B di akhir tabel. Ini akan menghasilkan nilai pembobotan,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>A = [1.30103, 1, 1.30103, 0, 0]<br \/>B = [0, 1, 0, 1.30103, 1.30103]<br \/><br \/>Selamat, kita berhasil mengubah dokumen pada corpus kita menjadi bentuk matriks dan mendapatkan nilai pembobotannya. Dari hal ini kita akan lebih mudah untuk menggunakan corpus kita untuk hal seperti EDA atau machine learning.<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-03-04 08:00:00","status_publish":"publish","urutan":4,"created_by":11253,"updated_by":11253,"created_at":"2020-12-20 19:11:41","updated_at":"2021-03-03 16:26:17","waktu_publish_formatted":" Kamis, 04 Maret 2021. 08:00:00 WIB."},{"id":386,"uuid":"0e5b557f-9292-452d-b207-576b9b2ff9d6","author_user_id":11253,"materi_section_id":115,"judul":"Most & Top Data and WordCloud","permalink":"most-top-data-and-wordcloud","konten":"<p><!-- wp:paragraph --><\/p>\r\n<h3 class=\"has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\">Top Words<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Mencari Top word merupakan salah satu hal penting untuk dapat dilakukan, karena dengan hal ini kita bisa melakukan analisis secara kasar tentang bagaimana fitur yang dimiliki oleh data yang kita ambil. Pada kesempatan kali ini kita akan menggunakan corpus seperti di bawah. Corpus tersebut di dapatkan dengan mengambil 10 data twitter dengan kata kunci 'covid' dan telah dilakukan pembersihan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>data = ['oh pedulikan anak sekolah dana terdampak convid covid anak sekolah terkena dampaknya puluhan berbulan merasakan sekolah onlien iya berjuta juta sodara teman tk', 'update contoh wakanda covid diatasi dng uu dng uu krumunan mnjadi cluster covid ig', 'cegah masuknya covid personel polsek kahayan terapkan protokol kesehatan', 'rutin cuci tangan putus penyebaran virus corona covid', 'alasan pandemi covid narasi dirasa istana menghentikan upaya konsolidasi massa habib rizieq protokol kesehatan longgar mendadak dilaksanakan ketat prokesrezimabalabal prokesrezimabalabal', 'himbauan bhabinkamtibmas teluk pucung polsek bekasi utara aiptu mugo kurniyanto komunitas pecinta peraturan daerah melaksanakan himbauan protokol kesehatan covid masyarakat pemakai jalan jl perjuangan teluk pucung bekasi utara', 'pemilihan kepala daerah covid pemilih atur si covid milih tergantung pesanan deh pokok e', 'iya maaf bundir stress kayaknya kena covid', 'kritis gejala covid swab negatif menyingkirkan covid', 'halo dok sembuh covid swab negative menjalakann test serology hasilnya reaktif bahaya dok imun terbentuk']<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah ini kita coba melakukan import semua library yang dibutuhkan,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import itertools\r\nimport matplotlib.pyplot as plt\r\nfrom nltk.tokenize import word_tokenize\r\nfrom nltk.probability import FreqDist<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Kita akan memanfaatkan metode FreqDist dari library NLTK untuk melakukan perhitungan. pertama-tama kita harus memisahkan semua data per kata nya. Kita akan menggunakan metode word_tokenize.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>data = [word_tokenize(paragraf) for paragraf in data]<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>hasilnya,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>[['oh', 'pedulikan', 'anak', 'sekolah', 'dana', 'terdampak', 'convid', 'covid', 'anak', 'sekolah', 'terkena', 'dampaknya', 'puluhan', 'berbulan', 'merasakan', 'sekolah', 'onlien', 'iya', 'berjuta', 'juta', 'sodara', 'teman', 'tk'], ['update', 'contoh', 'wakanda', 'covid', 'diatasi', 'dng', 'uu', 'dng', 'uu', 'krumunan', 'mnjadi', 'cluster', 'covid', 'ig'], ['cegah', 'masuknya', 'covid', 'personel', 'polsek', 'kahayan', 'terapkan', 'protokol', 'kesehatan'], ['rutin', 'cuci', 'tangan', 'putus', 'penyebaran', 'virus', 'corona', 'covid'], ['alasan', 'pandemi', 'covid', 'narasi', 'dirasa', 'istana', 'menghentikan', 'upaya', 'konsolidasi', 'massa', 'habib', 'rizieq', 'protokol', 'kesehatan', 'longgar', 'mendadak', 'dilaksanakan', 'ketat', 'prokesrezimabalabal', 'prokesrezimabalabal'], ['himbauan', 'bhabinkamtibmas', 'teluk', 'pucung', 'polsek', 'bekasi', 'utara', 'aiptu', 'mugo', 'kurniyanto', 'komunitas', 'pecinta', 'peraturan', 'daerah', 'melaksanakan', 'himbauan', 'protokol', 'kesehatan', 'covid', 'masyarakat', 'pemakai', 'jalan', 'jl', 'perjuangan', 'teluk', 'pucung', 'bekasi', 'utara'], ['pemilihan', 'kepala', 'daerah', 'covid', 'pemilih', 'atur', 'si', 'covid', 'milih', 'tergantung', 'pesanan', 'deh', 'pokok', 'e'], ['iya', 'maaf', 'bundir', 'stress', 'kayaknya', 'kena', 'covid'], ['kritis', 'gejala', 'covid', 'swab', 'negatif', 'menyingkirkan', 'covid'], ['halo', 'dok', 'sembuh', 'covid', 'swab', 'negative', 'menjalakann', 'test', 'serology', 'hasilnya', 'reaktif', 'bahaya', 'dok', 'imun', 'terbentuk']]<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Bisa dilihat data tersebut berbentuk list dalam list, untuk melakukan penghitungan kita harus menyatukan semua kata dalam satu list. Kita akan memanfaatkan itertools.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>data = list(itertools.chain(*data))<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>maka akan menghasilkan,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>['oh', 'pedulikan', 'anak', 'sekolah', 'dana', 'terdampak', 'convid', 'covid', 'anak', 'sekolah', 'terkena', 'dampaknya', 'puluhan', 'berbulan', 'merasakan', 'sekolah', 'onlien', 'iya', 'berjuta', 'juta', 'sodara', 'teman', 'tk', 'update', 'contoh', 'wakanda', 'covid', 'diatasi', 'dng', 'uu', 'dng', 'uu', 'krumunan', 'mnjadi', 'cluster', 'covid', 'ig', 'cegah', 'masuknya', 'covid', 'personel', 'polsek', 'kahayan', 'terapkan', 'protokol', 'kesehatan', 'rutin', 'cuci', 'tangan', 'putus', 'penyebaran', 'virus', 'corona', 'covid', 'alasan', 'pandemi', 'covid', 'narasi', 'dirasa', 'istana', 'menghentikan', 'upaya', 'konsolidasi', 'massa', 'habib', 'rizieq', 'protokol', 'kesehatan', 'longgar', 'mendadak', 'dilaksanakan', 'ketat', 'prokesrezimabalabal', 'prokesrezimabalabal', 'himbauan', 'bhabinkamtibmas', 'teluk', 'pucung', 'polsek', 'bekasi', 'utara', 'aiptu', 'mugo', 'kurniyanto', 'komunitas', 'pecinta', 'peraturan', 'daerah', 'melaksanakan', 'himbauan', 'protokol', 'kesehatan', 'covid', 'masyarakat', 'pemakai', 'jalan', 'jl', 'perjuangan', 'teluk', 'pucung', 'bekasi', 'utara', 'pemilihan', 'kepala', 'daerah', 'covid', 'pemilih', 'atur', 'si', 'covid', 'milih', 'tergantung', 'pesanan', 'deh', 'pokok', 'e', 'iya', 'maaf', 'bundir', 'stress', 'kayaknya', 'kena', 'covid', 'kritis', 'gejala', 'covid', 'swab', 'negatif', 'menyingkirkan', 'covid', 'halo', 'dok', 'sembuh', 'covid', 'swab', 'negative', 'menjalakann', 'test', 'serology', 'hasilnya', 'reaktif', 'bahaya', 'dok', 'imun', 'terbentuk']<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang kita akan coba lakukan penghtungan<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>fqdist = FreqDist(data)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Jika kita print akan memperlihatkan,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>&lt;FreqDist with 113 samples and 145 outcomes&gt;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Hal tersebut hanya menunjukan seberapa banyak data yang kita miliki, jika kita ingin mengetahui 10 kata paling banyak disebutkan kita bisa menggunakan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>print(fqdist.most_common(10))<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>[('covid', 13), ('sekolah', 3), ('protokol', 3), ('kesehatan', 3), ('anak', 2), ('iya', 2), ('dng', 2), ('uu', 2), ('polsek', 2), ('prokesrezimabalabal', 2)]<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Pada hasil diatas bisa kita lihat kecenderungan opini masyarakat adalah di sekolah, protokol, kesehatan, dan anak. Artinya hipotesis awal ada kekhawatiran di orang tua tentang penyebaran covid di sekolah.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang mari kita visualisasikan agar terlihat lebih baik<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>fqdist.plot(10,cumulative=False)\r\nplt.show()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:image {\"align\":\"center\",\"id\":13605,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-13605\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/Figure_1.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Perbaikan pada proses pembersihan menjadi salah satu cara jika kita ingin meningkatkan validitas data kita.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3,\"backgroundColor\":\"vivid-cyan-blue\",\"textColor\":\"white\"} --><\/p>\r\n<h3 class=\"has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\">Wordcloud<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Pada langkah kali ini kita akan membutuhkan bantuan satu library lainnya untuk memvisualisasikan data kita dengan lebih indah. Library tersebut adalah wordcloud. Pertama kita install terlebih dahulu library kita dengan bantuan pypi.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>pip install wordcloud<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Lalu kita import library tersebut ke dalam kode kita,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from wordcloud import WordCloud\r\nimport matplotlib.pyplot as plt<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Pertama yang kita lakukan adalah membuat semua corpus kata kita menjadi sebuah paragraf utuh. kita akan menggunakan variabel 'data'.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>data_1 = ' '.join(data)\r\nprint (data_1)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>maka dihasilkan,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>oh pedulikan anak sekolah dana terdampak convid covid anak sekolah terkena dampaknya puluhan berbulan merasakan sekolah onlien iya berjuta juta sodara teman tk update contoh wakanda covid diatasi dng uu dng uu krumunan mnjadi cluster covid ig cegah masuknya covid personel polsek kahayan terapkan protokol kesehatan rutin cuci tangan putus penyebaran virus corona covid alasan pandemi covid narasi dirasa istana menghentikan upaya konsolidasi massa habib rizieq protokol kesehatan longgar mendadak dilaksanakan ketat prokesrezimabalabal prokesrezimabalabal himbauan bhabinkamtibmas teluk pucung polsek bekasi utara aiptu mugo kurniyanto komunitas pecinta peraturan daerah melaksanakan himbauan protokol kesehatan covid masyarakat pemakai jalan jl perjuangan teluk pucung bekasi utara pemilihan kepala daerah covid pemilih atur si covid milih tergantung pesanan deh pokok e iya maaf bundir stress kayaknya kena covid kritis gejala covid swab negatif menyingkirkan covid halo dok sembuh covid swab negative menjalakann test serology hasilnya reaktif bahaya dok imun terbentuk<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang kita akan visualisasikan dengan lebih indah data kita. Matplotlib juga dibutuhkan untuk menampilkan wordcloud kita.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>wordcloud = WordCloud(width=1600, height=800, max_font_size=200).generate(data_1)\r\nplt.figure(figsize=(12,10))\r\nplt.imshow(wordcloud, interpolation='bilinear')\r\nplt.axis(\"off\")\r\nplt.show()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>pada variabel wordcloud kita tentukan lebar img, tinggi img, dan ukuran dari huruf kita.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>pada variable figure kita tentukan ukuran figure saat ditampilan<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>pada variabel imshow, kita masukkan variabel wordcloud kita dan jenis interpolasi yang kita inginkan. Interpolasi dibutuhkan karena kita berusaha menempatkan kata-kata pada data kita pada sebuah image.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":13608,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-13608\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/Figure_2-1024x507.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Dari gambar di atas kita dapat melihat bahwa berita tersebut banyak membahas tentang Covid, protokol keseharan, dan sekolah. Artinya, tweet 10 orang tersebut lebih mengarah ke tiga kata kunci tersebut.<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-03-05 08:00:00","status_publish":"publish","urutan":5,"created_by":11253,"updated_by":11253,"created_at":"2020-12-20 19:13:30","updated_at":"2021-02-11 13:24:26","waktu_publish_formatted":" Jumat, 05 Maret 2021. 08:00:00 WIB."}]},{"id":132,"uuid":"97dde009-abe4-45d3-9e88-0b2b37009449","materi_id":10,"nama":"Materi Pekan 4","permalink":"materi-pekan-4","urutan":4,"created_by":11253,"updated_by":11253,"created_at":"2021-01-04 08:52:54","updated_at":"2021-01-28 12:43:08","posting":[{"id":465,"uuid":"07e8b963-4318-4c8f-a047-917f57f5efc1","author_user_id":11253,"materi_section_id":132,"judul":"Analysis Sentiment","permalink":"analysis-sentiment","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":12062,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-12062\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/title_13_1-1-1024x192.png\" alt=\"\" \/><\/figure>\r\n<p>&nbsp;<\/p>\r\n<p>&nbsp;<\/p>\r\n<p>Analisis Sentimen adalah kegiatan kita dalam menganalisa dan menilai suatu sentimen dalam sebuah kalimat. Dalam <em>data science<\/em> dan <em>business intelegent<\/em> ini merupakan salah satu hal yang penting karena kita dapat menilai reaksi pasar\/masyarakat terhadap suatu produk\/topik melalui opini yang mereka keluarkan. Sumbernya bisa banyak, contohnya kuisioner, wawancara, atau yang sedang terkenal sekarang, media sosial.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Secara umum, Analisis Sentimen ini dibagi menjadi 2 kategori besar :<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list {\"ordered\":true} --><\/p>\r\n<ol>\r\n<li><em>Coarse-grained sentiment analysis<\/em><\/li>\r\n<li><em>Fined-grained sentiment analysis<\/em><\/li>\r\n<\/ol>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p><em>Coarse-grained sentiment analysis<\/em> merupakan analisis sentimen yang dikerjakan pada tingkat dokumen sedangkan <em>Fined-grained sentiment analysis<\/em> bekerja pada tingkat kalimat<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Contoh sederhana dari <em>Fined-grained sentiment analysis<\/em> adalah:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Saya suka makan bakso - (Suka - positif)<\/li>\r\n<li>Saya selalu berusaha menghindari kemacetan (menghindari - negatif)<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Dengan mengolah suatu data melalui Analisis Sentimen maka perusahaan dapat mengeluarkan kebijakan yang lebih akurat yang mengikuti arus opini masyarakat. Atau bisa menjadi salah satu sarana evaluasi kebijakan apakah dapat diterima dengan baik oleh masyarakat atau tidak.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Langkah - langkah saat kita akan melakukan analisis sentimen secara garis besar adalah :<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Siapkan data yang akan kita gunakan<\/li>\r\n<li>lakukan pembersihan data (pra-proses)<\/li>\r\n<li>lakukan pengolahan analisis sentimen<\/li>\r\n<li>Presentasikan<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:spacer {\"height\":41} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading --><\/p>\r\n<h2>Mencari Topik Panas<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Mencari trending topik suatu lokasi menjadi cara paling mudah untuk mengetahui mengerjakan analisis sentimen pada suatu daerah, kenapa? karena masuk pada bursa trending topik artinya topik tersebut memiliki arus percakapan yang deras sehingga data yang akan kita ambil untuk melakukan analisis akan lebih banyak. Akan tetapi kekurangannya juga kita harus lebih pintar dalam melakukan filter data karena ada kemungkinan cukup banyak tweet yang akan membiaskan penilaian kita secara keseluruhan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>langkah pertama untuk mencari topik yang sedang trending adalah kita harus mencari <em>where on earth id<\/em> atau yang biasa disingkat woe id. Berikut saya berikan beberapa woe id untuk wilayah indonesia<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>Bekasi Indonesia 1030077\r\nDepok Indonesia 1032539\r\nPekanbaru Indonesia 1040779\r\nSurabaya Indonesia 1044316\r\nMakassar Indonesia 1046138\r\nBandung Indonesia 1047180\r\nJakarta Indonesia 1047378\r\nMedan Indonesia 1047908\r\nPalembang Indonesia 1048059\r\nSemarang Indonesia 1048324\r\nTangerang Indonesia 1048536\r\nIndonesia Indonesia 23424846<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk saat ini kita akan menggunakan id untuk negara indonesia (23424846). Pertama kita import library kita dan inisiasikan token keamanan kita.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import tweepy\r\n\r\nconsumer_key = [\"kode kalian\"]\r\nconsumer_secret = [\"kode kalian\"]\r\naccess_token = [\"kode kalian\"]\r\naccess_token_secret = [\"kode kalian\"]<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah itu mari kita inisiasikan variaebl untuk akses kita<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>auth = tweepy.OAuthHandler(consumer_key, consumer_secret)\r\nauth.set_access_token(access_token, access_token_secret)\r\napi = tweepy.API(auth)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Lalu mulai kita tuliskan kode untuk mengambil <em>trending topic<\/em> yang kita inginkan. Sebelumnya kita harus tuliskan variabel untuk <em>woe id<\/em><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>Indonesia_woe = 23424846\r\n    \r\ntrends = api.trends_place(Indonesia_woe)\r\nprint(trends)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Saat kita print maka akan menghasilkan,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>[{'trends': [{'name': '#ExaARMY', 'url': 'http:\/\/twitter.com\/search?q=%23ExaARMY', 'promoted_content': None, 'query': '%23ExaARMY', 'tweet_volume': 1952076}, {'name': '#1DWWATOUR', 'url': 'http:\/\/twitter.com\/search?q=%231DWWATOUR', 'promoted_content': None, 'query': '%231DWWATOUR', 'tweet_volume': 37032}, {'name': '#TalkWithFluke', 'url': 'http:\/\/twitter.com\/search?q=%23TalkWithFluke', 'promoted_content': None, 'query': '%23TalkWithFluke', 'tweet_volume': 61824}, ...]}]<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Ternyata data yang didapatkan adalah Json object. Data yang ingin kita ambil ada dalam key \"name\" dan jika kita lihat key \"name\" berada di dalam list index pertama, lalu key \"trends\" lalu list lagi. Maka kita dapat merumuskannya dengan kode,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>for item in (trends[0]['trends']):\r\n       print (item['name'])<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>#ExaARMY\r\n#1DWWATOUR\r\n#TalkWithFluke\r\n#tniperkasaindonesiahebat\r\n#1BillionViews1stWin\r\nyoungk\r\nKOOKIE\r\nJK of BTS by BTS\r\nPS Store\r\nHai R\r\nAkang\r\nAngkringan\r\n...<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Akhirnya kita mendapatkan kumpulan <em>trending topic<\/em> di wilayah Indonesia dan itu bisa menjadi dasar kita melakukan pencarian jika diinginkan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":44} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading --><\/p>\r\n<h2>Analisis Sentimen<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Pada kesempatan kali ini kita akan melakukan analisis sentimen sederhana dengan menggunakan perbandingan isi kalimat terhadap suatu kumpulan kata sentimen. Maka dari itu kita harus menyiapkan database kata sentimen positif dan negatif. Database tersebut sudah saya siapkan dalam file di bawah (sumber: <a href=\"https:\/\/github.com\/riochr17\/Analisis-Sentimen-ID\">https:\/\/github.com\/riochr17\/Analisis-Sentimen-ID<\/a> )<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:file {\"id\":12089,\"href\":\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/kata_positif.txt\"} --><\/p>\r\n<div class=\"wp-block-file\"><a href=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/kata_positif.txt\">kata_positif<\/a><a class=\"wp-block-file__button\" href=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/kata_positif.txt\" download=\"\">Unduh<\/a><\/div>\r\n<p><!-- \/wp:file --> <!-- wp:file {\"id\":12090,\"href\":\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/kata_negatif.txt\"} --><\/p>\r\n<div class=\"wp-block-file\"><a href=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/kata_negatif.txt\">kata_negatif<\/a><a class=\"wp-block-file__button\" href=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/kata_negatif.txt\" download=\"\">Unduh<\/a><\/div>\r\n<p><!-- \/wp:file --> <!-- wp:paragraph --><\/p>\r\n<p>Pertama mari kita ambil data yang kita butuhkan dari media sosial twitter.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import tweepy\r\nimport re\r\nimport pandas as pd\r\nimport matplotlib.pyplot as plt\r\nimport numpy as np\r\n\r\nconsumer_key = [\"kode kalian\"]\r\nconsumer_secret = [\"kode kalian\"]\r\naccess_token = [\"kode kalian\"]\r\naccess_token_secret = [\"kode kalian\"]\r\n\r\n\r\nauth = tweepy.OAuthHandler(consumer_key, consumer_secret)\r\nauth.set_access_token(access_token, access_token_secret)\r\napi = tweepy.API(auth)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk melakukan pencarian tweet kita akan mengunakan kode <em>api.search <\/em> kita juga akan menggunakan cursor disini. Sebelumnya kita akan menentukan kata kunci pencarian kita dan tanggal mulai diambilnya tweet. Untuk saat ini mari kita cari kata kunci \"covid\" dan \"2020-07-23\"<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>search_words = \"covid\"\r\ndate_since = \"2020-07-23\"\r\nnew_search = search_words + \" -filter:retweets\"\r\n\r\ntweets = tweepy.Cursor(api.search,\r\n        q=new_search,\r\n        lang=\"id\",\r\n        since=date_since).items(10)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>filter disini digunakan untuk melakukan pengecualian pada konten Retweet.<br \/>q merupakan query\/kata kunci yang dipakai<br \/>lang merupakan bahasa pencarian<br \/>items digunakan untuk melakukan pembatasan hasil pencarian<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Karena tweet nanti akan berupa list maka kita akan melakukan <em>loop<\/em> untuk mengambil masing-masing data. Dalam loop ini kita akan langsung melakukan pembersihan data dari kata\/karakter seperti @, link, dsb.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>    items = []\r\n    for tweet in tweets:\r\n        items.append (' '.join(re.sub(\"(@[A-Za-z0-9]+)|([^0-9A-Za-z \\t])|(\\w+:\\\/\\\/\\S+)\", \" \", tweet.text).split()))\r\n    hasil = pd.DataFrame(data=items, columns=['tweet'])<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Data tweet sudah kita dapatkan maka mari sekarang kita lakukan evaluasi dan analisis nilai positif dan negatif semua kalimat yang telah kita ambil. Pertama kita buka file list kata positif dan negatif yang kita punya lalu untuk setiap kalimat yang kita miliki kita akan menghitung terdapat berapa kata positif dan negatif.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>pos_list= open(\".\/kata_positif.txt\",\"r\")\r\npos_kata = pos_list.readlines()\r\nneg_list= open(\".\/kata_negatif.txt\",\"r\")\r\nneg_kata = neg_list.readlines()  <\/code><\/pre>\r\n<div>\r\n<div>\r\n<div>\r\n<div><code>list_anti&nbsp;=&nbsp;['tidak','lawan','anti',&nbsp;'belum',&nbsp;'belom',&nbsp;'tdk',&nbsp;'jangan',&nbsp;'gak',&nbsp;'enggak',&nbsp;'bukan',&nbsp;'sulit',&nbsp;'tak',&nbsp;'sblm']<\/code><\/div>\r\n<\/div>\r\n<\/div>\r\n<div><code><\/code><\/div>\r\n<div><code>for&nbsp;item&nbsp;in&nbsp;items:<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;print(item.strip())<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;tweets&nbsp;=&nbsp;item.strip().split()&nbsp;#tokenization<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;print(tweets)<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;count_p&nbsp;=&nbsp;0&nbsp;#nilai&nbsp;positif<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;count_n&nbsp;=&nbsp;0&nbsp;#nilai&nbsp;negatif<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;tweet&nbsp;in&nbsp;tweets:<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;kata_pos&nbsp;in&nbsp;pos_kata:<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;kata_pos.strip().lower()&nbsp;==&nbsp;tweet.lower():<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;items[items.index(item)-1]&nbsp;in&nbsp;list_anti:<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(items[items.index(item)-1],&nbsp;kata_pos,&nbsp;['negatif'])<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count_n&nbsp;+=&nbsp;1<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else:<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(kata_pos,&nbsp;['positif'])<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count_p&nbsp;+=&nbsp;1<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;kata_neg&nbsp;in&nbsp;neg_kata:<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;kata_neg.strip().lower()&nbsp;==&nbsp;tweet.lower():<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;items[items.index(item)-1]&nbsp;in&nbsp;list_anti:<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(items[items.index(item)-1],&nbsp;kata_neg,&nbsp;['positif'])<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count_p&nbsp;+=&nbsp;1<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else:<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(kata_neg,&nbsp;['negatif'])<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count_n&nbsp;+=&nbsp;1<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;print&nbsp;(\"positif:&nbsp;\"+str(count_p))<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;print&nbsp;(\"negatif:&nbsp;\"+str(count_n))<\/code><\/div>\r\n<div>&nbsp;<\/div>\r\n<\/div>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang mari kita hitung evaluasi dari sentimen kita dengan persamaan berikut<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>Total Nilai = Nilai Positif - Nilai Negatif<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Total Nilai&nbsp;&gt; 0, maka sentimen positif<br \/>Total Nilai&nbsp;&lt; 0, maka sentimen negatif<br \/>Total Nilai = 0, maka sentimen netral<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Hasil perhitungan kita masukkan ke dalam dataframe pandas agar lebih mudah untuk memanipulasi dan melihat. Lalu kita coba cari nilai rata-rata dan standar deviasinya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<div>\r\n<div><code>hasil&nbsp;=&nbsp;[]<\/code><\/div>\r\n<div><code>list_anti&nbsp;=&nbsp;['tidak','lawan','anti',&nbsp;'belum',&nbsp;'belom',&nbsp;'tdk',&nbsp;'jangan',&nbsp;'gak',&nbsp;'enggak',&nbsp;'bukan',&nbsp;'sulit',&nbsp;'tak',&nbsp;'sblm']<\/code><\/div>\r\n<br \/>\r\n<div><code>for&nbsp;item&nbsp;in&nbsp;items:<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;print(item.strip())<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;tweets&nbsp;=&nbsp;item.strip().split()&nbsp;#tokenization<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;print(tweets)<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;count_p&nbsp;=&nbsp;0&nbsp;#nilai&nbsp;positif<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;count_n&nbsp;=&nbsp;0&nbsp;#nilai&nbsp;negatif<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;tweet&nbsp;in&nbsp;tweets:<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;kata_pos&nbsp;in&nbsp;pos_kata:<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;kata_pos.strip().lower()&nbsp;==&nbsp;tweet.lower():<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;items[items.index(item)-1]&nbsp;in&nbsp;list_anti:<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(items[items.index(item)-1],&nbsp;kata_pos,&nbsp;['negatif'])<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count_n&nbsp;+=&nbsp;1<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else:<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(kata_pos,&nbsp;['positif'])<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count_p&nbsp;+=&nbsp;1<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;kata_neg&nbsp;in&nbsp;neg_kata:<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;kata_neg.strip().lower()&nbsp;==&nbsp;tweet.lower():<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;items[items.index(item)-1]&nbsp;in&nbsp;list_anti:<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(items[items.index(item)-1],&nbsp;kata_neg,&nbsp;['positif'])<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count_p&nbsp;+=&nbsp;1<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else:<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(kata_neg,&nbsp;['negatif'])<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count_n&nbsp;+=&nbsp;1<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;print&nbsp;(\"positif:&nbsp;\"+str(count_p))<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;print&nbsp;(\"negatif:&nbsp;\"+str(count_n))<\/code><\/div>\r\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;hasil.append(count_p&nbsp;-&nbsp;count_n)<\/code><\/div>\r\n<\/div>\r\n<pre class=\"wp-block-code\"><code> &nbsp; &nbsp;# print (\"-----------------------------------------------------\")\r\n    \r\nprint (\"Nilai rata-rata: \"+str(np.mean(hasil)))\r\nprint (\"Standar deviasi: \"+str(np.std(hasil)))<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Kita lakukan plot terhadap data,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>    labels, counts = np.unique(hasil, return_counts=True)\r\n    plt.bar(labels, counts, align='center')\r\n    plt.gca().set_xticks(labels)\r\n    plt.show()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Hasil yang kita dapat adalah,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Nilai rata-rata: -0.3<br \/>Standar deviasi: 1.1<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":12055,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-12055\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/Figure_1-1.png\" alt=\"\" \/>\r\n<figcaption>Plot Nilai Sentimen terhadap jumlah<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Artinya bahwa untuk jumlah tweet 10 buah Sentimen masyarakat twitter masih berada ke arah sedikit negatif untuk bahasan covid. Dari sini kita tahu bahwa dengan database kata yang baik dan jumlah data mentah yang mumpuni akan membuat analisis sentimen menjadi alat yang cukup kuat untuk melihat kecenderungan pasar. Analisis lebih lanjut dari data juga akan menguatkan kesimpulan yang didapat dari proses analisis sentimen.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":50} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:paragraph --><\/p>\r\n<p>Sumber Bacaan<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><a href=\"https:\/\/hkalabs.com\/bermain-twitter-dengan-r-part-3-pengantar-sentiment-analysis\/\">https:\/\/hkalabs.com\/bermain-twitter-dengan-r-part-3-pengantar-sentiment-analysis\/<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><a href=\"https:\/\/hkalabs.com\/bermain-twitter-dengan-r-part-4-pengantar-algoritma-klasifikasi-sentimen\/\">https:\/\/hkalabs.com\/bermain-twitter-dengan-r-part-4-pengantar-algoritma-klasifikasi-sentimen\/<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><a href=\"https:\/\/hkalabs.com\/bermain-twitter-dengan-r-part-5-sentiment-analysis-go-jek-vs-grab-vs-uber\/\">https:\/\/hkalabs.com\/bermain-twitter-dengan-r-part-5-sentiment-analysis-go-jek-vs-grab-vs-uber\/<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><a href=\"https:\/\/medium.com\/@wildanalazkia\/sentiment-analysis-in-r-8924856e4b62\">https:\/\/medium.com\/@wildanalazkia\/sentiment-analysis-in-r-8924856e4b62<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><a href=\"https:\/\/medium.com\/@irvanseptiar\/introduction-sentiment-analysis-mudah-5785f88e435d\">https:\/\/medium.com\/@irvanseptiar\/introduction-sentiment-analysis-mudah-5785f88e435d<\/a><\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-03-08 08:00:00","status_publish":"publish","urutan":1,"created_by":11253,"updated_by":11253,"created_at":"2021-01-04 08:55:54","updated_at":"2021-03-08 14:30:19","waktu_publish_formatted":" Senin, 08 Maret 2021. 08:00:00 WIB."},{"id":466,"uuid":"8c52466e-e255-4074-9180-f887e6b8f4a5","author_user_id":11253,"materi_section_id":132,"judul":"Analysis Sentiment - Naive Bayes","permalink":"analysis-sentiment-naive-bayes","konten":"<p><!-- wp:paragraph --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:paragraph --><\/p>\r\n<p>Sekarang kita akan mencoba untuk melakukan Analsis sentiment menggunakan salah satu metode Supervised Learning yaitu Naive Bayes. Seperti yang kita tahu bahwa pada <em>supervised learning<\/em> kita membutuhkan dataset agar mesin kita dapat belajar jadi pastika kita mempunyai dataset sudah memiliki dataset tersebut. Bisa dengan cara melakukan analisis sentiment terlebih dahulu dengan menggunakan perbandingan antara kata negatif-positif seperti kemarin, atau dengan mencari dataset yang sudah diberi label di internet.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Pada kesempatan ini kalian bisa menggunakan dataset tweet di bawah, untuk memperingan kinerja pada kesempatan pertama ini maka diberikan dataset dengan ukuran kecil<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:file {\"id\":10802,\"href\":\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/09\/dataset_tweet_2.csv\"} --><\/p>\r\n<div class=\"wp-block-file\"><a href=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/09\/dataset_tweet_2.csv\">dataset_tweet_2<\/a><a class=\"wp-block-file__button\" href=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/09\/dataset_tweet_2.csv\" download=\"\">Unduh<\/a><\/div>\r\n<p><!-- \/wp:file --> <!-- wp:paragraph --><\/p>\r\n<p>Mari kita coba baca dataset kita lalu membaginya kedalam dua atribut, yaitu tweet dan label.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import pandas as pd\r\nimport csv\r\n\r\nfile = 'dataset_tweet_2.csv'\r\n\r\ntoken_data = open(file)\r\ntokens = csv.reader(token_data, delimiter=';')\r\ntweets = []\r\nlabel = []\r\nfor row in tokens:\r\n    tweets.append(row[0])\r\n    label.append(int(row[1].replace(',','')))\r\n\r\ndf = pd.DataFrame(columns=['tweets','label'])\r\ndf['tweets'] = tweets\r\ndf['label'] = label\r\n\r\nprint (df)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Maka akan menghasilkan,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>                                               tweets  label\r\n0   rt @napqilla: no 1, 3 ambisinya menguasai raky...      1\r\n1   rt @pandji: nah gue pikir sentimen petahana ok...      1\r\n2   rt @pandji: urutan pertama best moment #debat2...      1\r\n3   rt @pandji: ini artikel yg menjelaskan ternyat...      1\r\n4   rt @mrtampi: agus makin santai.\\nahok makin sa...      0\r\n..                                                ...    ...\r\n76  rt @pandji: nah gue pikir sentimen petahana ok...      0\r\n77  rt @josua_tm: ibu sylvi adalah contoh bahwa wa...      1\r\n78  besok saya ajak kesana saja, saya udah survei ...      1\r\n79  benerr bgt.. dan tidak mengajak penonton ikut ...      1\r\n80  rt @gandy_koz: pak anis,kl pas libur lebaran i...      1\r\n\r\n[81 rows x 2 columns]<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>lalu selanjutnya kita akan melakukan pembersihan tweet di atas, kita akan memanfaatkan modul stemming pada sastrawi, jadi jangan lupa untuk menambahkan import pada bagian library. pertama kita akan melakukan case folding lalu kita akan melakukan stemming.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import re,string\r\n\r\nclean_tweets = []\r\nfor tweet in tweets:\r\n    def hapus_tanda(tweet): \r\n        tanda_baca = set(string.punctuation)\r\n        tweet = ''.join(ch for ch in tweet if ch not in tanda_baca)\r\n        return tweet\r\n    \r\n    tweet=tweet.lower()\r\n    tweet = re.sub(r'\\\\u\\w\\w\\w\\w', '', tweet)\r\n    tweet=re.sub(r'http\\S+','',tweet)\r\n    #hapus @username\r\n    tweet=re.sub('@[^\\s]+','',tweet)\r\n    #hapus #tagger \r\n    tweet = re.sub(r'#([^\\s]+)', r'\\1', tweet)\r\n    #hapus tanda baca\r\n    tweet=hapus_tanda(tweet)\r\n    #hapus angka dan angka yang berada dalam string \r\n    tweet=re.sub(r'\\w*\\d\\w*', '',tweet).strip()\r\n    \r\n    #stemming\r\n    factory = StemmerFactory()\r\n    stemmer = factory.create_stemmer()\r\n    tweet = stemmer.stem(tweet)\r\n    clean_tweets.append(tweet)\r\n\r\ndf['clean'] = clean_tweets\r\nprint(df.head())\r\n<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>maka akan menghasilkan,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":10811,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-10811\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/09\/hari_16_1-1024x137.jpg\" alt=\"\" \/>\r\n<figcaption>tampilan dataframe<\/figcaption>\r\n<\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3,\"backgroundColor\":\"vivid-cyan-blue\",\"textColor\":\"white\"} --><\/p>\r\n<h3 class=\"has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\">Machine Learning &amp; Data Teks<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Seperti yang kita tahu untuk dapat menggunakan sebuah model machine learning maka kita membutuhkan data dengan tipe numerik atau integer, akan tetapi salah satu satu feature yang kita miliki merupakan data teks. Nah pada kesempatan ini kita akan memanfaatkan metode perubahan data teks - matriks yang sudah kita pelajari sebelumnya, yaitu TF-IDF<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Mari kita mulai, kita akan memanfaatkan metode TfidVectorizer pada library sklearn dan gaussian Naive Bayes.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from sklearn.feature_extraction.text import TfidfVectorizer\r\nfrom sklearn.naive_bayes import GaussianNB\r\n\r\nvectorizer = TfidfVectorizer (max_features=2500)\r\nmodel_g = GaussianNB()<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Lalu kita ubah data clean_tweet kita ke dalam bentuk TFIDF Vectorizer<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>v_data = vectorizer.fit_transform(df['clean']).toarray()\r\n\r\nprint (v_data)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>maka akan menghasilkan,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>  (0, 10)       0.18913840804590096\r\n  (0, 232)      0.27777504205235853\r\n  (0, 262)      0.27777504205235853\r\n  (0, 230)      0.23692725517145605\r\n  (0, 170)      0.20394859337799942\r\n  (0, 222)      0.27777504205235853\r\n  (0, 338)      0.40789718675599884\r\n  (0, 214)      0.27777504205235853\r\n  (0, 15)       0.5555500841047171\r\n  (0, 284)      0.27777504205235853\r\n  (0, 345)      0.0754070869995221\r\n  (1, 138)      0.28117693158765905\r\n  (1, 45)       0.2624008048150012\r\n  (1, 240)      0.2624008048150012\r\n  (1, 327)      0.28117693158765905\r\n  (1, 263)      0.28117693158765905\r\n  (1, 402)      0.24783690942774547\r\n  (1, 241)      0.28117693158765905\r\n  (1, 110)      0.19637671509980026\r\n...\r\n...<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:spacer {\"height\":30} --><\/p>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<p><!-- \/wp:spacer --> <!-- wp:quote {\"align\":\"center\",\"className\":\"is-style-large\"} --><\/p>\r\n<blockquote class=\"wp-block-quote has-text-align-center is-style-large\">\r\n<p>(0, 10) 0.18913840804590096<\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:paragraph --><\/p>\r\n<p>angka <strong>0<\/strong> melambangkan kalimat\/tweet pertama,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>angka <strong>10<\/strong> melambangkan kata ke 10 pada urutan kata di penggabungan,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><strong>0.18<\/strong>.... melambangkan nilai pembobotan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Jika masih bingung dengan (0,10) coba baca lagi materi terkait TF IDF pada beberapa hari sebelumnya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah ini mari kita lakukan pembagian data menjadi data train dan testing lalu fit kedalam model kita.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from sklearn.model_selection import train_test_split\r\n\r\nX_train, X_test, y_train, y_test = train_test_split(v_data, df['label'], test_size=0.2, random_state=0)\r\nmodel_g.fit(X_train,y_train)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Dan kita lakukan penghitungan confussion matrix, classification report, dan accuracy score<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>from sklearn.metrics import classification_report, confusion_matrix, accuracy_score\r\n\r\ny_preds = model_g.predict(X_test)\r\n\r\nprint(confusion_matrix(y_test,y_preds))\r\nprint(classification_report(y_test,y_preds))\r\nprint('nilai akurasinya adalah ',accuracy_score(y_test, y_preds))<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Hasilnya adalah,<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>[[8 4]\r\n [1 4]]\r\n              precision    recall  f1-score   support\r\n\r\n           0       0.89      0.67      0.76        12\r\n           1       0.50      0.80      0.62         5\r\n\r\n    accuracy                           0.71        17\r\n   macro avg       0.69      0.73      0.69        17\r\nweighted avg       0.77      0.71      0.72        17\r\n\r\nnilai akurasinya adalah  0.7058823529411765<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk melakukan prediksi jangan lupa untuk mengubah 0 dan 1 menjadi sebuah parameter string pada akhir langkah.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>tweet = ''\r\nv_data = vectorizer.transform([tweet]).toarray()\r\ny_preds = model_g.predict(v_data)\r\n\r\n#dengan asumsi bahwa 1 merupakan label positif\r\nif y_preds == 1:\r\n    print('Positif')\r\nelse:\r\n    print('Negatif')<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Peningkatan nilai akurasi sendiri bisa dilakukan seperti saat melakukan penerapan metode-metode supervised learning sebelumnya. Mengubah Metode juga bisa dilakukan untuk melihat metode mana dengan parameter mana yang paling baik untuk diterapkan.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":50} --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-03-09 10:03:00","status_publish":"publish","urutan":2,"created_by":11253,"updated_by":11253,"created_at":"2021-01-05 12:03:01","updated_at":"2021-02-11 13:25:32","waktu_publish_formatted":" Selasa, 09 Maret 2021. 10:03:00 WIB."},{"id":467,"uuid":"b2f8e82e-7718-4b08-bdec-0d4464d44cb5","author_user_id":11253,"materi_section_id":132,"judul":"Pengenalan Network-X","permalink":"pengenalan-network-x","konten":"<h1 class=\"entry-title\"><!-- wp:paragraph --><\/h1>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-13720\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/networkx-1024x229.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<h1 class=\"entry-title\"><!-- \/wp:image --> <!-- wp:heading {\"level\":3,\"backgroundColor\":\"vivid-cyan-blue\",\"textColor\":\"white\"} --><\/h1>\r\n<h3 class=\"has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\">Network<\/h3>\r\n<h1 class=\"entry-title\"><!-- \/wp:heading --> <!-- wp:paragraph --><\/h1>\r\n<p>Network atau jaringan adalah suatu sturktur keterhubungan antar entitas. Network sering kita temui dalam kehidupan sehari-hari, misalnya adalah jaringan telepon. Jaringan telepon menghubungan satu user dengan user lainnya dalam sebuah struktur jaringan. Contoh lainnya adalah jaringan rel kereta api.<\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/h1>\r\n<p>Dalam istilah matematika, network sering juga disebut dengan graph. Graph juga merupakan salah satu jenis dari basisdata NoSQL.<\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":4} --><\/h1>\r\n<h4>Kenapa harus network<\/h4>\r\n<h1 class=\"entry-title\"><!-- \/wp:heading --> <!-- wp:paragraph --><\/h1>\r\n<p>Dengan menggunakan Network atau Graph kita bisa mendapatkan insight baru dari suatu data, dikarenakan mudahnya kita dalam melihat hubungan antar entitas. Karena hal ini juga maka visualisasi dalam graph sering digunakan dalam analisis sosial media.<\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/h1>\r\n<p>Saat melakukan analisis kita bisa melihat mana user yang memiliki banyak interaksi dengan user lainnya dengan cepat, mana user yang merupakan pusat dari sebuah topik, dan kita juga bisa melakukan analisis user yang dicurigai merupakan bot.<\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/h1>\r\n<p>Dalam beberapa kasus, Graph biasanya digunakan untuk mencari jalur terdekat dari satu titik ke titik lainnya. Contohnya adalah algoritma yang digunakan dalam aplikasi peta.<\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":4} --><\/h1>\r\n<h4>Struktur Data Graph<\/h4>\r\n<h1 class=\"entry-title\"><!-- \/wp:heading --> <!-- wp:paragraph --><\/h1>\r\n<p>Struktur data pada graph dibagi kedalam dua bagian penting, yaitu:<\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --> <!-- wp:list --><\/h1>\r\n<ul>\r\n<li>Node<\/li>\r\n<li>Edge<\/li>\r\n<\/ul>\r\n<h1 class=\"entry-title\"><!-- \/wp:list --> <!-- wp:paragraph --><\/h1>\r\n<p>Node merupakan pengambaran dari entitas yang kita miliki, misalnya pada kasus kota Jakarta dan Bandung digambarkan seperti pada gambar di bawah ini.<\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":13737,\"sizeSlug\":\"large\"} --><\/h1>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-13737\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/5.png\" alt=\"\" \/>\r\n<figcaption>Terdapat dua node dalam model diatas, yaitu Jakarta dan Bandung<\/figcaption>\r\n<\/figure>\r\n<\/div>\r\n<h1 class=\"entry-title\"><!-- \/wp:image --> <!-- wp:paragraph --><\/h1>\r\n<p>Edge merupakan keterhubungan antara dua entitas tersebut, misalkan dalam sistem transportasi kereta api. Jika yang menjadi node adalah stasiun A dan B maka edge nya merupakan hubungan antara stasiun itu yang diperlihatkan oleh rel kereta antar dua stasiun tersebut. Pada kasus sebelumnya digambarkan oleh gambar di bawah ini.<\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":13740,\"sizeSlug\":\"large\"} --><\/h1>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-13740\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/6.png\" alt=\"\" \/>\r\n<figcaption>Terdapat satu edge dalam model di atas, yaitu Jakarta - Bandung<\/figcaption>\r\n<\/figure>\r\n<\/div>\r\n<h1 class=\"entry-title\"><!-- \/wp:image --> <!-- wp:spacer {\"height\":35} --><\/h1>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<h1 class=\"entry-title\"><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3,\"backgroundColor\":\"vivid-cyan-blue\",\"textColor\":\"white\"} --><\/h1>\r\n<h3 class=\"has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\">Mengenal NetworkX<\/h3>\r\n<h1 class=\"entry-title\"><!-- \/wp:heading --> <!-- wp:paragraph --><\/h1>\r\n<p>NetworkX merupakan library yang digunakan dalam bahasa pemograman python untuk kebutuhan penggambaran model graph. Untuk melakukan instalasi kita dapat menggunakan kode<\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --> <!-- wp:code --><\/h1>\r\n<pre class=\"wp-block-code\"><code>pip install networkx<\/code><\/pre>\r\n<h1 class=\"entry-title\"><!-- \/wp:code --> <!-- wp:paragraph --><\/h1>\r\n<p>atau<\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --> <!-- wp:code --><\/h1>\r\n<pre class=\"wp-block-code\"><code>py -m pip install networkx\r\n\r\n#py bisa diganti dengan alias python kalian, misal python <\/code><\/pre>\r\n<h1 class=\"entry-title\"><!-- \/wp:code --> <!-- wp:heading {\"level\":4} --><\/h1>\r\n<h4>Node &amp; Edge<\/h4>\r\n<h1 class=\"entry-title\"><!-- \/wp:heading --> <!-- wp:paragraph --><\/h1>\r\n<p>Seperti pada penjelasan sebelumnya, Node dan Edge merupakan suatu atribut penting dalam model graph, karena itu mengetahui cara menggunakannya dalam library networkx merupakan suatu hal fundamental. sebelum memulai mari kita import library yang kita butuhkan.<\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --> <!-- wp:code --><\/h1>\r\n<pre class=\"wp-block-code\"><code>import networkx as nx<\/code><\/pre>\r\n<h1 class=\"entry-title\"><!-- \/wp:code --> <!-- wp:paragraph --><\/h1>\r\n<p>Hal pertama yang harus kita lakukan adalah menginisiasi objek networkx kita . Kita melakukannya dengan memanggil metode Graph()<\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --> <!-- wp:code --><\/h1>\r\n<pre class=\"wp-block-code\"><code>G = nx.Graph()<\/code><\/pre>\r\n<h1 class=\"entry-title\"><!-- \/wp:code --> <!-- wp:paragraph --><\/h1>\r\n<p>Setelah ini kita mengawali semua kode kita dengan memanggil variabel 'G'. Untuk memasukkan node kita maka kita menggunakan metode add_node()<\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --> <!-- wp:code --><\/h1>\r\n<pre class=\"wp-block-code\"><code>G.add_node(1)\r\nG.add_node(3)<\/code><\/pre>\r\n<h1 class=\"entry-title\"><!-- \/wp:code --> <!-- wp:paragraph --><\/h1>\r\n<p>Kita bisa melihat node yang kita telah masukkan dengan menggunakan metode nodes()<\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --> <!-- wp:code --><\/h1>\r\n<pre class=\"wp-block-code\"><code>G.nodes()<\/code><\/pre>\r\n<h1 class=\"entry-title\"><!-- \/wp:code --> <!-- wp:preformatted --><\/h1>\r\n<pre class=\"wp-block-preformatted\"><code><span class=\"has-inline-color\">[1,3]<\/span><\/code><\/pre>\r\n<h1 class=\"entry-title\"><!-- \/wp:preformatted --> <!-- wp:paragraph --><\/h1>\r\n<p>Jika kita ingin memasukkan banyak node sekaligus, kita bisa menggunakan list lalu memasukkannya menggunakan metode add_nodes_from()<\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --> <!-- wp:code --><\/h1>\r\n<pre class=\"wp-block-code\"><code>list_data = [4,5,6]\r\nG.add_nodes_from(list_data)<\/code><\/pre>\r\n<h1 class=\"entry-title\"><!-- \/wp:code --> <!-- wp:preformatted --><\/h1>\r\n<pre class=\"wp-block-preformatted\"><code><span class=\"has-inline-color\">[1, 3, 4, 5, 6]<\/span><\/code><\/pre>\r\n<h1 class=\"entry-title\"><!-- \/wp:preformatted --> <!-- wp:paragraph --><\/h1>\r\n<p>Untuk memasukkan edget kita maka kita menggunakan metode add_edge()<\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --> <!-- wp:code --><\/h1>\r\n<pre class=\"wp-block-code\"><code>G.add_edge(1,3)<\/code><\/pre>\r\n<h1 class=\"entry-title\"><!-- \/wp:code --> <!-- wp:paragraph --><\/h1>\r\n<p>Kita bisa melihat edges yang kita telah masukkan dengan menggunakan metode edges()<\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --> <!-- wp:code --><\/h1>\r\n<pre class=\"wp-block-code\"><code>G.edges()<\/code><\/pre>\r\n<h1 class=\"entry-title\"><!-- \/wp:code --> <!-- wp:preformatted --><\/h1>\r\n<pre class=\"wp-block-preformatted\"><code><span class=\"has-inline-color\">[(1,3)]<\/span><\/code><\/pre>\r\n<h1 class=\"entry-title\"><!-- \/wp:preformatted --> <!-- wp:paragraph --><\/h1>\r\n<p>Jika kita ingin memasukkan banyak edge sekaligus, kita bisa menggunakan list lalu memasukkannya menggunakan metode add_edges_from(). Ingat satu edge dipisahkan oleh satu kurung.<\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --> <!-- wp:code --><\/h1>\r\n<pre class=\"wp-block-code\"><code>list_data_e = [(3,4),(4,5)]\r\nG.add_edges_from(list_data_e)<\/code><\/pre>\r\n<h1 class=\"entry-title\"><!-- \/wp:code --> <!-- wp:preformatted --><\/h1>\r\n<pre class=\"wp-block-preformatted\"><code><span class=\"has-inline-color\">[(1, 3), (4, 3), (4, 5)]<\/span><\/code><\/pre>\r\n<h1 class=\"entry-title\"><!-- \/wp:preformatted --> <!-- wp:heading {\"level\":4} --><\/h1>\r\n<h4>Menampilkan model<\/h4>\r\n<h1 class=\"entry-title\"><!-- \/wp:heading --> <!-- wp:paragraph --><\/h1>\r\n<p>Untuk menampilkan model graph yang telah kita buat kita membutuhkan bantuan library visualisasi misalnya, matplotlib. Maka dari itu hal pertama yang kita lakukan adalah import library tersebut.<\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --> <!-- wp:code --><\/h1>\r\n<pre class=\"wp-block-code\"><code>import matplotlib.pyplot as plt<\/code><\/pre>\r\n<h1 class=\"entry-title\"><!-- \/wp:code --> <!-- wp:paragraph --><\/h1>\r\n<p>Untuk menampilkan model, kita akan menggunakan metode draw() yang dimiliki oleh networkx.<\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --> <!-- wp:code --><\/h1>\r\n<pre class=\"wp-block-code\"><code>nx.draw(G)\r\nplt.show()<\/code><\/pre>\r\n<h1 class=\"entry-title\"><!-- \/wp:code --> <!-- wp:image {\"align\":\"center\",\"id\":13751,\"sizeSlug\":\"large\"} --><\/h1>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-13751\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/7-1024x507.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<h1 class=\"entry-title\"><!-- \/wp:image --> <!-- wp:heading {\"level\":4} --><\/h1>\r\n<h4>Memberikan label<\/h4>\r\n<h1 class=\"entry-title\"><!-- \/wp:heading --> <!-- wp:paragraph --><\/h1>\r\n<p>Akan lebih menarik jika model yang kita buat memiliki label karena itu juga akan membuat label kita lebih informatif. Kita akan menggunakan metode nodes untuk memberikan label.<\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --> <!-- wp:code --><\/h1>\r\n<pre class=\"wp-block-code\"><code>G.nodes[1]['label'] = '1'\r\nG.nodes[3]['label'] = '3'\r\nG.nodes[4]['label'] = '4'\r\nG.nodes[5]['label'] = '5'\r\nG.nodes[6]['label'] = '6'<\/code><\/pre>\r\n<h1 class=\"entry-title\"><!-- \/wp:code --> <!-- wp:paragraph --><\/h1>\r\n<p>kurung siku pertama merupakan node yang ingin kita ubah labelnya. jika kita tampilkan maka akan menjadi,<\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --> <!-- wp:code --><\/h1>\r\n<pre class=\"wp-block-code\"><code>print(G.nodes(data=True))<\/code><\/pre>\r\n<h1 class=\"entry-title\"><!-- \/wp:code --> <!-- wp:preformatted --><\/h1>\r\n<pre class=\"wp-block-preformatted\"><code><span class=\"has-inline-color\">[(1, {'label': '1'}), (4, {'label': '4'}), (5, {'label': '5'}), (6, {'label': '6'}), (3, {'label': '3'})]<\/span><\/code><\/pre>\r\n<h1 class=\"entry-title\"><!-- \/wp:preformatted --> <!-- wp:paragraph --><\/h1>\r\n<p>Untuk menampilkan model graph dengan label maka kita tidak menggunakan draw() tapi draw_networkx().<\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --> <!-- wp:code --><\/h1>\r\n<pre class=\"wp-block-code\"><code>nx.draw_networkx(G)<\/code><\/pre>\r\n<h1 class=\"entry-title\"><!-- \/wp:code --> <!-- wp:image {\"align\":\"center\",\"id\":13753,\"sizeSlug\":\"large\"} --><\/h1>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-13753\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/8.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<h1 class=\"entry-title\"><!-- \/wp:image --> <!-- wp:spacer {\"height\":35} --><\/h1>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<h1 class=\"entry-title\"><!-- \/wp:spacer --> <!-- wp:heading {\"level\":3,\"backgroundColor\":\"vivid-cyan-blue\",\"textColor\":\"white\"} --><\/h1>\r\n<h3 class=\"has-white-color has-vivid-cyan-blue-background-color has-text-color has-background\">Analisa Data Twitter<\/h3>\r\n<h1 class=\"entry-title\"><!-- \/wp:heading --> <!-- wp:spacer {\"height\":35} --><\/h1>\r\n<div class=\"wp-block-spacer\" aria-hidden=\"true\">&nbsp;<\/div>\r\n<h1 class=\"entry-title\"><!-- \/wp:spacer --> <!-- wp:paragraph --><\/h1>\r\n<p>Sekarang kita akan coba untuk mengimplementasikan model graph kedalam analisis sosial media kita.<\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/h1>\r\n<p>Langkah-langkah yang harus kita lakukan adalah:<\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --> <!-- wp:list --><\/h1>\r\n<ul>\r\n<li>Ambil data twitter yang kita butuhkan. karena kita menginginkan hubungan antar tweet maka kita tidak akan melakukan filter retweet, malah kita akan mengambil hanya retweet.<\/li>\r\n<li>Ambil username dari user asli dan user yg melakukan retweet.<\/li>\r\n<li>masukkan dalam list yang berbeda (boleh juga dibuat dalam dataframenya sehingga terdapat dua kolom). Ini akan kita gunakan sebagai data edges kita.<\/li>\r\n<li>Untuk mendapatkan data nodes, kita akan menggabungkan kedua list tersebut tanpa pengulangan.<\/li>\r\n<li>Masukkan label<\/li>\r\n<li>Tampilkan<\/li>\r\n<\/ul>\r\n<h1 class=\"entry-title\"><!-- \/wp:list --> <!-- wp:paragraph --><\/h1>\r\n<p>Kita akan melakukan langkah pertama, yaitu melakukan pengambilan. pertama kita akan import semua library yang dibutuhkan.<\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --> <!-- wp:code --><\/h1>\r\n<pre class=\"wp-block-code\"><code>import tweepy\r\nimport csv\r\nimport networkx as nx\r\nimport matplotlib.pyplot as plt<\/code><\/pre>\r\n<h1 class=\"entry-title\"><!-- \/wp:code --> <!-- wp:paragraph --><\/h1>\r\n<p>Lalu kita persiapkan kunci penting twitter kita,<\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --> <!-- wp:code --><\/h1>\r\n<pre class=\"wp-block-code\"><code>token_data = open('secrettoken.csv')\r\ntokens = csv.reader(token_data,delimiter=',')\r\n\r\ndata_token = [row[2] for row in tokens]\r\n\r\nconsumer_key = data_token[0]\r\nconsumer_secret = data_token[1]\r\naccess_token = data_token[2]\r\naccess_token_secret = data_token[3]<\/code><\/pre>\r\n<h1 class=\"entry-title\"><!-- \/wp:code --> <!-- wp:paragraph --><\/h1>\r\n<p>Persiapkan autentikasi dan obyek tweepy kita,<\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --> <!-- wp:code --><\/h1>\r\n<pre class=\"wp-block-code\"><code>auth = tweepy.OAuthHandler(consumer_key, consumer_secret)\r\nauth.set_access_token(access_token, access_token_secret)\r\napi = tweepy.API(auth)<\/code><\/pre>\r\n<h1 class=\"entry-title\"><!-- \/wp:code --> <!-- wp:paragraph --><\/h1>\r\n<p>Sekarang kita akan lakukan pengambilan,<\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --> <!-- wp:code --><\/h1>\r\n<pre class=\"wp-block-code\"><code>kata_kunci = 'covid'\r\n\r\ntweets = api.search(q=kata_kunci, lang='id', count=100, tweet_mode='extended')<\/code><\/pre>\r\n<h1 class=\"entry-title\"><!-- \/wp:code --> <!-- wp:paragraph --><\/h1>\r\n<p>pada kesempatan kali ini saya akan menggunakan kata kunci 'covid', bahasa indonesia, dan pengambilan 100 tweet. Untuk mode, karena kita hanya butuh username maka boleh tanpa mode extended.<\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/h1>\r\n<p>Pertama untuk mengambil data yang kita butuh kan kita perlu mengetahui bagaimana struktur dari data yang kita miliki.<\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --> <!-- wp:code --><\/h1>\r\n<pre class=\"wp-block-code\"><code>print(tweets[0]._json.keys())<\/code><\/pre>\r\n<h1 class=\"entry-title\"><!-- \/wp:code --> <!-- wp:preformatted --><\/h1>\r\n<pre class=\"wp-block-preformatted\"><code><span class=\"has-inline-color\">dict_keys(['created_at', 'id', 'id_str', 'full_text', 'truncated', 'display_text_range', 'entities', 'metadata', 'source', 'in_reply_to_status_id', 'in_reply_to_status_id_str', 'in_reply_to_user_id', 'in_reply_to_user_id_str', 'in_reply_to_screen_name', 'user', 'geo', 'coordinates', 'place', 'contributors', 'retweeted_status', 'is_quote_status', 'retweet_count', 'favorite_count', 'favorited', 'retweeted', 'lang'])<\/span><\/code><\/pre>\r\n<h1 class=\"entry-title\"><!-- \/wp:preformatted --> <!-- wp:paragraph --><\/h1>\r\n<p>Data yang kita inginkan ada dalam key 'user' dan 'retweeted_status'. Untuk lebih jelasnya bisa baca dokumentasi twitter, link ditaruh dibawah. Maka sekarang saatnya kita mengambil data kita dan memasukkannya ke dalam list.<\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --> <!-- wp:code --><\/h1>\r\n<pre class=\"wp-block-code\"><code>user = []\r\nrt_user = []\r\nfor tweet in tweets:\r\n    try:\r\n        rt_user.append(tweet._json['retweeted_status']['user']['screen_name'])\r\n        user.append(tweet.user.screen_name)\r\n    except:\r\n        pass<\/code><\/pre>\r\n<h1 class=\"entry-title\"><!-- \/wp:code --> <!-- wp:paragraph --><\/h1>\r\n<p>Karena tidak semua tweet adalah RT maka kita gunakan try else untuk menghindari error. sekarang kita coba tampilkan.<\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --> <!-- wp:code --><\/h1>\r\n<pre class=\"wp-block-code\"><code>print(user)\r\nprint(rt_user)\r\n\r\nprint(len(user))\r\nprint(len(rt_user))<\/code><\/pre>\r\n<h1 class=\"entry-title\"><!-- \/wp:code --> <!-- wp:preformatted --><\/h1>\r\n<pre class=\"wp-block-preformatted\"><code><span class=\"has-inline-color\">['ayupuspawati12', 'Muceddd', 'alssyzn', 'AhmadIrfanAsh', 'Handi_Erawan', 'syazanajamean', 'raihnhrmli', 'Leechansew14', '01september2019', 'alinnharoon', 'Aidilsson', 'shafixium', 'FARHAN_LORDFIE1', 'asyikinshfrdn', 'tokabahtabah', 'akmalarif90', 'blvinrani', 'lalapo96314264', 'realAbikaTrader', 'fufufffff', 'lilazman', 'kanakoe21', 'adawiyasaad', 'sumayyahlavida', 'lalapo96314264', 'lalapo96314264', 'friendlyabd', 'ajambenuden', 'bang_akbar84', 'anuar_ibrahim31', 'hasyahanisya_', '<em>_millllllll', 'nuramirashahran', 'lalapo96314264', 'kidoz93', 'lalapo96314264', 'Razi35627698', 'mrzmuhaimin', '_iamnis', 'pwettyvonswift', 'Blackki46286484', 'Adesugie777', 'adyranifa', 'zahidlalala', 'Kejora2015', 'seseyjaee', 'anuar_ibrahim31', 'yayasan_rinjani', 'Faraaadibaaa', 'Silk_hati', 'adyranifa'] <\/em><\/span><\/code> <code><span class=\"has-inline-color\"><em>['peyek_kedele', 'armanamin330', 'Amrlamnnn', 'InfoKuala', 'doktermarket', 'Amrlamnnn', 'itsstartwiths<\/em>', 'meinmokhtar', 'doktermarket', 'Amrlamnnn', 'armanamin330', 'armanamin330', 'Amrlamnnn', 'Amrlamnnn', 'Jackvladamir', 'hmetromy', 'Amrlamnnn', 'DewiMau15582126', 'DrTaufan1', 'Amrlamnnn', 'shah_ve', 'doktermarket', 'PDRMsia', 'nanash711', 'GinaFadila6', 'jasmine_hasanah', 'efenerr', 'meinmokhtar', 'elbynz', 'JaPenWPKL', 'Amrlamnnn', 'Amrlamnnn', 'Amrlamnnn', 'AmaliinaNursafa', 'jimiecheng', 'IndraSa90786357', 'MCAOps', 'Jackvladamir', 'Amrlamnnn', 'SyedSaddiq', 'Amrlamnnn', 'DrTaufan1', 'DoodlesRPEnt', 'meinmokhtar', 'japenjohor', 'Amrlamnnn', 'JaPenWPKL', 'Kabar_PLB', 'Kabar_PLB', 'DrTaufan1', 'peyek_kedele']\r\n51 <\/span><\/code> <code><span class=\"has-inline-color\">51<\/span><\/code><\/pre>\r\n<h1 class=\"entry-title\"><!-- \/wp:preformatted --> <!-- wp:paragraph --><\/h1>\r\n<p>data edges kita sudah jadi , mari kita buat data nodes kita,<\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --> <!-- wp:code --><\/h1>\r\n<pre class=\"wp-block-code\"><code>resulting_list = list(user)\r\nresulting_list.extend(x for x in rt_user if x not in resulting_list)\r\n\r\nprint(len(resulting_list))<\/code><\/pre>\r\n<h1 class=\"entry-title\"><!-- \/wp:code --> <!-- wp:preformatted --><\/h1>\r\n<pre class=\"wp-block-preformatted\"><code><span class=\"has-inline-color\">78<\/span><\/code><\/pre>\r\n<h1 class=\"entry-title\"><!-- \/wp:preformatted --> <!-- wp:paragraph --><\/h1>\r\n<p>Sekarang mari kita masukkan data nodes dan edges kita dalam ke dalam graph.<\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --> <!-- wp:code --><\/h1>\r\n<pre class=\"wp-block-code\"><code>G = nx.Graph()\r\n\r\nG.add_nodes_from(resulting_list)\r\nfor i in range(len(user)):\r\n    G.add_edge(user[i],rt_user[i])<\/code><\/pre>\r\n<h1 class=\"entry-title\"><!-- \/wp:code --> <!-- wp:paragraph --><\/h1>\r\n<p>Saat kita tampilkan datanya,<\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --> <!-- wp:code --><\/h1>\r\n<pre class=\"wp-block-code\"><code>print(G.nodes(data=True))\r\nprint(G.edges())<\/code><\/pre>\r\n<h1 class=\"entry-title\"><!-- \/wp:code --> <!-- wp:preformatted --><\/h1>\r\n<pre class=\"wp-block-preformatted\"><code><span class=\"has-inline-color\">[('ayupuspawati12', {}), ('Muceddd', {}), ('alssyzn', {}), ('AhmadIrfanAsh', {}), ('Handi_Erawan', {}), ('syazanajamean', {}), ('raihnhrmli', {}), ('Leechansew14', {}), ('01september2019', {}), ('alinnharoon', {}), ('Aidilsson', {}), ('shafixium', {}), ('FARHAN_LORDFIE1', {}), ('asyikinshfrdn', {}), ('tokabahtabah', {}), ('akmalarif90', {}), ('blvinrani', {}), ('lalapo96314264', {}), ('realAbikaTrader', {}), ('fufufffff', {}), ('lilazman', {}), ('kanakoe21', {}), ('adawiyasaad', {}), ('sumayyahlavida', {}), ('friendlyabd', {}), ('ajambenuden', {}), ('bang_akbar84', {}), ('anuar_ibrahim31', {}), ('hasyahanisya_', {}), ('<em>_millllllll', {}), ('nuramirashahran', {}), ('kidoz93', {}), ('Razi35627698', {}), ('mrzmuhaimin', {}), ('_iamnis', {}), ('pwettyvonswift', {}), ('Blackki46286484', {}), ('Adesugie777', {}), ('adyranifa', {}), ('zahidlalala', {}), ('Kejora2015', {}), ('seseyjaee', {}), ('yayasan_rinjani', {}), ('Faraaadibaaa', {}), ('Silk_hati', {}), ('peyek_kedele', {}), ('armanamin330', {}), ('Amrlamnnn', {}), ('InfoKuala', {}), ('doktermarket', {}), ('itsstartwiths<\/em>', {}), ('meinmokhtar', {}), ('Jackvladamir', {}), ('hmetromy', {}), ('DewiMau15582126', {}), ('DrTaufan1', {}), ('shah_ve', {}), ('PDRMsia', {}), ('nanash711', {}), ('GinaFadila6', {}), ('jasmine_hasanah', {}), ('efenerr', {}), ('elbynz', {}), ('JaPenWPKL', {}), ('AmaliinaNursafa', {}), ('jimiecheng', {}), ('IndraSa90786357', {}), ('MCAOps', {}), ('SyedSaddiq', {}), ('DoodlesRPEnt', {}), ('japenjohor', {}), ('Kabar_PLB', {})]<\/span><\/code> <code><strong><span class=\"has-inline-color\">[('ayupuspawati12', 'peyek_kedele'), ('Muceddd', 'armanamin330'), ('alssyzn', 'Amrlamnnn'), ('AhmadIrfanAsh', 'InfoKuala'), ('Handi_Erawan', 'doktermarket'), ('syazanajamean', 'Amrlamnnn'), ('raihnhrmli', 'itsstartwiths_'), ('Leechansew14', 'meinmokhtar'), ('01september2019', 'doktermarket'), ('alinnharoon', 'Amrlamnnn'), ('Aidilsson', 'armanamin330'), ('shafixium', 'armanamin330'), ('FARHAN_LORDFIE1', 'Amrlamnnn'), ('asyikinshfrdn', 'Amrlamnnn'), ('tokabahtabah', 'Jackvladamir'), ('akmalarif90', 'hmetromy'), ('blvinrani', 'Amrlamnnn'), ('lalapo96314264', 'DewiMau15582126'), ('lalapo96314264', 'GinaFadila6'), ('lalapo96314264', 'jasmine_hasanah'), ('lalapo96314264', 'AmaliinaNursafa'), ('lalapo96314264', 'IndraSa90786357'), ('realAbikaTrader', 'DrTaufan1'), ('fufufffff', 'Amrlamnnn'), ('lilazman', 'shah_ve'), ('kanakoe21', 'doktermarket'), ('adawiyasaad', 'PDRMsia'), ('sumayyahlavida', 'nanash711'), ('friendlyabd', 'efenerr'), ('ajambenuden', 'meinmokhtar'), ('bang_akbar84', 'elbynz'), ('anuar_ibrahim31', 'JaPenWPKL'), ('hasyahanisya_', 'Amrlamnnn'), ('__millllllll', 'Amrlamnnn'), ('nuramirashahran', 'Amrlamnnn'), ('kidoz93', 'jimiecheng'), ('Razi35627698', 'MCAOps'), ('mrzmuhaimin', 'Jackvladamir'), ('_iamnis', 'Amrlamnnn'), ('pwettyvonswift', 'SyedSaddiq'), ('Blackki46286484', 'Amrlamnnn'), ('Adesugie777', 'DrTaufan1'), ('adyranifa', 'DoodlesRPEnt'), ('adyranifa', 'peyek_kedele'), ('zahidlalala', 'meinmokhtar'), ('Kejora2015', 'japenjohor'), ('seseyjaee', 'Amrlamnnn'), ('yayasan_rinjani', 'Kabar_PLB'), ('Faraaadibaaa', 'Kabar_PLB'), ('Silk_hati', 'DrTaufan1')]<\/span><\/strong><\/code><\/pre>\r\n<h1 class=\"entry-title\"><!-- \/wp:preformatted --> <!-- wp:paragraph --><\/h1>\r\n<p>Sekarang mari kita tampilkan data kita,<\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --> <!-- wp:code --><\/h1>\r\n<pre class=\"wp-block-code\"><code>nx.draw_networkx(G, node_size=22)\r\nplt.show()<\/code><\/pre>\r\n<h1 class=\"entry-title\"><!-- \/wp:code --> <!-- wp:image {\"align\":\"center\",\"id\":13760,\"sizeSlug\":\"large\"} --><\/h1>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-13760\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/9-1024x507.png\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<h1 class=\"entry-title\"><!-- \/wp:image --> <!-- wp:paragraph --><\/h1>\r\n<p>Terlihat data yang kita ambil memiliki beberapa kumpulan dimana yang kumpulan terbesar berada di tengah. Untuk kebutuhkan visualisasi dan analisis, saat penyimpanan kita bisa melakukan perbesaran terlebih dahulu.<\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/h1>\r\n<p>&nbsp;<\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/h1>\r\n<h3>Bahan Bacaan:<\/h3>\r\n<h1 class=\"entry-title\"><!-- \/wp:heading --> <!-- wp:paragraph --><\/h1>\r\n<p><a href=\"https:\/\/developer.twitter.com\/en\/docs\/twitter-api\/v1\/data-dictionary\/overview\/intro-to-tweet-json#tweetobject\">https:\/\/developer.twitter.com\/en\/docs\/twitter-api\/v1\/data-dictionary\/overview\/intro-to-tweet-json#tweetobject<\/a><\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --> <!-- wp:spacer {\"height\":35} --><\/h1>\r\n<p>&nbsp;<\/p>\r\n<h1 class=\"entry-title\"><!-- \/wp:paragraph --><\/h1>","waktu_publish":"2021-03-10 08:04:00","status_publish":"publish","urutan":3,"created_by":11253,"updated_by":11253,"created_at":"2021-01-05 12:03:50","updated_at":"2021-02-11 13:25:22","waktu_publish_formatted":" Rabu, 10 Maret 2021. 08:04:00 WIB."}]},{"id":93,"uuid":"44841b9a-6143-41b7-bb9f-23f0c865eab0","materi_id":10,"nama":"Tugas Harian","permalink":"tugas-harian","urutan":5,"created_by":11253,"updated_by":11253,"created_at":"2020-12-07 11:31:25","updated_at":"2021-01-28 12:43:12","posting":[{"id":287,"uuid":"0152f442-870b-4937-ab2a-b8972322d505","author_user_id":11253,"materi_section_id":93,"judul":"Tugas ke-1","permalink":"tugas-ke-1","konten":"<p><!-- wp:list {\"ordered\":true} --><\/p>\r\n<ol>\r\n<li>Tugas harian dikerjakan secara individu<\/li>\r\n<li>Jika essai usahakan untuk menggunakan bahasa Indonesia yang baik &amp; benar sesuai EYD.<\/li>\r\n<li>Tugas dipublish pada pukul 12.00 setiap harinya dan dikumpulkan paling lambat pada hari selanjutnya pada pukul 11.59<\/li>\r\n<li>File tugas diberi nama sebagai berikut: tugas_1_emaildepan.ipynb (X diganti tugas keberapa)<\/li>\r\n<li>jika email kalian merupakan <a href=\"mailto:test@email.com\">test@email.com<\/a> maka emaildepan = test<\/li>\r\n<li>kumpulkan tugas pada link yang disediakan di bawah ini.<\/li>\r\n<\/ol>\r\n<p><!-- \/wp:list --> <!-- wp:file {\"id\":9529,\"href\":\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/Tugas-ke-1.pdf\"} --><\/p>\r\n<div class=\"wp-block-file\"><a href=\"https:\/\/drive.google.com\/file\/d\/1MoCwEzPyOcdc5BLaFsYavX1toEq0RVPZ\/view?usp=sharing\">Tugas ke-1<\/a><\/div>\r\n<div class=\"wp-block-file\">&nbsp;<\/div>\r\n<div class=\"wp-block-file\"><a href=\"https:\/\/forms.gle\/JUtExPmYMjAgNKtf6\">link_pengumpulan<\/a><\/div>\r\n<p><!-- \/wp:file --><\/p>","waktu_publish":"2021-02-15 11:59:00","status_publish":"publish","urutan":1,"created_by":11253,"updated_by":11253,"created_at":"2020-12-07 11:32:13","updated_at":"2021-02-15 11:50:29","waktu_publish_formatted":" Senin, 15 Februari 2021. 11:59:00 WIB."},{"id":295,"uuid":"569fe285-cc04-4bee-bc53-060da0552403","author_user_id":11253,"materi_section_id":93,"judul":"Tugas ke-2","permalink":"tugas-ke-2","konten":"<p><!-- wp:list {\"ordered\":true} --><\/p>\r\n<ol id=\"block-bb84b9c2-e544-4cf2-a293-23d80c81bdbe\">\r\n<li>Tugas harian dikerjakan secara individu<\/li>\r\n<li>Jika essai usahakan untuk menggunakan bahasa Indonesia yang baik &amp; benar sesuai EYD.<\/li>\r\n<li>Tugas dipublish pada pukul 12.00 setiap harinya dan dikumpulkan paling lambat pada hari selanjutnya pada pukul 11.59<\/li>\r\n<li>kumpulkan tugas pada link yang disediakan di bawah ini.<\/li>\r\n<\/ol>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:list --> <!-- wp:file {\"id\":9773,\"href\":\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/jumlah-penduduk-kota-bandung.csv\"} --><\/p>\r\n<div class=\"wp-block-file\"><a href=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/jumlah-penduduk-kota-bandung.csv\">jumlah-penduduk-kota-bandung<\/a><a class=\"wp-block-file__button\" href=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/jumlah-penduduk-kota-bandung.csv\" download=\"\">Unduh<\/a><\/div>\r\n<p><!-- \/wp:file --> <!-- wp:file {\"id\":9774,\"href\":\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/luas-wilayah-menurut-kecamatan-di-kota-bandung-2017.csv\"} --><\/p>\r\n<div class=\"wp-block-file\"><a href=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/luas-wilayah-menurut-kecamatan-di-kota-bandung-2017.csv\">luas-wilayah-menurut-kecamatan-di-kota-bandung-2017<\/a><a class=\"wp-block-file__button\" href=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/luas-wilayah-menurut-kecamatan-di-kota-bandung-2017.csv\" download=\"\">Unduh<\/a><\/div>\r\n<p><!-- \/wp:file --> <!-- wp:file {\"id\":11451,\"href\":\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/09\/Tugas-ke-2.pdf\"} --><\/p>\r\n<div class=\"wp-block-file\"><a href=\"https:\/\/drive.google.com\/file\/d\/14RRoGZV7ngGNIoE8Y7iYq9kn-zLdyCT6\/view?usp=sharing\">Tugas-ke-2<\/a><\/div>\r\n<div class=\"wp-block-file\">&nbsp;<\/div>\r\n<div class=\"wp-block-file\"><a href=\"https:\/\/forms.gle\/yLHWL21XVNoHqqSQ6\">Link Pengumpulan<\/a><\/div>\r\n<p><!-- \/wp:file --><\/p>","waktu_publish":"2021-02-16 11:59:00","status_publish":"publish","urutan":2,"created_by":11253,"updated_by":11253,"created_at":"2020-12-08 03:44:31","updated_at":"2021-02-16 11:12:25","waktu_publish_formatted":" Selasa, 16 Februari 2021. 11:59:00 WIB."},{"id":302,"uuid":"e71bb01b-40bd-448c-aabe-e0967a932dfe","author_user_id":11253,"materi_section_id":93,"judul":"Tugas ke-3","permalink":"tugas-ke-3","konten":"<p><!-- wp:list {\"ordered\":true} --><\/p>\r\n<ol id=\"block-bab53097-db2c-4c62-8b53-5be9688193f6\">\r\n<li>Tugas harian dikerjakan secara individu<\/li>\r\n<li>Jika essai usahakan untuk menggunakan bahasa Indonesia yang baik &amp; benar sesuai EYD.<\/li>\r\n<li>Tugas dipublish pada pukul 12.00 setiap harinya dan dikumpulkan paling lambat pada hari selanjutnya pada pukul 11.59<\/li>\r\n<li><em><strong>Kumpulkan file tugas pada link yang disediakan di bawah<\/strong><\/em><\/li>\r\n<\/ol>\r\n<p><!-- \/wp:list --> <!-- wp:file {\"id\":11505,\"href\":\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/09\/Tugas-Ke-3.pdf\"} --><\/p>\r\n<div class=\"wp-block-file\">&nbsp;<\/div>\r\n<p><!-- \/wp:file --> <!-- wp:file {\"id\":13846,\"href\":\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/12\/Tugas-Hari-ke-3-1.pdf\"} --><\/p>\r\n<p class=\"wp-block-file\"><a href=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/12\/Tugas-Hari-ke-3-1.pdf\">Tugas-Hari-ke-3<\/a><a class=\"wp-block-file__button\" href=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/12\/Tugas-Hari-ke-3-1.pdf\" download=\"\">Unduh<\/a><br \/><a href=\"https:\/\/forms.gle\/EZbSifGU8yRqHXYV7\">Link Pengumpulan<\/a><\/p>\r\n<p><!-- \/wp:file --> <!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-02-17 11:59:00","status_publish":"publish","urutan":3,"created_by":11253,"updated_by":11253,"created_at":"2020-12-09 08:28:01","updated_at":"2021-02-17 11:57:35","waktu_publish_formatted":" Rabu, 17 Februari 2021. 11:59:00 WIB."},{"id":305,"uuid":"fb41c6e4-c1a4-4199-a7eb-96f25161b0e9","author_user_id":11253,"materi_section_id":93,"judul":"Tugas ke-4","permalink":"tugas-ke-4","konten":"<p><!-- wp:list {\"ordered\":true} --><\/p>\r\n<ol id=\"block-ce3bc338-7f29-4be3-a910-48f341047440\">\r\n<li>Tugas harian dikerjakan secara individu<\/li>\r\n<li>Jika essai usahakan untuk menggunakan bahasa Indonesia yang baik &amp; benar sesuai EYD.<\/li>\r\n<li>Tugas dipublish pada pukul 12.00 setiap harinya dan dikumpulkan paling lambat pada hari selanjutnya pada pukul 11.59<\/li>\r\n<li>Unggah file tugas pada link yang disediakan di bawah ini<\/li>\r\n<\/ol>\r\n<p><!-- \/wp:list --> <!-- wp:file {\"id\":11567,\"href\":\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/Tugas-Ke-4.pdf\"} --><\/p>\r\n<div class=\"wp-block-file\"><a href=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/Tugas-Ke-4.pdf\">Tugas-Ke-4<\/a><a class=\"wp-block-file__button\" href=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/Tugas-Ke-4.pdf\" download=\"\">Unduh<\/a><br \/><br \/><a href=\"https:\/\/forms.gle\/LDvAdk6Tchzv3bBF9\">Link Pengumpulan<\/a><\/div>\r\n<p><!-- \/wp:file --><\/p>","waktu_publish":"2021-02-18 11:59:00","status_publish":"publish","urutan":4,"created_by":11253,"updated_by":11253,"created_at":"2020-12-10 11:27:23","updated_at":"2021-02-18 12:13:29","waktu_publish_formatted":" Kamis, 18 Februari 2021. 11:59:00 WIB."},{"id":307,"uuid":"7d8a9a4e-2ca5-446a-9eab-ddc0e769bdef","author_user_id":11253,"materi_section_id":93,"judul":"Tugas ke-5","permalink":"tugas-ke-5","konten":"<p><!-- wp:list {\"ordered\":true} --><\/p>\r\n<ol id=\"block-520a8c14-0c4e-4451-83de-53c6336a1bc2\">\r\n<li>Tugas harian dikerjakan secara individu<\/li>\r\n<li>Jika essai usahakan untuk menggunakan bahasa Indonesia yang baik &amp; benar sesuai EYD.<\/li>\r\n<li>Unggah file tugas pada link yang disediakan di bawah ini<\/li>\r\n<\/ol>\r\n<p><!-- \/wp:list --> <!-- wp:file {\"id\":12958,\"href\":\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/Tugas-ke-5.pdf\"} --><\/p>\r\n<div class=\"wp-block-file\"><a href=\"https:\/\/drive.google.com\/file\/d\/135QF5BMOGK5ciyn7MTOjOO5v_4x_GTqp\/view?usp=sharing\">Tugas-ke-5<\/a><br \/><br \/><a href=\"https:\/\/forms.gle\/r2hsoNGnxfao9Q2k7\">Link Pengumpulan<\/a><\/div>\r\n<p><!-- \/wp:file --><\/p>","waktu_publish":"2021-02-19 12:30:00","status_publish":"publish","urutan":5,"created_by":11253,"updated_by":11253,"created_at":"2020-12-11 12:29:48","updated_at":"2021-02-19 12:56:15","waktu_publish_formatted":" Jumat, 19 Februari 2021. 12:30:00 WIB."},{"id":313,"uuid":"9be870f8-da6a-4166-9900-a970f7d87799","author_user_id":11253,"materi_section_id":93,"judul":"Tugas ke-6","permalink":"tugas-ke-6","konten":"<p><!-- wp:list {\"ordered\":true} --><\/p>\r\n<ol id=\"block-9f85662a-f9b8-49a7-98cb-eb56d08c79eb\">\r\n<li>Tugas harian dikerjakan secara individu<\/li>\r\n<li>Jika essai usahakan untuk menggunakan bahasa Indonesia yang baik &amp; benar sesuai EYD.<\/li>\r\n<li>Pertanyaan dan Penjelasan silahkan diisikan pada link yang disediakan di bawah ini.<\/li>\r\n<\/ol>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p><a href=\"https:\/\/forms.gle\/AY7KXW9LAKfbz5dC8\" target=\"_blank\" rel=\"noreferrer noopener\">Alamat pengerjaan tugas<\/a><\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-02-22 11:59:00","status_publish":"publish","urutan":6,"created_by":11253,"updated_by":11253,"created_at":"2020-12-13 22:34:33","updated_at":"2021-02-20 02:46:21","waktu_publish_formatted":" Senin, 22 Februari 2021. 11:59:00 WIB."},{"id":339,"uuid":"d3b282b1-3018-45a5-9508-108c9467cf40","author_user_id":11253,"materi_section_id":93,"judul":"Tugas ke-7","permalink":"tugas-ke-7","konten":"<ol>\r\n<li>Tugas harian dikerjakan secara individu<\/li>\r\n<li>Jika essai usahakan untuk menggunakan bahasa Indonesia yang baik &amp; benar sesuai EYD.<\/li>\r\n<li>Tugas dikumpulkan melalui link yang disediakan di bawah ini.<\/li>\r\n<\/ol>\r\n<p>&nbsp;<\/p>\r\n<p><a title=\"Tugas_7\" href=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/12\/Tugas-Ke-7.pdf\">Link Tugas<\/a><br \/><br \/><a href=\"https:\/\/forms.gle\/GXBSLJ4ZMEZnWuCb9\">Link Pengumpulan<\/a><\/p>","waktu_publish":"2021-02-23 12:00:00","status_publish":"publish","urutan":7,"created_by":11253,"updated_by":11253,"created_at":"2020-12-15 04:28:56","updated_at":"2021-02-23 12:03:12","waktu_publish_formatted":" Selasa, 23 Februari 2021. 12:00:00 WIB."},{"id":346,"uuid":"50001887-5aa2-43c9-a6f1-5fd8df39dd7a","author_user_id":11253,"materi_section_id":93,"judul":"Tugas ke-8","permalink":"tugas-ke-8","konten":"<p><!-- wp:list {\"ordered\":true} --><\/p>\r\n<ol id=\"block-51933d06-e78b-43bc-84ba-2c5934150996\">\r\n<li>Tugas harian dikerjakan secara individu<\/li>\r\n<li>Jika essai usahakan untuk menggunakan bahasa Indonesia yang baik &amp; benar sesuai EYD.<\/li>\r\n<li>File diunggah pada link di bawah<\/li>\r\n<\/ol>\r\n<div class=\"wp-block-file\">&nbsp;<\/div>\r\n<p><!-- \/wp:file --> <!-- wp:file {\"id\":13906,\"href\":\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/12\/Tugas-Ke-8.pdf\"} --><\/p>\r\n<div class=\"wp-block-file\"><a href=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/12\/Tugas-Ke-8.pdf\">Tugas-Ke-8<\/a><a class=\"wp-block-file__button\" href=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/12\/Tugas-Ke-8.pdf\" download=\"\">Unduh<\/a><br \/><br \/><a href=\"https:\/\/forms.gle\/h3wXG4Zf7dzE1Kji8\">Link Pengumpulan<\/a><\/div>\r\n<p><!-- \/wp:file --><\/p>","waktu_publish":"2021-02-24 11:59:00","status_publish":"publish","urutan":8,"created_by":11253,"updated_by":11253,"created_at":"2020-12-16 07:00:30","updated_at":"2021-02-24 13:48:50","waktu_publish_formatted":" Rabu, 24 Februari 2021. 11:59:00 WIB."},{"id":359,"uuid":"85b38f74-5c4f-48af-90c1-f0af8130eb5d","author_user_id":11253,"materi_section_id":93,"judul":"Tugas ke-9","permalink":"tugas-ke-9","konten":"<p><!-- wp:list {\"ordered\":true} --><\/p>\r\n<ol id=\"block-2e8de1de-69d6-4ef8-a4df-95ba72359e75\">\r\n<li>Tugas harian dikerjakan secara individu<\/li>\r\n<li>Jika essai usahakan untuk menggunakan bahasa Indonesia yang baik &amp; benar sesuai EYD.<\/li>\r\n<li>Unggah file tugas pada link yang disediakan di bawah ini<\/li>\r\n<\/ol>\r\n<p><!-- \/wp:file --> <!-- wp:file {\"id\":13927,\"href\":\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/12\/Tugas-ke-9.pdf\"} --><\/p>\r\n<div class=\"wp-block-file\"><a href=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/12\/Tugas-ke-9.pdf\">Tugas-ke-9<\/a><a class=\"wp-block-file__button\" href=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/12\/Tugas-ke-9.pdf\" download=\"\">Unduh<\/a><br \/><br \/><a href=\"https:\/\/forms.gle\/R4g4EEWqUw5kMUJL6\">Link Pengumpulan<\/a><\/div>\r\n<p><!-- \/wp:file --><\/p>","waktu_publish":"2021-02-25 12:00:00","status_publish":"publish","urutan":9,"created_by":11253,"updated_by":11253,"created_at":"2020-12-17 12:20:49","updated_at":"2021-02-25 12:37:27","waktu_publish_formatted":" Kamis, 25 Februari 2021. 12:00:00 WIB."},{"id":381,"uuid":"b3e77508-d3e7-44ff-96d0-28e2b0cdc90e","author_user_id":11253,"materi_section_id":93,"judul":"Tugas ke-10","permalink":"tugas-ke-10","konten":"<p><!-- wp:list {\"ordered\":true} --><\/p>\r\n<ol id=\"block-2e8de1de-69d6-4ef8-a4df-95ba72359e75\">\r\n<li>Tugas harian dikerjakan secara individu<\/li>\r\n<li>Jika essai usahakan untuk menggunakan bahasa Indonesia yang baik &amp; benar sesuai EYD.<\/li>\r\n<li>Unggah file tugas pada link yang disediakan di bawah ini<\/li>\r\n<\/ol>\r\n<div class=\"wp-block-file\">&nbsp;<\/div>\r\n<p><!-- \/wp:file --> <!-- wp:file {\"id\":13940,\"href\":\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/12\/Tugas-ke-10_1.pdf\"} --><\/p>\r\n<div class=\"wp-block-file\"><a href=\"https:\/\/drive.google.com\/file\/d\/1mZReBwKi9SO82_B7ATbIxUsvAXsg5nHI\/view?usp=sharing\">Tugas-ke-10<\/a><br \/><br \/><a href=\"https:\/\/forms.gle\/rzZ8NbkmBGwpkmxi7\">Link Pengumpulan<\/a><\/div>\r\n<p><!-- \/wp:file --><\/p>","waktu_publish":"2021-02-26 15:00:00","status_publish":"publish","urutan":10,"created_by":11253,"updated_by":11253,"created_at":"2020-12-18 11:15:43","updated_at":"2021-02-26 13:57:37","waktu_publish_formatted":" Jumat, 26 Februari 2021. 15:00:00 WIB."},{"id":406,"uuid":"fe8693f9-7760-4d29-8b5c-c1b563a3481a","author_user_id":11253,"materi_section_id":93,"judul":"Tugas ke-11","permalink":"tugas-ke-11","konten":"<p><!-- wp:list {\"ordered\":true} --><\/p>\r\n<ol id=\"block-2e8de1de-69d6-4ef8-a4df-95ba72359e75\">\r\n<li>Tugas harian dikerjakan secara individu<\/li>\r\n<li>Jika essai usahakan untuk menggunakan bahasa Indonesia yang baik &amp; benar sesuai EYD.<\/li>\r\n<li>Unggah file tugas pada link yang disediakan di bawah ini<\/li>\r\n<\/ol>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:list --> <!-- wp:file {\"id\":13396,\"href\":\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/Tugas-Hari-ke-11.pdf\"} --><\/p>\r\n<div class=\"wp-block-file\"><a href=\"https:\/\/drive.google.com\/file\/d\/1DBbnWL-y3f1lNInQBzRKaFfBXe4xhXcu\/view?usp=sharing\">Tugas_11<\/a><\/div>\r\n<p><!-- \/wp:file --> <!-- wp:paragraph --><\/p>\r\n<p><a href=\"https:\/\/forms.gle\/BmHPJ4cwXZCaW6ST9\">Link Pengumpulan<\/a><\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-03-01 13:00:00","status_publish":"publish","urutan":11,"created_by":11253,"updated_by":11253,"created_at":"2020-12-21 12:02:07","updated_at":"2021-03-01 13:08:02","waktu_publish_formatted":" Senin, 01 Maret 2021. 13:00:00 WIB."},{"id":423,"uuid":"fbdb5487-b07f-45e6-8618-8d9379c5f1f6","author_user_id":11253,"materi_section_id":93,"judul":"Tugas ke-12","permalink":"tugas-ke-12","konten":"<p><!-- wp:list {\"ordered\":true} --><\/p>\r\n<ol id=\"block-2e8de1de-69d6-4ef8-a4df-95ba72359e75\">\r\n<li>Tugas harian dikerjakan secara individu<\/li>\r\n<li>Jika essai usahakan untuk menggunakan bahasa Indonesia yang baik &amp; benar sesuai EYD.<\/li>\r\n<li>Unggah file tugas pada link yang disediakan di bawah ini<\/li>\r\n<\/ol>\r\n<div class=\"wp-block-file\">&nbsp;<\/div>\r\n<p><!-- \/wp:file --> <!-- wp:file {\"id\":13955,\"href\":\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/12\/tugas-hari-12.pdf\"} --><\/p>\r\n<div class=\"wp-block-file\"><a href=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/12\/tugas-hari-12.pdf\">tugas-hari-12<\/a><a class=\"wp-block-file__button\" href=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/12\/tugas-hari-12.pdf\" download=\"\">Unduh<\/a><br \/><br \/><a href=\"https:\/\/forms.gle\/j69doH6xUq2bygsG9\">Link Pengumpulan<\/a><\/div>\r\n<p><!-- \/wp:file --> <!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-03-02 12:30:00","status_publish":"publish","urutan":12,"created_by":11253,"updated_by":11253,"created_at":"2020-12-22 12:28:16","updated_at":"2021-03-02 13:11:56","waktu_publish_formatted":" Selasa, 02 Maret 2021. 12:30:00 WIB."},{"id":511,"uuid":"478b5433-cfe1-4224-bdda-f12484521889","author_user_id":11253,"materi_section_id":93,"judul":"Tugas ke-13","permalink":"tugas-ke-13","konten":"<ol id=\"block-2e8de1de-69d6-4ef8-a4df-95ba72359e75\">\r\n<li>Tugas harian dikerjakan secara individu<\/li>\r\n<li>Jika essai usahakan untuk menggunakan bahasa Indonesia yang baik &amp; benar sesuai EYD.<\/li>\r\n<li>Unggah file tugas pada link yang disediakan di bawah ini<\/li>\r\n<li>Simpan semua yang dibutuhkan (kode, plot, analisa) pada file pdf.<\/li>\r\n<li>Beri nama tugas_13_emaildepan.pdf<\/li>\r\n<\/ol>\r\n<p><a href=\"https:\/\/drive.google.com\/file\/d\/1zKAacLKKThjLVQ-jTYTQfQv6dxhYDNDK\/view?usp=sharing\">tugas<\/a><\/p>\r\n<p><a href=\"https:\/\/forms.gle\/dKDrF6AmibVevoER8\">link pengumpulan<\/a><\/p>","waktu_publish":"2021-03-03 13:01:00","status_publish":"publish","urutan":13,"created_by":11253,"updated_by":11253,"created_at":"2021-01-28 12:43:36","updated_at":"2021-03-03 21:04:38","waktu_publish_formatted":" Rabu, 03 Maret 2021. 13:01:00 WIB."},{"id":437,"uuid":"00ff5203-5f1f-4440-800d-4db03297692d","author_user_id":11253,"materi_section_id":93,"judul":"Tugas ke-14","permalink":"tugas-ke-14","konten":"<p><!-- wp:list {\"ordered\":true} --><\/p>\r\n<ol id=\"block-2e8de1de-69d6-4ef8-a4df-95ba72359e75\">\r\n<li>Tugas harian dikerjakan secara individu<\/li>\r\n<li>Jika essai usahakan untuk menggunakan bahasa Indonesia yang baik &amp; benar sesuai EYD.<\/li>\r\n<li>Unggah file tugas pada link yang disediakan di bawah ini<\/li>\r\n<\/ol>\r\n<p>&nbsp;<\/p>\r\n<p><a href=\"https:\/\/drive.google.com\/file\/d\/1nqsjBFTJpePe0hjLtZgqrF1arOdza9YM\/view?usp=sharing\">tugas<\/a><\/p>\r\n<p><a href=\"https:\/\/drive.google.com\/file\/d\/1o4oU2RH-BOX-4pv_mUyP7sq297jACxnX\/view?usp=sharing\">basisdata<\/a><\/p>\r\n<p><!-- \/wp:file --> <!-- wp:file {\"id\":13955,\"href\":\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/12\/tugas-hari-12.pdf\"} --><\/p>\r\n<div class=\"wp-block-file\"><a href=\"https:\/\/forms.gle\/q9ZVWcUZx63bnR748\">link pengumpulan<\/a><\/div>\r\n<p><!-- \/wp:file --> <!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-03-05 12:30:00","status_publish":"publish","urutan":14,"created_by":11253,"updated_by":11253,"created_at":"2020-12-28 02:16:17","updated_at":"2021-03-05 13:09:58","waktu_publish_formatted":" Jumat, 05 Maret 2021. 12:30:00 WIB."},{"id":452,"uuid":"9750e0e3-2d1c-452a-a5d5-1f0c038a22f2","author_user_id":11253,"materi_section_id":93,"judul":"Tugas ke-15","permalink":"tugas-ke-15","konten":"<p><!-- wp:list {\"ordered\":true} --><\/p>\r\n<ol id=\"block-2e8de1de-69d6-4ef8-a4df-95ba72359e75\">\r\n<li>Tugas harian dikerjakan secara individu<\/li>\r\n<li>Kumpulkan pada link yang disediakan<\/li>\r\n<\/ol>\r\n<p><a href=\"https:\/\/drive.google.com\/file\/d\/1OlyJeOlOEkRrlQWbkeI6u_lRcLkGZalG\/view?usp=sharing\">tugas<\/a><\/p>\r\n<p><!-- \/wp:file --> <!-- wp:file {\"id\":13955,\"href\":\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/12\/tugas-hari-12.pdf\"} --><\/p>\r\n<div class=\"wp-block-file\"><a href=\"https:\/\/forms.gle\/akWhLeoPtJp7spzA6\">link pengumpulan<\/a><\/div>\r\n<p><!-- \/wp:file --> <!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-03-08 13:00:00","status_publish":"publish","urutan":15,"created_by":11253,"updated_by":11253,"created_at":"2020-12-29 13:02:51","updated_at":"2021-03-08 12:32:37","waktu_publish_formatted":" Senin, 08 Maret 2021. 13:00:00 WIB."}]},{"id":131,"uuid":"07a3c174-1bd2-4138-aba1-ca5377ee5544","materi_id":10,"nama":"Tugas Akhir","permalink":"tugas-akhir","urutan":6,"created_by":11253,"updated_by":11253,"created_at":"2021-01-04 08:47:48","updated_at":"2021-01-28 12:43:12","posting":[{"id":637,"uuid":"f2c938ae-5e75-46a9-95a6-9104383f35e7","author_user_id":11253,"materi_section_id":131,"judul":"Tugas Akhir [22]","permalink":"tugas-akhir-22-","konten":"<ol>\r\n<li>Tugas dikumpulkan mulai pada hari Jumat, 12 Maret 2021 pukul 12.00 WIB<\/li>\r\n<li>Buat sebuah file text berisi biodata.<\/li>\r\n<li>Tuliskan identitas peserta (nama, email)<\/li>\r\n<li>Semua file dikompress (.zip atau .rar)<\/li>\r\n<li>File diberi nama sebagai berikut: TA_Namaemail.(rar\/zip)<\/li>\r\n<li>Tugas diupload ke google drive dan link dimasukkan pada dasboard peserta.<\/li>\r\n<\/ol>\r\n<p>&nbsp;<\/p>\r\n<p><a href=\"https:\/\/drive.google.com\/file\/d\/1fNatIP7waHtznGgl6zZOY5E73WrnVE40\/view?usp=sharing\">Tugas Akhir<\/a><\/p>","waktu_publish":"2021-03-10 11:59:00","status_publish":"publish","urutan":3,"created_by":11253,"updated_by":11253,"created_at":"2021-03-10 10:28:22","updated_at":"2021-04-13 23:01:05","waktu_publish_formatted":" Rabu, 10 Maret 2021. 11:59:00 WIB."}]}],"list_kelas":[{"id":10,"uuid":"2ba3c21a-ce5b-4edf-9dd9-9a40b89f1b2a","kategori_kelas_id":15,"versi":"1.0.0","created_by":11253,"updated_by":11253,"created_at":"2020-12-06 13:50:56","updated_at":null}],"is_done":1}