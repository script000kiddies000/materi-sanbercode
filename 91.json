{"response_code":"00","response_msg":"Berhasil mendapatkan materi kelas","materi_kelas":{"id":4,"uuid":"7b02dbd7-9690-4127-8f9c-8d8d8afd216f","kategori_kelas_id":14,"versi":"1.0.0","created_by":11254,"updated_by":11254,"created_at":"2020-12-04 13:18:36","updated_at":null},"section":[{"id":10,"uuid":"d6fde73b-7cf3-445a-9775-22f5601d3615","materi_id":4,"nama":"Pendahuluan","permalink":"pendahuluan","urutan":1,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 13:19:22","updated_at":null,"posting":[{"id":20,"uuid":"aa5585f1-f87a-4c61-bcca-c8c015e1fd32","author_user_id":11254,"materi_section_id":10,"judul":"Persiapan Perangkat","permalink":"persiapan-perangkat","konten":"<div class=\"edit-post-visual-editor editor-styles-wrapper\" tabindex=\"-1\">\r\n<div class=\"block-editor__typewriter\">\r\n<div>\r\n<div class=\"block-editor-writing-flow\">\r\n<div>\r\n<div>\r\n<div>\r\n<div class=\"block-editor-block-list__layout is-root-container\">\r\n<div id=\"block-db6380b2-2985-46d9-a2dd-266a692d2a12\" class=\"block-editor-block-list__block wp-block wp-block\" tabindex=\"0\" role=\"group\" aria-label=\"Blok: Kutip\" data-block=\"db6380b2-2985-46d9-a2dd-266a692d2a12\" data-type=\"core\/quote\" data-title=\"Kutip\">\r\n<blockquote class=\"wp-block-quote\">\r\n<div class=\"rich-text block-editor-rich-text__editable\" role=\"textbox\" aria-multiline=\"true\" aria-label=\"Tulis kutipan...\">\r\n<p>Selamat datang peserta Bootcamp Sanbercode kelas Mobile Apps Development React Native. Sebelum membahas proses membuat aplikasi menggunakan framework React Native, terlebih dahulu kita akan membahas berbagai perangkat yang perlu dipersiapkan.<\/p>\r\n<\/div>\r\n<\/blockquote>\r\n<\/div>\r\n<h2 id=\"block-0542f0db-1b72-4bfe-bca7-483f9082ba75\" class=\"block-editor-block-list__block wp-block rich-text block-editor-rich-text__editable wp-block\" tabindex=\"0\" role=\"textbox\" aria-label=\"Tulis tajuk...\" aria-multiline=\"true\" data-block=\"0542f0db-1b72-4bfe-bca7-483f9082ba75\" data-type=\"core\/heading\" data-title=\"Tajuk\">Perangkat yang diperlukan<\/h2>\r\n<p id=\"block-ce76ed9e-89d0-4d1e-99a3-c742cfd12a21\" class=\"block-editor-block-list__block wp-block rich-text block-editor-rich-text__editable wp-block\" tabindex=\"0\" role=\"textbox\" aria-label=\"Blok paragraf\" aria-multiline=\"true\" data-block=\"ce76ed9e-89d0-4d1e-99a3-c742cfd12a21\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Untuk mengikuti bootcamp React Native ini, diperlukan perangkat utama yaitu <strong>PC\/Laptop<\/strong> yang terhubung dengan <strong>Internet<\/strong>. Spesifikasi PC\/Laptop minimal memiliki <strong>RAM 4GB<\/strong>.<\/p>\r\n<p id=\"block-516b8ede-bdf7-4d55-8855-b1c9fb5f1ad2\" class=\"block-editor-block-list__block wp-block rich-text block-editor-rich-text__editable wp-block\" tabindex=\"0\" role=\"textbox\" aria-label=\"Blok paragraf\" aria-multiline=\"true\" data-block=\"516b8ede-bdf7-4d55-8855-b1c9fb5f1ad2\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Dan untuk mempermudah proses pengembangan aplikasi, diperlukan perangkat <strong>smartphone Android<\/strong> dengan versi OS minimal <strong>5.0 Lollipop<\/strong>. Jika tidak, maka dapat menggunakan emulator Android seperti AVD (Android Virtual Device) yang terdapat pada <a href=\"https:\/\/developer.android.com\/studio\">Android Studio <\/a>(pastikan spesifikasi PC\/Laptop memenuhi system requirement pada Android Studio).<\/p>\r\n<h2 id=\"block-16569231-cac8-48c4-93ca-8691c6e66bc3\" class=\"block-editor-block-list__block wp-block rich-text block-editor-rich-text__editable wp-block\" tabindex=\"0\" role=\"textbox\" aria-label=\"Tulis tajuk...\" aria-multiline=\"true\" data-block=\"16569231-cac8-48c4-93ca-8691c6e66bc3\" data-type=\"core\/heading\" data-title=\"Tajuk\">Perangkat Lunak dan Teknologi yang digunakan<\/h2>\r\n<h3 id=\"block-72415d85-2651-4a81-82f3-a33787456d37\" class=\"block-editor-block-list__block wp-block rich-text block-editor-rich-text__editable wp-block\" tabindex=\"0\" role=\"textbox\" aria-label=\"Tulis tajuk...\" aria-multiline=\"true\" data-block=\"72415d85-2651-4a81-82f3-a33787456d37\" data-type=\"core\/heading\" data-title=\"Tajuk\">1. Terminal atau Console<\/h3>\r\n<p id=\"block-7593ef18-a3a9-4466-8c38-b8eabe2f8c39\" class=\"block-editor-block-list__block wp-block rich-text block-editor-rich-text__editable wp-block\" tabindex=\"0\" role=\"textbox\" aria-label=\"Blok paragraf\" aria-multiline=\"true\" data-block=\"7593ef18-a3a9-4466-8c38-b8eabe2f8c39\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Pada Bootcamp kali ini, diperlukan sebuah terminal untuk mengeksekusi berbagai perintah dasar yang berkaitan dengan Git, Node, dan Expo\/React Native CLI. Kita bisa menggunakan terminal bawaan dari Sistem Operasi yang digunakan seperti Command Prompt\/Windows PowerShell pada OS Windows dan Terminal pada OS Linux maupun OSX. Dan ketika melakukan proses instalasi Git juga terdapat Git Bash yang memiliki fungsi yang serupa. Selain itu, peserta juga bisa menggunakan <a href=\"https:\/\/cmder.net\/\">cmder<\/a> (terutama yang menggunakan OS Windows) karena cmder memiliki banyak fitur yang tidak dimiliki command prompt atau terminal bawaan. Proses instalasi bisa dilakukan menggunakan konfigurasi default\/recommended<\/p>\r\n<h3 id=\"block-b7c4f5b6-f903-48a1-b3a7-5e38defebbf7\" class=\"block-editor-block-list__block wp-block rich-text block-editor-rich-text__editable wp-block\" tabindex=\"0\" role=\"textbox\" aria-label=\"Tulis tajuk...\" aria-multiline=\"true\" data-block=\"b7c4f5b6-f903-48a1-b3a7-5e38defebbf7\" data-type=\"core\/heading\" data-title=\"Tajuk\">2. Git<\/h3>\r\n<p id=\"block-953b9741-847b-462d-88d8-9c0d5c8840a0\" class=\"block-editor-block-list__block wp-block rich-text block-editor-rich-text__editable wp-block\" tabindex=\"0\" role=\"textbox\" aria-label=\"Blok paragraf\" aria-multiline=\"true\" data-block=\"953b9741-847b-462d-88d8-9c0d5c8840a0\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><a href=\"https:\/\/git-scm.com\/\">Git <\/a>merupakan version control yang banyak digunakan oleh para programmer atau software developer. Untuk dapat menggunakannya, download dan install <a href=\"https:\/\/git-scm.com\/\">Git <\/a>sesuai dengan platform OS yang bersangkutan. Dan jalankan perintah instalasi dengan konfigurasi default\/recommended.<\/p>\r\n<h3 id=\"block-2ead6e34-afc6-4cd2-b043-6eec1666b3bd\" class=\"block-editor-block-list__block wp-block rich-text block-editor-rich-text__editable wp-block\" tabindex=\"0\" role=\"textbox\" aria-label=\"Tulis tajuk...\" aria-multiline=\"true\" data-block=\"2ead6e34-afc6-4cd2-b043-6eec1666b3bd\" data-type=\"core\/heading\" data-title=\"Tajuk\">3. Visual Studio Code<\/h3>\r\n<p id=\"block-6f6bb260-ea54-412a-8545-d3c7140cc0b1\" class=\"block-editor-block-list__block wp-block rich-text block-editor-rich-text__editable wp-block\" tabindex=\"0\" role=\"textbox\" aria-label=\"Blok paragraf\" aria-multiline=\"true\" data-block=\"6f6bb260-ea54-412a-8545-d3c7140cc0b1\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><a href=\"https:\/\/code.visualstudio.com\/\">Visual Studio Code<\/a> adalah salah satu IDE (Integrated Development Environment) yang direkomendasikan untuk digunakan selama bootcamp ini. Salah satu kelebihannya adalah kemudahan pengoperasian dan user inteface yang lebih mudah dipahami oleh orang yang awam dalam pemrograman. Selain itu juga terdapat banyak extension atau plugin yang sangat membantu dalam menuliskan kode selama membangun suatu program\/aplikasi. Beberapa extension yang disarankan untuk ditambahkan adalah Prettier - Code formatter, Material Icon Theme, dan ES7 React\/Redux\/React-Native\/JS snippets (opsional).<\/p>\r\n<p id=\"block-2db2c3b0-ed61-4cea-95b3-3a382229ae75\" class=\"block-editor-block-list__block wp-block rich-text block-editor-rich-text__editable wp-block\" tabindex=\"0\" role=\"textbox\" aria-label=\"Blok paragraf\" aria-multiline=\"true\" data-block=\"2db2c3b0-ed61-4cea-95b3-3a382229ae75\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">IDE lainnya yang juga dapat digunakan adalah <a href=\"https:\/\/www.sublimetext.com\/\">Sublime Text<\/a> atau <a href=\"https:\/\/atom.io\/\">Atom<\/a>. Untuk kemudahan proses pembelajaran kami tidak merekomendasikan Notepad atau Notepad++<\/p>\r\n<h3 id=\"block-d3d74835-9478-4ea8-90a4-d7ebd5ec489d\" class=\"block-editor-block-list__block wp-block rich-text block-editor-rich-text__editable wp-block\" tabindex=\"0\" role=\"textbox\" aria-label=\"Tulis tajuk...\" aria-multiline=\"true\" data-block=\"d3d74835-9478-4ea8-90a4-d7ebd5ec489d\" data-type=\"core\/heading\" data-title=\"Tajuk\">4. Postman<\/h3>\r\n<p id=\"block-8b325661-d1f4-4984-99c4-34acc00bbdf0\" class=\"block-editor-block-list__block wp-block rich-text block-editor-rich-text__editable wp-block\" tabindex=\"0\" role=\"textbox\" aria-label=\"Blok paragraf\" aria-multiline=\"true\" data-block=\"8b325661-d1f4-4984-99c4-34acc00bbdf0\" data-type=\"core\/paragraph\" data-title=\"Paragraf\"><a href=\"https:\/\/www.postman.com\/\">Postman<\/a> adalah sebuah aplikasi yang berfungsi sebagai REST Client untuk uji coba REST API. Postman biasa digunakan oleh developer pembuat API sebagai tools untuk menguji API yang telah dibuat.<\/p>\r\n<p id=\"block-43372f92-2d6f-428e-888e-9c9b0c4562ee\" class=\"block-editor-block-list__block wp-block rich-text block-editor-rich-text__editable wp-block\" tabindex=\"0\" role=\"textbox\" aria-label=\"Blok paragraf\" aria-multiline=\"true\" data-block=\"43372f92-2d6f-428e-888e-9c9b0c4562ee\" data-type=\"core\/paragraph\" data-title=\"Paragraf\">Anda bisa download Postman sesuai sistem operasi yang dipakai atau digunakan. Untuk link download postman bisa ditemukan <a href=\"https:\/\/www.postman.com\/\">disini<\/a>.<\/p>\r\n<\/div>\r\n<\/div>\r\n<\/div>\r\n<\/div>\r\n<\/div>\r\n<\/div>\r\n<\/div>\r\n<\/div>","waktu_publish":"2021-01-10 09:30:00","status_publish":"publish","urutan":1,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 13:20:40","updated_at":"2021-01-08 23:25:46","waktu_publish_formatted":" Minggu, 10 Januari 2021. 09:30:00 WIB."},{"id":21,"uuid":"841314e4-c878-4c4f-94ce-aba98c02c433","author_user_id":11254,"materi_section_id":10,"judul":"Teknik Pengumpulan Tugas","permalink":"teknik-pengumpulan-tugas","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Setiap harinya Anda diminta untuk menyelesaikan tugas dan\/atau quiz yang diberikan. Disarankan Anda untuk membuat satu folder khusus dalam local PC\/Laptop untuk menyimpan file-file tugas yang terhubung dengan repository project.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Sejak awal, Anda akan mengerjakan tugas menggunakan React Native CLI. Untuk mengurangi proses pembuatan project baru yang cukup memakan waktu (proses <code>npx react-native init NamaProject<\/code>) maka akan disarankan untuk mengerjakannya di folder project yang sama.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Berikut tahapan atau tata cara mengumpulkan tugas :<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Pada saat Anda akan mulai diminta membuat project baru. Lakukan proses pembuatan project React Native CLI (misal nama projectnya adalah TrainingApp).<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>$ npx react-native init TrainingApp<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Buat repository baru di Gitlab, set visibility level \"<strong>Public<\/strong>\", tetapi<strong> tanpa centang\/non aktifkan<\/strong> \" <strong>Initialize repository with a README<\/strong> \". Seperti gambar dibawah ini<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:image {\"id\":5833,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-5833\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/gitlab-1024x480.jpg\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:image {\"id\":5834,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-5834\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/gitlab_step2-1024x508.jpg\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Masuk ke halaman project Gitlab baru tersebut dan ikuti perintah pada bagian \"<strong>Push an existing folder<\/strong>\". (command yang harus dijalankan seperti berikut ini)<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>$ cd TrainingApp \/\/ masuk ke directory project yang telah dibuat\r\n\r\n$ git init \/\/ inisiasi ulang git\r\n\r\n$ git remote add origin https:\/\/gitlab.com\/zakkymf.sanbercode\/sanbercodeapp.git \/\/ gunakan url repo Gitlab milik anda yang terdapat di halaman  gitlab anda\r\n\r\n$ git add .\r\n\r\n$ git commit -m \"Initial commit\"\r\n\r\n$ git push -u origin master<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Jika proses push berhasil, selanjutnya buat folder Tugas didalam folder project React Native CLI (misal \"Tugas1\") dan selesaikan tugas didalam folder tersebut<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Jika tugas sudah selesai, upload file tugas ke Repository Gitlab (Anda bisa menggunakan perintah dibawah ini)<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\">$ git add .\r\n\r\n$ git commit -m \"Tugas1 sudah selesai\"\r\n\r\n$ git push<\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Jika proses git push sudah berhasil, periksa halaman Gitlab anda dan masuk ke menu \"<strong>Repository<\/strong>\" =&gt; \"<strong>Commits<\/strong>\" (yang terdapat pada sidebar) Kemudian copy link commit tugas Anda<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:image {\"id\":5835,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-5835\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/gitlab_step3-1024x509.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Buka halaman web <a href=\"\/\">sanbercode.com<\/a>, masuk ke \"<strong>member area<\/strong>\" dan lakukan <strong>login<\/strong>. Masuk ke Menu <strong>\"Kelas Training<\/strong>\" =&gt; \"<strong>Kelas yang Diikuti<\/strong>\" dan tekan tombol \"<strong>Akses Kelas<\/strong>\" pada kelas yang telah terdaftar.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Selanjutnya masuk ke tab \"<strong>Kelola Tugas<\/strong>\" =&gt; \"<strong>Pilih nama tugas<\/strong>\" =&gt; tekan \"<strong>Input Tugas<\/strong>\" dan masukan link commit yang telah di copy tadi.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Jika terjadi masalah dalam mengikuti tahapan tersebut silahkan disampaikan pada grup diskusi.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p><strong>Catatan<\/strong> :<\/p>\r\n<p>Jika membuat repository baru (untuk pengerjaan tugas atau quiz atau final project) Jangan lupa untuk menambahkan trainer sebagai \"Members\" dengan role \"Maintainer\".<\/p>\r\n<p>Akun gitlab trainer : <strong>@zakkymf.sanbercode<\/strong><\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --><\/p>","waktu_publish":"2021-01-10 09:30:00","status_publish":"publish","urutan":2,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 13:21:31","updated_at":"2021-01-08 23:25:59","waktu_publish_formatted":" Minggu, 10 Januari 2021. 09:30:00 WIB."}]},{"id":11,"uuid":"6b2647fe-88f7-445e-bc71-4f06d5829930","materi_id":4,"nama":"Pekan 1 - Materi","permalink":"pekan-1-materi","urutan":2,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 13:26:07","updated_at":null,"posting":[{"id":22,"uuid":"e581dc3e-6449-4df2-bb22-a534817e62e6","author_user_id":11254,"materi_section_id":11,"judul":"Hari 1 - React Native CLI","permalink":"hari-1-react-native-cli","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Secara singkat, react native merupakan framework Javascript yang digunakan untuk mengembangkan aplikasi pada <em>smartphone<\/em>. Aplikasi yang dikembangkan dengan react native ini pada dasarnya dapat berjalan di ponsel berbasis Android dan IOS, hanya saja perlu sedikit penyesuaian untuk masing-masing OS nya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Cara kerja dari React Native CLI sendiri adalah mengcompile kode Javascript ke native (iOS &amp; Android) yang selanjutnya dapat di jalankan di Xcode atau Android Studio.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading --><\/p>\r\n<h2>Setup React Native CLI<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk bisa menggunakan React Native CLI ini, diperlukan beberapa tahapan installasi, yang bisa disederhanakan sebagai berikut (jika menggunakan OS Windows):<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Install NodeJS<\/li>\r\n<li>Install JDK 8 (Java Development Kit)<\/li>\r\n<li>Install Android Studio<\/li>\r\n<li>Setting ANDROID_HOME environment variable<\/li>\r\n<li>Menambahkan platform-tools pada environment variable<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Jika semua proses tersebut sudah dilakukan, anda bisa membuat project \/ Aplikasi React Native dengan menjalankan command berikut :<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>$ npx react-native init NamaProject<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>$ cd NamaProject \/\/masuk ke directory project\r\n$ npx react-native run-android \/\/menjalankan aplikasi project di android<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk proses installasi lengkapnya, bisa dilihat di dokumentasi React Native (<a href=\"https:\/\/reactnative.dev\/docs\/environment-setup\">https:\/\/reactnative.dev\/docs\/environment-setup<\/a>), terutama untuk OS Linux dan Mac OS karena memiliki beberapa konfigurasi yang berbeda dari Windows.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p><strong>Catatan:<\/strong><\/p>\r\n<p>Untuk menjalankan aplikasi di iOS , hanya bisa melalui Mac OS<\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk lebih detail mengenai cara install React Native CLI bisa dilihat dalam video berikut ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:core-embed\/youtube {\"url\":\"https:\/\/www.youtube.com\/watch?v=eqJOrRr3hbA\",\"type\":\"video\",\"providerNameSlug\":\"youtube\",\"align\":\"center\",\"className\":\"wp-embed-aspect-16-9 wp-has-aspect-ratio\"} --><\/p>\r\n<figure class=\"wp-block-embed-youtube aligncenter wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\">\r\n<div class=\"wp-block-embed__wrapper\"><iframe src=\"\/\/www.youtube.com\/embed\/eqJOrRr3hbA\" width=\"560\" height=\"314\" allowfullscreen=\"allowfullscreen\"><\/iframe><\/div>\r\n<\/figure>\r\n<p><!-- \/wp:core-embed\/youtube --> <!-- wp:heading --><\/p>\r\n<h2>Perbedaan React Native CLI dan Expo<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Kelebihan Expo<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Expo menggunakan Expo SDK jadi tidak memerlukan Android Studio dan Xcode<\/li>\r\n<li>Pengaturan aplikasi lebih mudah, bisa langsung ditambahkan pada file app.json<\/li>\r\n<li>Mode debug aplikasi dapat langsung di jalankan pada device dengan aplikasi Expo pada Android dan IOS (dengan membagikan link \/ qr code project)<\/li>\r\n<li>Membuat versi rilis aplikasi lebih mudah karena dilakukan oleh server Expo (Expo akan memberikan link untuk mendownload versi rilis aplikasi kita)<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Kekurangan Expo<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Expo tidak mendukung native module sehingga beberapa library yang memerlukan react-native link tidak dapat berjalan pada aplikasi.<\/li>\r\n<li>Expo tidak mendukung background process sehingga fitur seperti tracking tidak dapat berjalan pada aplikasi.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Kelebihan React Native CLI<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Dapat menambahkan modul&nbsp;<em>native&nbsp;<\/em>yang ditulis&nbsp;dalam&nbsp;Java dan Objetive-C<\/li>\r\n<li>Mendukung background process<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:heading {\"level\":4} --><\/p>\r\n<h4>Kekurangan React Native CLI<\/h4>\r\n<p><!-- \/wp:heading --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Membutuhkan Android Studio dan Xcode.<\/li>\r\n<li>Tidak dapat mengembangkan&nbsp;aplikasi untuk iOS tanpa&nbsp;Mac Os.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --><\/p>","waktu_publish":"2021-01-11 09:30:00","status_publish":"publish","urutan":1,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 13:26:42","updated_at":"2021-01-08 23:26:15","waktu_publish_formatted":" Senin, 11 Januari 2021. 09:30:00 WIB."},{"id":23,"uuid":"6dc1b8b8-e05c-477c-a985-385bc1668f8d","author_user_id":11254,"materi_section_id":11,"judul":"Hari 2 - Function Component","permalink":"hari-2-function-component","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p><em>Functional Component <\/em>atau biasa disebut <em>Stateless Component<\/em> adalah component yang didefinisikan menggunakan function yang sangat simpel, tanpa harus belajar class, <code>this<\/code> context, state, dan lain sebagainya. Syaratnya hanya cukup mengerti bagaimana function javascript bekerja.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Lalu, seperti apakah function component itu, kalian bisa lihat contoh code sederhana dibawah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\">import * as React from 'react';\r\nimport { View, Text } from 'react-native';\r\n\r\nfunction Hello() {\r\n    return (\r\n        &lt;View&gt;\r\n            &lt;Text&gt;Hello world&lt;\/Text&gt;\r\n        &lt;\/View&gt;\r\n    )\r\n}\r\n\r\nexport default Hello;<\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk mengenal lebih jauh mengenai Function Component dalam React Native, Anda bisa lihat dalam video dibawah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:core-embed\/youtube {\"url\":\"https:\/\/www.youtube.com\/watch?v=dpwqX73fzQY\",\"type\":\"video\",\"providerNameSlug\":\"youtube\",\"className\":\"wp-embed-aspect-16-9 wp-has-aspect-ratio\"} --><\/p>\r\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\">\r\n<div class=\"wp-block-embed__wrapper\"><iframe src=\"\/\/www.youtube.com\/embed\/dpwqX73fzQY\" width=\"560\" height=\"314\" allowfullscreen=\"allowfullscreen\"><\/iframe><\/div>\r\n<\/figure>\r\n<p><!-- \/wp:core-embed\/youtube --> <!-- wp:paragraph --><\/p>\r\n<p>&nbsp;<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-01-12 09:30:00","status_publish":"publish","urutan":2,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 13:27:08","updated_at":"2021-01-08 23:26:39","waktu_publish_formatted":" Selasa, 12 Januari 2021. 09:30:00 WIB."},{"id":24,"uuid":"2814240b-d3bc-4146-9b52-b3dab25331be","author_user_id":11254,"materi_section_id":11,"judul":"Hari 3 - Hooks","permalink":"hari-3-hooks","konten":"<p><!-- wp:heading --><\/p>\r\n<h2>Apa itu React Hooks?<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>React Hooks diperkenalkan oleh React Team untuk melakukan state management dan side effects di dalam function component. Dengan Hooks kita bisa menggunakan state dan lifecycle methods tanpa harus menulis class di React.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading --><\/p>\r\n<h2>Bagaimana menggunakan React Hooks?<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Oke langsung saja kita lihat bagaimana state di dalam functional component menggunakan State Hook, dan bagaimana perbedaannya dengan menggunakan state di dalam class component.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Sebagai contoh kita akan membuat satu contoh component yang ditulis menggunakan class:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\">import React, { Component } from 'react';\r\nimport { View, Text } from 'react-native';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name: 'Jhon Doe'\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            &lt;View&gt;\r\n                &lt;Text&gt;{this.state.name}&lt;\/Text&gt;\r\n            &lt;\/View&gt;\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;<\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Dengan React Hooks, kita bisa membuat component yang memiliki fungsional yang sama seperti diatas tanpa harus menggunakan class, namun tetap bisa menggunakan state. Kita bisa menulisnya seperti ini:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\">import React, { useState } from \"react\";\r\nimport { View, Text } from \"react-native\";\r\n\r\nconst App = () =&gt; {\r\n    const [name, setName] = useState(\"Jhon Doe\")\r\n    return (\r\n        &lt;View&gt;\r\n            &lt;Text&gt;{name}&lt;\/Text&gt;\r\n        &lt;\/View&gt;\r\n    )\r\n}\r\n\r\nexport default App;<\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk lebih detailnya tentang state dalam function component , bisa dilihat dalam video berikut ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:core-embed\/youtube {\"url\":\"https:\/\/youtu.be\/R2XtyeiQXdA\",\"type\":\"video\",\"providerNameSlug\":\"youtube\",\"className\":\"wp-embed-aspect-16-9 wp-has-aspect-ratio\"} --><\/p>\r\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\">\r\n<div class=\"wp-block-embed__wrapper\"><iframe src=\"\/\/www.youtube.com\/embed\/R2XtyeiQXdA\" width=\"560\" height=\"314\" allowfullscreen=\"allowfullscreen\"><\/iframe><\/div>\r\n<div class=\"wp-block-embed__wrapper\" style=\"text-align: left;\">Seperti pada class component, function component atau Hooks ini juga memiliki lifecycle. Lalu, seperti apa lifecycle dalam Hooks atau function component ini ? simak video berikut ini<\/div>\r\n<\/figure>\r\n<p style=\"text-align: left;\"><!-- \/wp:paragraph --> <!-- wp:core-embed\/youtube {\"url\":\"https:\/\/www.youtube.com\/watch?v=Y6qXMEwp3ng\\u0026t=488s\",\"type\":\"video\",\"providerNameSlug\":\"youtube\",\"className\":\"wp-embed-aspect-16-9 wp-has-aspect-ratio\"} --><\/p>\r\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\">\r\n<div class=\"wp-block-embed__wrapper\" style=\"text-align: left;\"><iframe src=\"\/\/www.youtube.com\/embed\/Y6qXMEwp3ng?t=488s\" width=\"560\" height=\"314\" allowfullscreen=\"allowfullscreen\"><\/iframe><\/div>\r\n<\/figure>\r\n<p><!-- \/wp:core-embed\/youtube --><\/p>","waktu_publish":"2021-01-13 09:30:00","status_publish":"publish","urutan":3,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 13:27:31","updated_at":"2021-01-08 23:26:56","waktu_publish_formatted":" Rabu, 13 Januari 2021. 09:30:00 WIB."},{"id":25,"uuid":"03a86d20-67e0-4311-8025-a5d83d258276","author_user_id":11254,"materi_section_id":11,"judul":"Hari 4 - Context API","permalink":"hari-4-context-api","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Pada dasarnya, <strong>Context API<\/strong> sama seperti Redux yaitu untuk state management dalam react. Namun perbedaanya Context API ini sudah termasuk dalam library react, sedangkan redux merupakan library dari luar. Jadi jika akan menggunakan Redux maka kita harus menginstallnya terlebih dahulu.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Dalam <strong>Context API<\/strong> terdapat sebuah Provider, dan Consumer. Lalu apa itu Provider dan Consumer dalam Context API ?<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li><strong>Provider<\/strong> merupakan tempat dibacanya atau tempat menyimpan state secara global<\/li>\r\n<li><strong>Consumer<\/strong> digunakan untuk memanggil atau menggunakan state global yang sudah kita buat<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:heading --><\/p>\r\n<h2>Bagaimana menggunakan Context API dalam React Native ?<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Yang pertama adalah, kita harus mengimportnya terlebih dahulu, bagaimana caranya ?<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import React, { createContext } from 'react';<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Jika sudah mengimport, selanjutnya adalah kita mendifinisikan atau membuat suatu Provider, contohnya bisa dilihat dibawah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>export const RootContext = createContext();\r\nconst Provider = RootContext.Provider;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk lebih detail mengenai pembahasan Context API bisa dilihat dalam video berikut ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:core-embed\/youtube {\"url\":\"https:\/\/youtu.be\/R9D1fDYQCsQ\",\"type\":\"video\",\"providerNameSlug\":\"youtube\",\"className\":\"wp-embed-aspect-16-9 wp-has-aspect-ratio\"} --><\/p>\r\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\">\r\n<div class=\"wp-block-embed__wrapper\"><iframe src=\"\/\/www.youtube.com\/embed\/R9D1fDYQCsQ\" width=\"560\" height=\"314\" allowfullscreen=\"allowfullscreen\"><\/iframe><\/div>\r\n<\/figure>\r\n<p><!-- \/wp:core-embed\/youtube --><\/p>","waktu_publish":"2021-01-14 09:30:00","status_publish":"publish","urutan":4,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 13:27:52","updated_at":"2021-01-08 23:27:17","waktu_publish_formatted":" Kamis, 14 Januari 2021. 09:30:00 WIB."},{"id":26,"uuid":"781c5441-3570-40c9-93e1-7043761f4265","author_user_id":11254,"materi_section_id":11,"judul":"Hari 5 - React Native Pattern","permalink":"hari-5-react-native-pattern","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Javascript di kenal dengan bahasa yang fleksibel, tidak seperti bahasa pemrograman lain, javascript tidak mempunyai aturan baku yang harus di patuhi oleh penulis kode. Seperti tidak mengenal naming convension dan tidak mempunyai aturan baku tentang penamaan juga tata letak struktur file dan folder dan hal ini lebih sempit pada framework react.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Akan tetapi ada beberapa saran atau cara yang sering di pakai sebagai referensi bagaimana membuat project dengan struktur file dan folder yang baik seperti, menggunakan teknik atomic, pengelompokan berdasarkan fitur atau module, pengelompokan berdasarkan tipe file, dan masih banyak lagi.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":5539,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-5539\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/default-react-native-pattern.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Ini adalah struktur default ketika kita pertama kali membuat project react native menggunakan command <code>npx react-native init NamaProject<\/code>.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Kali ini saya akan membagikan bagaimana struktur file dan folder yang biasa saya gunakan pada project react native.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p><strong>Catatan :<\/strong><\/p>\r\n<p><strong>Ini tidak untuk dijadikan patokan, tetapi gunakan sebagai referensi bagi teman-teman, supaya project menjadi lebih rapih dan terstruktur.<\/strong><\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:image {\"id\":5542,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-5542\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/react-native-pattern-1.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>\/src<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Disinilah tempat kita menuliskan dan menyimpan kode yang kita buat. Selanjutnya saya akan membahas semua struktur yang ada di dalam folder ini.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>\/src\/actions<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Digunakan untuk menyimpan action pemanggilan reducer yang di panggil melalui component dalam implementasi redux.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>\/src\/api<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Biasanya didalam folder ini saya gunakan untuk menyimpan konfigurasi API (Application Program Interface)<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>\/src\/assets<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Tempat menyimpan file static. Didalam folder ini saya biasanya membuat pengelompokan lagi<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li><strong>\/src\/assets\/fonts<\/strong> didalamnya berisi kumpulan fonts yang nantinya dipakai dalam Aplikasi<\/li>\r\n<li><strong>\/src\/assets\/icons<\/strong> didalamnya terdapat kumpulan icons<\/li>\r\n<li><strong>\/src\/assets\/images<\/strong> didalamnya terdapat kumpulan gambar<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>\/src\/components<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Berisi component reusable yang di gunakan di banyak tempat.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>\/src\/navigation<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Berisi semua navigasi dalam Aplikasi<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>\/src\/reducers<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Tempat menyimpan global state pada redux.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>\/src\/screens<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Berisi sekumpulan screens yang tampil dalam Aplikasi, Biasanya saya lakukan pengelompokan lagi seperti gambar diatas.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>\/src\/style<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Didalam folder ini tempat menyimpan file yang berkaitan dengan base styling.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>store.js<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Entry point dari implementasi redux.<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-01-15 09:30:00","status_publish":"publish","urutan":5,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 13:28:26","updated_at":"2021-01-08 23:27:37","waktu_publish_formatted":" Jumat, 15 Januari 2021. 09:30:00 WIB."}]},{"id":12,"uuid":"1c9ac067-c75c-4647-bc7b-8d245b620639","materi_id":4,"nama":"Pekan 1 - Tugas","permalink":"pekan-1-tugas","urutan":3,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 13:28:43","updated_at":null,"posting":[{"id":27,"uuid":"e4b08f7e-02c4-4bbc-af03-1be6fd7ac7e4","author_user_id":11254,"materi_section_id":12,"judul":"Hari 1 - React Native CLI","permalink":"hari-1-react-native-cli","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Setelah berhasil menginstall React Native CLI, Pada tugas kali ini, Anda diminta membuat sebuah project baru menggunakan React Native CLI dengan nama <strong>NamaAndaTrainingApp<\/strong>. Gunakan perintah berikut ini untuk membuat sebuah project menggunakan React Native CLI :<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>$ npx react-native init ZakkyTrainingApp<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p><strong>Catatan:<\/strong><\/p>\r\n<p>Ganti <strong>Zakky<\/strong> sesuai Nama Anda atau Nama panggilan Anda<\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah berhasil membuat project, buatlah folder baru dengan nama <strong>Tugas1<\/strong>. Kemudian buat 1 file baru didalam folder tersebut dengan nama <strong>Tugas1.js<\/strong>.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Kemudian buatlah tampilan seperti gambar dibawah ini didalam file <strong>Tugas1.js<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":5517,\"width\":349,\"height\":746,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large is-resized\"><img class=\"wp-image-5517\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Tugas1.png\" alt=\"\" width=\"349\" height=\"746\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Jika sudah selesai, silahkan buat repository di gitlab dan push ke repository (<code>git add<\/code>, <code>git commit<\/code>, dan <code>git push<\/code>). Jangan lupa submit link commit Anda ke sanbercode.com.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Tambahkan akun trainer sebagai member pada repository project yang baru dibuat melalui menu \"<strong>Member<\/strong>\" yang terdapat di sidebar dengan role permission sebagai \"<strong>Maintainer<\/strong>\" (Bertujuan untuk mempermudah dalam memberikan feedback jika diperlukan).<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Akun gitlab trainer: <strong>@zakkymf.sanbercode <\/strong><\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-01-11 09:30:00","status_publish":"publish","urutan":1,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 13:29:02","updated_at":"2021-01-08 23:28:17","waktu_publish_formatted":" Senin, 11 Januari 2021. 09:30:00 WIB."},{"id":28,"uuid":"719f3d61-ba98-454d-886d-1b86f81c84d8","author_user_id":11254,"materi_section_id":12,"judul":"Hari 2 - Function Component","permalink":"hari-2-function-component","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Pada tugas kali ini, buatlah folder baru dalam project yang telah dibuat kemarin dengan nama <strong>Tugas2<\/strong> yang didalamnya terdapat file dengan nama <strong>index.js<\/strong>. Lalu dalam file <strong>index.js<\/strong> buatlah tampilan seperti berikut ini dengan menggunakan <strong>Function Component<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":12469,\"width\":360,\"height\":740,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large is-resized\"><img class=\"wp-image-12469\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/Screenshot_1603953103-498x1024.png\" alt=\"\" width=\"302\" height=\"621\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p><strong>Catatan :<\/strong><\/p>\r\n<p>Untuk warna dan icon bebas sesuai keinginan Anda. Jika ingin menggunakan icon bukan gambar, Anda bisa gunakan module react native vector icons. Untuk dokumentasi react native vector icons bisa dilihat <a href=\"https:\/\/github.com\/oblador\/react-native-vector-icons\">disini<\/a>.<\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p><strong>Catatan :<\/strong><\/p>\r\n<p>Ganti <strong>Nama<\/strong> dan <strong>Foto <\/strong>sesuai data diri Anda masing-masing.<\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:paragraph --><\/p>\r\n<p>Jika sudah selesai, silahkan lakukan push ke repository (<code>git add<\/code>, <code>git commit<\/code>, dan <code>git push<\/code>). Jangan lupa submit link commit Anda ke sanbercode.com.<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-01-12 09:30:00","status_publish":"publish","urutan":2,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 13:29:27","updated_at":"2021-01-08 23:28:32","waktu_publish_formatted":" Selasa, 12 Januari 2021. 09:30:00 WIB."},{"id":29,"uuid":"213f8a9e-8d42-4d8b-b20c-7c5b1713b74e","author_user_id":11254,"materi_section_id":12,"judul":"Hari 3 - Hooks","permalink":"hari-3-hooks","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Jika sebelumnya anda mengikuti kelas dasar React Native di Sanbercode, tentu pernah membuat TodoList. Namun jika sebelumnya membuat TodoList menggunakan Class Component, maka untuk tugas kali ini adalah Membuat TodoList menggunakan Function Component (Hooks).<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading --><\/p>\r\n<h2>Tugas Hooks<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:list {\"ordered\":true} --><\/p>\r\n<ol>\r\n<li>Buatlah Folder baru dengan Nama <strong>Tugas3<\/strong><\/li>\r\n<li>Didalam folder <strong>Tugas3<\/strong> tambahkan atau buat file baru dengan nama <strong>TodoList.js<\/strong><\/li>\r\n<li>Buatlah tampilan dan 2 fungsi di dalam <strong>TodoList.js<\/strong> yang bertujuan untuk menambah dan menghapus data dari <strong>TextInput<\/strong>, sehingga output dari tugas keseluruhan seperti gambar dibawah ini<\/li>\r\n<\/ol>\r\n<p><!-- \/wp:list --> <!-- wp:image {\"align\":\"center\",\"id\":5524,\"width\":328,\"height\":703,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large is-resized\"><img class=\"wp-image-5524\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Tugas3.png\" alt=\"\" width=\"298\" height=\"639\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Jika sudah selesai, lakukan push ke repository (<code>git add<\/code>, <code>git commit<\/code>, dan <code>git push<\/code>). Jangan lupa submit link commit Anda ke sanbercode.com.<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-01-13 09:30:00","status_publish":"publish","urutan":3,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 13:29:52","updated_at":"2021-01-08 23:29:43","waktu_publish_formatted":" Rabu, 13 Januari 2021. 09:30:00 WIB."},{"id":30,"uuid":"2deac74a-c574-46a1-a755-c8634739f32a","author_user_id":11254,"materi_section_id":12,"judul":"Hari 4 - Context API","permalink":"hari-4-context-api","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Jika pada tugas sebelumnya kalian sudah membuat TodoList menggunakan Function Component dan Hooks, maka untuk kali ini tugasnya adalah membuat TodoList App menggunakan Function Component dan <strong>Context API<\/strong>.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading --><\/p>\r\n<h2>Aturan pengerjaan Tugas<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Buat sebuah folder baru dengan nama <strong>Tugas4<\/strong><\/li>\r\n<li>Didalam folder <strong>Tugas4<\/strong>, buat 2 file baru dengan nama <strong>index.js<\/strong> dan <strong>TodoList.js<\/strong><\/li>\r\n<li><strong>index.js<\/strong> digunakan sebagai <strong>Provider<\/strong> sedangkan <strong>TodoList.js<\/strong> digunakan sebagai <strong>Consumer<\/strong><\/li>\r\n<li>Buat fungsi untuk menambahkan data dan menghapus data<\/li>\r\n<li>Tampilkan hasil data inputan kedalam sebuah <strong>FlatList<\/strong><\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk outputnya masih sama seperti sebelumnya, hanya saja disini menggunakan Context API untuk State Managementnya<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":5549,\"width\":326,\"height\":698,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large is-resized\"><img class=\"wp-image-5549\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Tugas3-1.png\" alt=\"\" width=\"311\" height=\"666\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Jika sudah selesai, lakukan push ke repository (<code>git add<\/code>, <code>git commit<\/code>, dan <code>git push<\/code>). Jangan lupa submit link commit Anda ke sanbercode.com.<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-01-14 09:30:00","status_publish":"publish","urutan":4,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 13:30:14","updated_at":"2021-01-08 23:30:59","waktu_publish_formatted":" Kamis, 14 Januari 2021. 09:30:00 WIB."},{"id":31,"uuid":"e1fdef1a-af0b-4498-8a33-56eae4403eb5","author_user_id":11254,"materi_section_id":12,"judul":"Hari 5 - React Native Pattern","permalink":"hari-5-react-native-pattern","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Setelah kalian memahami tentang React Native Pattern dari Materi yang sudah diberikan. Maka tugas kali ini, Anda akan diminta membuat struktur project pada project anda supaya lebih mudah dibaca, rapih dan lebih terstruktur.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Contohnya, mengelompokan Folder Tugas yang sudah pernah dikerjakan kedalam sebuah folder yang bernama screens, kemudian jika ada gambar dalam folder tugas, gambar tersebut dipindahkan kedalam folder assets\/images.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk struktur projectnya silahkan kelompokan seperti pada Materi yang sudah diberikan.<\/p>\r\n<p><strong>Catatan :<\/strong><\/p>\r\n<p><strong>Pastikan ditest terlebih dahulu sebelum dikumpulkan<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Jika sudah selesai, lakukan push ke repository (<code>git add<\/code>, <code>git commit<\/code>, dan <code>git push<\/code>). Jangan lupa submit link commit Anda ke sanbercode.com.<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-01-15 09:30:00","status_publish":"publish","urutan":5,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 13:30:34","updated_at":"2021-01-08 23:31:12","waktu_publish_formatted":" Jumat, 15 Januari 2021. 09:30:00 WIB."}]},{"id":13,"uuid":"9bbad601-7aa4-4653-9391-54f1182be9d7","materi_id":4,"nama":"Pekan 2 - Materi","permalink":"pekan-2-materi","urutan":4,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 13:52:35","updated_at":null,"posting":[{"id":33,"uuid":"d4e192eb-4d3f-4204-ac47-51f1e82de522","author_user_id":11254,"materi_section_id":13,"judul":"Hari 1 - Splashscreen dan onBoarding","permalink":"hari-1-splashscreen-dan-onboarding","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Pada materi kali ini, kita akan belajar tentang membuat Splashscreen dan Onboarding dalam aplikasi React Native. Apa itu Splashscreen dan Onboarding ? Splashscreen dan onBording adalah suatu tampilan yang ditampilkan pada saat aplikasi dibuka pada pertama kali.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Bagaimana membuat Splashscreen dan Onboarding dalam React Native ?<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Yang pertama adalah kita perlu menambahkan beberapa module atau libray, Install beberapa module atau library berikut ini :<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>1. React Navigation<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>npm install @react-navigation\/native<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>npm install react-native-reanimated react-native-gesture-handler react-native-screens react-native-safe-area-context @react-native-community\/masked-view<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>npm install @react-navigation\/stack<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p>Untuk lebih detailnya mengenai React Navigation kalian bisa lihat <a href=\"https:\/\/reactnavigation.org\/docs\/stack-navigator\/\">disini<\/a><\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:paragraph --><\/p>\r\n<p>2. React Native App Intro Slider<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>yarn add react-native-app-intro-slider \/\/ atau npm install react-native-app-intro-slider --save<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p>Untuk dokumentasi lebih lanjut mengenai React Native App Intro Slider bisa dilihat <a href=\"https:\/\/github.com\/Jacse\/react-native-app-intro-slider\">disini<\/a><\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:paragraph --><\/p>\r\n<p>3. React Native Vector Icons<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>npm install --save react-native-vector-icons<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p>Untuk dokumentasi lebih lanjut mengenai React Native Vector Icons bisa dilihat <a href=\"https:\/\/github.com\/oblador\/react-native-vector-icons\">disini<\/a> dan untuk kumpulan icons nya bisa dilihat dalam <a href=\"https:\/\/oblador.github.io\/react-native-vector-icons\/\">kumpulan icons<\/a><\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah menambahkan library diatas, selanjutnya kita akan membuat sebuah component menggunakan function component, yang nantinya akan dijadikan sebagai Splashscreen dalam aplikasi kita. Disini saya membuat sebuah file yang bernama <strong>Splashscreen.js<\/strong>.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import React, { useState, useEffect, useRef } from 'react'\r\nimport { View, Text, StyleSheet, StatusBar, Animated, Dimensions, SafeAreaView } from 'react-native'\r\nimport styles from '.\/style'\r\nimport colors from '..\/..\/style\/colors'\r\n\r\nconst height = Dimensions.get('window').height\r\n\r\nconst Splashscreens = () =&gt; {\r\n\r\n    const fadeOut = useRef(new Animated.Value(1)).current\r\n    const fadeIn = useRef(new Animated.Value(0)).current\r\n\r\n    useEffect(() =&gt; {\r\n        Animated.timing(fadeOut, {\r\n            toValue: 0,\r\n            duration: 3000,\r\n            useNativeDriver: false\r\n        }).start()\r\n        Animated.timing(fadeIn, {\r\n            toValue: 1,\r\n            duration: 3000,\r\n            useNativeDriver: false\r\n        }).start()\r\n    }, [fadeOut, fadeIn])\r\n\r\n    const transformY = fadeIn.interpolate({\r\n        inputRange: [0, 1],\r\n        outputRange: [height, -height \/ 2]\r\n    })\r\n\r\n    return (\r\n        &lt;SafeAreaView style={styles.container}&gt;\r\n            &lt;View style={styles.container}&gt;\r\n                &lt;StatusBar backgroundColor={colors.blue} barStyle=\"dark-content\" \/&gt;\r\n                &lt;Animated.View style={[styles.quotesContainer, { opacity: fadeOut }]}&gt;\r\n                    &lt;Text style={styles.quotes}&gt;\"Quote Example\"&lt;\/Text&gt;\r\n                &lt;\/Animated.View&gt;\r\n                &lt;Animated.View style={[styles.logo, { opacity: fadeIn, transform: [{ translateY: transformY }] }]}&gt;\r\n                    &lt;Text style={styles.textLogo}&gt;CrowdFunding&lt;\/Text&gt;\r\n                &lt;\/Animated.View&gt;\r\n            &lt;\/View&gt;\r\n        &lt;\/SafeAreaView&gt;\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: colors.blue\r\n    },\r\n    quotesContainer: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    quotes: {\r\n        fontSize: 14,\r\n        color: colors.white\r\n    },\r\n    logo: {\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end'\r\n    },\r\n    textLogo: {\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        color: colors.white\r\n    }\r\n})\r\n\r\nexport default Splashscreens\r\n<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Selanjutnya , kita membuat sebuah file baru lagi yang bernama <strong>Intro.js<\/strong>, yang nantinya file tersebut kita gunakan sebagai onboarding atau intro dalam aplikasi kita, berikut code dari <strong>Intro.js<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import React from 'react'\r\nimport { View, Text, Image, StatusBar, SafeAreaView } from 'react-native'\r\nimport styles from '.\/style'\r\nimport colors from '..\/..\/style\/colors'\r\nimport { Button } from '..\/..\/components\/Button'\r\n\/\/import module  react native app intro slider\r\nimport AppIntroSlider from 'react-native-app-intro-slider'\r\n\r\n\/\/ data yang akan kita tampilkan sebagai onboarding aplikasi\r\nconst data = [\r\n    {\r\n        id: 1,\r\n        image: require('..\/..\/assets\/images\/Online-Education-1.png'),\r\n        description: 'Description Text 1'\r\n    },\r\n    {\r\n        id: 2,\r\n        image: require('..\/..\/assets\/images\/Online-Education-2.png'),\r\n        description: 'Description Text 2'\r\n    },\r\n    {\r\n        id: 3,\r\n        image: require('..\/..\/assets\/images\/Online-Education-3.png'),\r\n        description: 'Description Text 3'\r\n    }\r\n]\r\n\r\nconst Intro = ({ navigation }) =&gt; {\r\n\r\n    \/\/tampilan onboarding yang ditampilkan dalam renderItem\r\n    const renderItem = ({ item }) =&gt; {\r\n        return (\r\n            &lt;View style={styles.listContainer}&gt;\r\n                &lt;View style={styles.listContent}&gt;\r\n                    &lt;Image source={item.image} style={styles.imgList} resizeMethod=\"auto\" resizeMode=\"contain\" \/&gt;\r\n                &lt;\/View&gt;\r\n                &lt;Text style={styles.textList}&gt;{item.description}&lt;\/Text&gt;\r\n            &lt;\/View&gt;\r\n        )\r\n    }\r\n\r\n    return (\r\n        &lt;SafeAreaView style={styles.container}&gt;\r\n            &lt;View style={styles.container}&gt;\r\n                &lt;StatusBar backgroundColor={colors.blue} barStyle=\"light-content\" \/&gt;\r\n                &lt;View style={styles.textLogoContainer}&gt;\r\n                    &lt;Text style={styles.textLogo}&gt;CrowdFunding&lt;\/Text&gt;\r\n                &lt;\/View&gt;\r\n                &lt;View style={styles.slider}&gt;\r\n                    {\/* contoh menggunakan component react native app intro slider *\/}\r\n                    &lt;AppIntroSlider\r\n                        data={data} \/\/masukan data yang akan ditampilkan menjadi onBoarding, dia bernilai array\r\n                        renderItem={renderItem} \/\/ untuk menampilkan onBoarding dar data array\r\n                        renderNextButton={() =&gt; null}\r\n                        renderDoneButton={() =&gt; null}\r\n                        activeDotStyle={styles.activeDotStyle}\r\n                        keyExtractor={(item) =&gt; item.id.toString()}\r\n                    \/&gt;\r\n                &lt;\/View&gt;\r\n                &lt;View style={styles.btnContainer}&gt;\r\n                    &lt;Button style={styles.btnLogin} onPress={() =&gt; navigation.navigate('Login')}&gt;\r\n                        &lt;Text style={styles.btnTextLogin}&gt;MASUK&lt;\/Text&gt;\r\n                    &lt;\/Button&gt;\r\n                    &lt;Button style={styles.btnRegister} onPress={() =&gt; navigation.navigate('Register')}&gt;\r\n                        &lt;Text style={styles.btnTextRegister}&gt;DAFTAR&lt;\/Text&gt;\r\n                    &lt;\/Button&gt;\r\n                &lt;\/View&gt;\r\n            &lt;\/View&gt;\r\n        &lt;\/SafeAreaView&gt;\r\n    )\r\n}\r\n\r\nexport default Intro\r\n\r\n<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah membuat component-component tersebut, selanjutnya kita membuat sebuah navigasi, disini saya membuat file dengan nama <strong>routes.js<\/strong>. Berikut adalah code dari <strong>routes.js<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import React, { useState, useEffect } from 'react';\r\nimport { NavigationContainer } from '@react-navigation\/native';\r\nimport { createStackNavigator } from '@react-navigation\/stack';\r\nimport Intro from '..\/screens\/Intro';\r\nimport SplashScreens from '..\/screens\/SplashScreens';\r\n\r\nconst Stack = createStackNavigator()\r\n\r\nconst MainNavigation = () =&gt; (\r\n    &lt;Stack.Navigator&gt;\r\n        &lt;Stack.Screen name=\"Intro\" component={Intro} options={{ headerShown: false }} \/&gt;\r\n    &lt;\/Stack.Navigator&gt;\r\n)\r\n\r\nconst AppNavigation = () =&gt; {\r\n\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    useEffect(() =&gt; {\r\n        setTimeout(() =&gt; {\r\n            setIsLoading(!isLoading)\r\n        }, 3000)\r\n\r\n    },[])\r\n\r\n    if(isLoading) {\r\n        return &lt;SplashScreens \/&gt;\r\n    }\r\n\r\n    return (\r\n        &lt;NavigationContainer&gt;\r\n            &lt;MainNavigation \/&gt;\r\n        &lt;\/NavigationContainer&gt;\r\n    )\r\n}\r\n\r\nexport default AppNavigation\r\n<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah semua component dibuat, kalian bisa lihat outputnya <a href=\"https:\/\/drive.google.com\/file\/d\/1zVLvrFh86IVhqkqMWdLR-adc4SnZCSxN\/view?usp=sharing\">disini<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p><strong>Catatan<\/strong> :<\/p>\r\n<p>Untuk style sengaja tidak ditambahkan. Coba dibuat sama masing-masing<\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --><\/p>","waktu_publish":"2021-01-18 09:30:00","status_publish":"publish","urutan":1,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 13:54:16","updated_at":"2021-01-08 23:31:47","waktu_publish_formatted":" Senin, 18 Januari 2021. 09:30:00 WIB."},{"id":35,"uuid":"6c317fe5-8061-40d5-97b2-d7fa39615960","author_user_id":11254,"materi_section_id":13,"judul":"Hari 2 - Authentication (JWT)","permalink":"hari-2-authentication-jwt-","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p><strong><em>Json Web Token <\/em><\/strong>adalah cara untuk mengautentikasi <strong>REST API<\/strong>, sehingga hanya orang yang memiliki token saja yang boleh menggunakannya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Kapan kita menggunakan JWT ?<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>JWT pada umumnya digunakan untuk :<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><strong>1. Autentikasi<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Ketika user\/client melakukan autentikasi dan mendapatkan token, maka untuk seterusnya setiap request harus menyertakan token tersebut.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p><strong>2. Pertukaran Informasi<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Dengan token yang sudah di-<em>sign<\/em> misal dengan algoritma RSA, kita dapat mengetahui dan yakin siapa yang melakukan request tersebut. Terlebih dengan isi pada bagian Signature merupakan gabungan dari isi Header dan Payload, jadi jika isi Header\/Payload dirubah maka isi Signature menjadi tidak valid.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading {\"level\":3} --><\/p>\r\n<h3>Bagaimana cara kerja JWT ?<\/h3>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Umumnya ketika user berhasil melakukan login, maka server akan mengembalikan token JWT dan akan disimpan pada Local Storage \/ Cookies Browser. Selanjutnya untuk setiap request yang akan mengakses API yang terproteksi harus menyertakan token tersebut.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Umumnya token tersebut akan disertakan pada <strong>Authorization<\/strong> Header dengan <strong>Bearer<\/strong> schema, contohnya seperti ini :<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>Authorization: Bearer &lt;token&gt;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk mengikuti materi ini, Anda harus menginstall module atau library Axios. Anda bisa gunakan perintah ini untuk installasinya<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>npm install axios<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Dokumentasi Axios bisa dilihat pada halaman berikut ini : <a href=\"https:\/\/github.com\/axios\/axios\" target=\"_blank\" rel=\"noreferrer noopener\">https:\/\/github.com\/axios\/axios<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk contoh autentikasi menggunakan JWT dalam React Native simak dalam video berikut ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:core-embed\/youtube {\"url\":\"https:\/\/youtu.be\/TVl1yrEKYIM\",\"type\":\"video\",\"providerNameSlug\":\"youtube\",\"className\":\"wp-embed-aspect-16-9 wp-has-aspect-ratio\"} --><\/p>\r\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\">\r\n<div class=\"wp-block-embed__wrapper\"><iframe src=\"\/\/www.youtube.com\/embed\/TVl1yrEKYIM\" width=\"560\" height=\"314\" allowfullscreen=\"allowfullscreen\"><\/iframe><\/div>\r\n<\/figure>\r\n<p><!-- \/wp:core-embed\/youtube --> <!-- wp:paragraph --><\/p>\r\n<p>Sumber: (<a href=\"http:\/\/blog.nostratech.com\/2016\/06\/jwt-json-web-token.html\">http:\/\/blog.nostratech.com\/2016\/06\/jwt-json-web-token.html<\/a>)<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-01-19 09:30:00","status_publish":"publish","urutan":2,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 13:54:46","updated_at":"2021-01-08 23:32:01","waktu_publish_formatted":" Selasa, 19 Januari 2021. 09:30:00 WIB."},{"id":36,"uuid":"53c3a8bd-060e-4b44-9299-136f5e66e8ec","author_user_id":11254,"materi_section_id":13,"judul":"Hari 3 - Authentication (Google)","permalink":"hari-3-authentication-google-","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Pada materi ini , kita akan membahas Authentication Google menggunakan firebase.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Firebase adalah suatu layanan dari Google yang digunakan untuk mempermudah para pengembang aplikasi dalam mengembangkan aplikasi. Dengan adanya Firebase, pengembang aplikasi bisa fokus mengembangkan aplikasi tanpa harus memberikan usaha yang besar.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading --><\/p>\r\n<h2>Bagaimana membuat Autentikasi menggunakan Google di React Native ?<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Yang pertama adalah kita harus menambahkan beberapa library , diantaranya adalah<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li><strong>Firebase<\/strong><\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Gunakan perintah ini untuk menginstall firebase<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>npm install --save @react-native-firebase\/app<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Kemudian tambahkan library lagi untuk Authentication menggunakan Firebase, gunakan perintah dibawah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>npm install --save @react-native-firebase\/auth<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah menginstall library firebase, selanjutnya kita harus membuat project terlebih dahulu dalam firebase console, pertama kunjungi link berikut ini (<a href=\"https:\/\/firebase.google.com\/\">https:\/\/firebase.google.com\/<\/a>), sehingga terlihat tampilan seperti berikut ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":5652,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-5652\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-1-1-1024x508.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Selanjutnya klik \"<strong>Buka Konsol<\/strong>\", seperti pada gambar diatas yang diberi tanda <code>merah<\/code>, setelah itu kalian akan dialihkan kehalaman seperti dibawah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":5653,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-5653\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-2-1024x505.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Kemudian, buat project dengan cara pilih \"<strong>Tambahkan project<\/strong>\" seperti gambar diatas, tahap selanjutnya kalian akan melihat tampilan seperti ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":5654,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-5654\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-1-2-1024x576.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Lalu isi nama projectnya, disini saya membuat project dengan nama <strong>Sanbercode<\/strong>, jika sudah kemudian klik <strong>Lanjutkan<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":5655,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-5655\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Screenshot-3-1024x576.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Jika kalian menemukan halaman seperti gambar diatas, maka langsung aja klik <strong>Lanjutkan<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":5656,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-5656\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Screenshot-4-1024x576.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Selanjutnya pilih \"<strong>Default Account for Firebase<\/strong>\" seperti pada gambar diatas. Jika sudah Klik \"<strong>Buat Project<\/strong>\". Kemudian tunggu hingga proses pembuatan project selesai.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":5657,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-5657\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-3-1024x576.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Jika pembuatan project sudah selesai, maka akan terlihat tampilan seperti diatas, kemudian klik tombol yang ditandai seperti gambar diatas, jika sudah maka akan terlihat tampilan seperti berikut ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":5658,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-5658\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Screenshot-7-1024x576.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Kemudian isi nama aplikasinya, jika sudah Klik \"<strong>Daftarkan Aplikasi<\/strong>\"<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":5659,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-5659\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Screenshot-8-1024x576.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah mendaftarkan aplikasi , kemudian copy <strong>firebaseConfig<\/strong> dan tambahkan ke dalam file <strong>App.js<\/strong> dalam root directory project, sehingga menjadi seperti ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import React, { useEffect } from 'react';\r\nimport AppNavigation from '.\/src\/routes';\r\nimport firebase from '@react-native-firebase\/app'; &lt;-- import library firebase\r\n\r\n\/\/ganti isi dari firebaseConfig, sesuai dengan project yang anda buat di firebase\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyC8gMiT-scdQneRlQ0wB9mZ-uIPr986L_s\",\r\n  authDomain: \"sanbercode-bc309.firebaseapp.com\",\r\n  databaseURL: \"https:\/\/sanbercode-bc309.firebaseio.com\",\r\n  projectId: \"sanbercode-bc309\",\r\n  storageBucket: \"sanbercode-bc309.appspot.com\",\r\n  messagingSenderId: \"1040733219420\",\r\n  appId: \"1:1040733219420:web:db3540f743aa6290bf5499\",\r\n  measurementId: \"G-NPF8QFPPT0\"\r\n};\r\n\/\/ Inisialisasi firebase\r\nif(!firebase.apps.length) {\r\n  firebase.initializeApp(firebaseConfig)\r\n}\r\n\r\nconst App: () =&gt; React$Node = () =&gt; {\r\n\r\n  return (\r\n    &lt;AppNavigation \/&gt;\r\n  );\r\n};\r\n\r\nexport default App;\r\n<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Kemudian, Klik \"<strong>Lanjutkan ke console<\/strong>\", maka akan dialihkan menuju halaman utama project kita seperti gambar berikut ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":5660,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-5660\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-4-1024x576.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Selanjutnya, Klik \"<strong>Tambahkan aplikasi<\/strong>\", lalu pilih icon <strong>Android<\/strong>, kemudian akan dialihkan ke halaman berikut ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":5661,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-5661\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-5-1024x506.jpg\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Isi <strong>nama paket Android<\/strong>, sesuai project kalian, nama paket Android ini bisa didapatkan dari file <strong>AndroidManifest.xml<\/strong> pada line ke-2. Selanjutnya isi <strong>Nama Aplikasinya<\/strong>, sesuaikan dengan nama Aplikasi kalian. Jika sudah, klik <strong>Berikutnya<\/strong>.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":5662,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-5662\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-6-1024x506.jpg\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Kemudian klik <strong>\"Download google-services.json\"<\/strong>. Jika sesudah didownload, pindahkan <strong>google-service.json<\/strong> kedalam <strong>android\/app<\/strong> project kita. Kemudian Klik <strong>Berikutnya<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Selanjutnya tambahkan Firebase SDK kedalam project kita, untuk detailnya kalian bisa lihat di dalam tahap 3 firebase. Jika sudah, Klik <strong>Berikutnya<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":5663,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-5663\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-7-1024x502.jpg\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Coba lakukan Build Aplikasi, namun terlebih dahulu kita hapus Aplikasi yang sudah terinstall. Jika dalam proses ini lama, kalian bisa klik <strong>Lewati langkah ini<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":5664,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-5664\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/Screenshot-10-1024x576.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Kemudian, Klik \"<strong>Authentication<\/strong>\" pada sidebar, lalu masuk pada<strong> Sign-in method<\/strong>, pilih <strong>Google<\/strong> kemudian <strong>Aktifkan<\/strong>.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":5665,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-5665\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-8-1024x506.jpg\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Jika sudah mengaktifkan google dalam Menu \"Authentication\", selanjutnya pilih project Android kita seperti pada gambar diatas, kemudian Klik Icon <strong>Settings<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":5666,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-5666\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-9-1024x507.jpg\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Didalam halaman Settings, scroll kebawah kemudian pilih <strong>Tambahkan sidik jari<\/strong>. Untuk mendapatkan sidik jari, terlebih dahulu kita masuk ke directory root project kita melalui command prompt atau cmder, kemudian copy perintah berikut ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>keytool -list -v -keystore android\\app\\debug.keystore -alias androiddebugkey<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Jika diminta password, masukan \"<strong>android<\/strong>\", setelah itu akan didapatkan output seperti gambar dibawah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":5672,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-5672\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/step-11-1024x593.jpg\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Kemudian <strong>copy<\/strong> yang ditandai garis merah seperti di gambar, kemudian tambahkan di Firebase yang tadi dibagian sidik jari.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li><strong>Google Sign in<\/strong><\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Gunakan perintah berikut ini untuk menginstall library ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>npm install @react-native-community\/google-signin --save<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Kemudian setelah menginstall library tersebut, kita harus melakukan konfigurasi lagi. Untuk konfigurasi nya, bisa ikuti langkah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list {\"ordered\":true} --><\/p>\r\n<ol>\r\n<li>Update <code>android\/build.gradle<\/code> , menjadi seperti berikut ini<\/li>\r\n<\/ol>\r\n<p><!-- \/wp:list --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>buildscript {\r\n    ext {\r\n        buildToolsVersion = \"27.0.3\"\r\n        minSdkVersion = 16\r\n        compileSdkVersion = 27\r\n        targetSdkVersion = 26\r\n        supportLibVersion = \"27.1.1\"\r\n        googlePlayServicesAuthVersion = \"16.0.1\" \/\/ &lt;--- tambahkan ini jika belum ada dalam build.gradle\r\n    }\r\n...\r\n    dependencies {\r\n        classpath 'com.android.tools.build:gradle:3.1.2' \/\/ &lt;--- tambahkan ini jika belum ada dalam build.gradle\r\n        classpath 'com.google.gms:google-services:4.1.0' \/\/ &lt;--- tambahkan ini jika belum ada dalam build.gradle\r\n    }\r\n...\r\nallprojects {\r\n    repositories {\r\n        mavenLocal()\r\n        google() \/\/ &lt;--- tambahkan ini jika belum ada dalam build.gradle\r\n        jcenter()\r\n        maven {\r\n            \/\/ All of React Native (JS, Obj-C sources, Android binaries) is installed from npm\r\n            url \"$rootDir\/..\/node_modules\/react-native\/android\"\r\n        }\r\n    }\r\n}<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>2. Update <code>android\/app\/build.gradle<\/code> menjadi seperti ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>dependencies {\r\n    implementation fileTree(dir: \"libs\", include: [\"*.jar\"])\r\n    implementation \"com.android.support:appcompat-v7:23.0.1\"\r\n    implementation \"com.facebook.react:react-native:+\"\r\n    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0' \/\/ &lt;-- tambahkan ini jika belum ada dalam build.gradle\r\n}\r\n\r\napply plugin: 'com.google.gms.google-services' \/\/ &lt;--- tambahkan ini di line paling akhir build.gradle<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk dokumentasi lebih lengkapnya bisa di cek dalam link ini (<a href=\"https:\/\/github.com\/react-native-community\/google-signin\/blob\/master\/docs\/android-guide.md\">https:\/\/github.com\/react-native-community\/google-signin\/blob\/master\/docs\/android-guide.md<\/a>)<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Jika kalian sudah menambah semua library dan sudah melakukan konfigurasinya, untuk tutorial autentikasinya bisa dilihat dalam video berikut ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:core-embed\/youtube {\"url\":\"https:\/\/youtu.be\/G2w-0CYV2og\",\"type\":\"video\",\"providerNameSlug\":\"youtube\",\"className\":\"wp-embed-aspect-16-9 wp-has-aspect-ratio\"} --><\/p>\r\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\">\r\n<div class=\"wp-block-embed__wrapper\"><iframe src=\"\/\/www.youtube.com\/embed\/G2w-0CYV2og\" width=\"560\" height=\"314\" allowfullscreen=\"allowfullscreen\"><\/iframe><\/div>\r\n<\/figure>\r\n<p><!-- \/wp:core-embed\/youtube --> <!-- wp:heading --><\/p>\r\n<h2>Troubleshooting<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p><strong>Catatan<\/strong> :<\/p>\r\n<p>Lakukan ini jika tidak bisa menginputkan SHA-1 di Firebase<\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Install library untuk merename package project, untuk perintah atau commandnya bisa gunakan dibawah ini :<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>npm install react-native-rename -g<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Untuk penggunaan library nya, bisa gunakan perintah berikut ini<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>npx react-native-rename \"Travel App\" -b com.junedomingo.travelapp<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p>Catatan :<\/p>\r\n<p>Travel App dan com.junedomingo.travelapp diganti sesuai dengan keinginan anda, bisa dimasukan nama Anda. contoh untuk package name : com.zakky.sanbercodeapp<\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:paragraph --><\/p>\r\n<p>Jika sudah merename project dan package namenya, copy code MainActivity.java dan MainApplication.java yang ada di folder <strong>android\\app\\src\\main\\java<\/strong> pada package sebelumnya kemudian paste kedalam file pada folder package baru Anda.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p><strong>Catatan<\/strong> :<\/p>\r\n<p>Ganti package name sesuai nama package baru Anda<\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --><\/p>","waktu_publish":"2021-01-20 09:30:00","status_publish":"publish","urutan":3,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 13:55:45","updated_at":"2021-01-08 23:33:09","waktu_publish_formatted":" Rabu, 20 Januari 2021. 09:30:00 WIB."},{"id":37,"uuid":"a35050d9-09e8-4cc9-8f8a-2f1872b946cf","author_user_id":11254,"materi_section_id":13,"judul":"Hari 4 - Fingerprint (Authentication)","permalink":"hari-4-fingerprint-authentication-","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Fingerprint adalah sebuah alat untuk memenuhi kebutuhan data yang cepat dengan menggunakan verifikasi sidik jari. Sebelum sensor Fingerprint ditemukan, dahulu sebuah data diamankan dengan menggunakan password atau ID, ada juga yang menggunakan pola guna mengamankan suatu data.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Saat ini, Fingerprint sudah banyak digunakan dalam berbagai aplikasi, salah satunya digunakan untuk Autentikasi, contohnya dalam Aplikasi yang membutuhkan tingkat keamanan yang tinggi, seperti Mobile Banking.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Pada kesempatan kali ini, kita akan belajar Autentikasi menggunakan Fingerprint, apa saja yang harus dipersiapkan dalam pembelajaran kali ini ?<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li><strong>Menambahkan atau Menginstall Library React Native Touch ID<\/strong><\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk menginstall library React Native Touch ID sebetulnya sama seperti menginstall library yang lain, yang membedakan adalah command\/perintahnya saja, untuk menginstallnya copy perintah ini didalam directory root project kalian<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>npm i --save react-native-touch-id<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Selanjutnya adalah, kita harus menambahkan permissions kedalam file <code>AndroidManifest.xml<\/code><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>&lt;uses-permission android:name=\"android.permission.USE_FINGERPRINT\" \/&gt;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Jika sudah, untuk menggunakan library ini kita harus mengimportnya terlebih dahulu menggunakan<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import TouchID from 'react-native-touch-id';<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Dokumentasi React Native Touch ID bisa dilihat disini (<a href=\"https:\/\/github.com\/naoufal\/react-native-touch-id\">https:\/\/github.com\/naoufal\/react-native-touch-id<\/a>)<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk lebih lengkapnya mengenai autentikasi menggunakan Fingerprint bisa dilihat dalam video berikut ini :<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:core-embed\/youtube {\"url\":\"https:\/\/youtu.be\/_t4w_RIhEUM\",\"type\":\"video\",\"providerNameSlug\":\"youtube\",\"className\":\"wp-embed-aspect-16-9 wp-has-aspect-ratio\"} --><\/p>\r\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\">\r\n<div class=\"wp-block-embed__wrapper\"><iframe src=\"\/\/www.youtube.com\/embed\/_t4w_RIhEUM\" width=\"560\" height=\"314\" allowfullscreen=\"allowfullscreen\"><\/iframe><\/div>\r\n<\/figure>\r\n<p><!-- \/wp:core-embed\/youtube --><\/p>","waktu_publish":"2021-01-21 09:30:00","status_publish":"publish","urutan":4,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 13:56:29","updated_at":"2021-01-08 23:33:25","waktu_publish_formatted":" Kamis, 21 Januari 2021. 09:30:00 WIB."},{"id":38,"uuid":"ea4978a6-5507-436c-8e9d-104f51941108","author_user_id":11254,"materi_section_id":13,"judul":"Hari 5 - Camera dan Upload Image","permalink":"hari-5-camera-dan-upload-image","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Pada kesempatan kali ini, kita akan belajar menggunakan React Native Camera dan Upload Image ke Server.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Dengan semakin berkembangnya Aplikasi, kali ini kita akan coba mencontohkan penggunaan React Native Camera dan Upload Image untuk verifikasi data diri.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk mengikuti materi kali ini, Anda harus menambahkan beberapa library berikut ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li><strong>React Native Camera<\/strong><\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk menambahkan library React Native Camera ini, anda cukup menggunakan perintah dibawah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>npm install react-native-camera --save<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Jika sudah menambahkan atau menginstall library tersebut, selanjutnya tambahkan permission pada <code>AndroidManifest.xml<\/code> berikut ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>&lt;!-- Required --&gt;\r\n&lt;uses-permission android:name=\"android.permission.CAMERA\" \/&gt;\r\n\r\n&lt;!-- Include this only if you are planning to use the camera roll --&gt;\r\n&lt;uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" \/&gt;\r\n&lt;uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" \/&gt;\r\n\r\n&lt;!-- Include this only if you are planning to use the microphone for video recording --&gt;\r\n&lt;uses-permission android:name=\"android.permission.RECORD_AUDIO\"\/&gt;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Kemudian setelah menambahkan permission pada <code>AndroidManifest.xml<\/code>, selanjutnya tambahkan ini di file <code>android\/app\/build.gradle<\/code><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:preformatted --><\/p>\r\n<pre class=\"wp-block-preformatted\">android {\r\n  ...\r\n  defaultConfig {\r\n    ...\r\n    missingDimensionStrategy 'react-native-camera', 'general' \/\/ &lt;--- tambahkan ini\r\n  }\r\n}<\/pre>\r\n<p><!-- \/wp:preformatted --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk menggunakan library React Native Camera, import terlebih dahulu seperti dibawah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code> import { RNCamera } from 'react-native-camera'; <\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Berikut adalah contoh penggunaan React Native Camera yang ditampilkan didalam sebuah Modal.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import React, { useState } from 'react';\r\nimport { View, Text, Image, Alert, Modal, StatusBar, TextInput, TouchableOpacity } from 'react-native';\r\nimport styles from '.\/style';\r\nimport { RNCamera } from 'react-native-camera';\r\nimport Icon from 'react-native-vector-icons\/Feather';\r\nimport MaterialCommunity from 'react-native-vector-icons\/MaterialCommunityIcons';\r\n\r\nfunction Register({ navigation }) {\r\n\r\n    const [isVisible, setIsVisible] = useState(false)\r\n    const [type, setType] = useState('back')\r\n    const [photo, setPhoto] = useState(null)\r\n\r\n    const renderCamera = () =&gt; {\r\n        return (\r\n            &lt;Modal visible={isVisible} onRequestClose={() =&gt; setIsVisible(false)}&gt;\r\n                &lt;View style={{ flex: 1 }}&gt;\r\n                    &lt;RNCamera\r\n                        style={{ flex: 1 }}\r\n                        type={type}\r\n                        ref={ref =&gt; {\r\n                            camera = ref;\r\n                        }}\r\n                    &gt;\r\n                        ......\r\n                    &lt;\/RNCamera&gt;\r\n                &lt;\/View&gt;\r\n            &lt;\/Modal&gt;\r\n        )\r\n    }\r\n\r\n    return (\r\n        &lt;View style={styles.container}&gt;\r\n            &lt;View style={styles.blueContainer}&gt;\r\n                &lt;TouchableOpacity style={styles.changePicture} onPress={() =&gt; setIsVisible(true)}&gt;\r\n                    &lt;Text style={styles.btnChangePicture}&gt;Change picture&lt;\/Text&gt;\r\n                &lt;\/TouchableOpacity&gt;\r\n            &lt;\/View&gt;\r\n            {renderCamera()}\r\n        &lt;\/View&gt;\r\n    )\r\n}\r\n\r\nexport default Register;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk dokumentasi lebih lanjut mengenai React Native Camera bisa dilihat dalam halaman berikut ini (<a href=\"https:\/\/github.com\/react-native-community\/react-native-camera\">https:\/\/github.com\/react-native-community\/react-native-camera<\/a>)<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk lebih detail mengenai Camera dan Upload Image, Anda bisa lihat dan simak pada video dibawah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:core-embed\/youtube {\"url\":\"https:\/\/youtu.be\/lAksEEpcaVk\",\"type\":\"video\",\"providerNameSlug\":\"youtube\",\"className\":\"wp-embed-aspect-16-9 wp-has-aspect-ratio\"} --><\/p>\r\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\">\r\n<div class=\"wp-block-embed__wrapper\"><iframe src=\"\/\/www.youtube.com\/embed\/lAksEEpcaVk\" width=\"560\" height=\"314\" allowfullscreen=\"allowfullscreen\"><\/iframe><\/div>\r\n<\/figure>\r\n<p><!-- \/wp:core-embed\/youtube --><\/p>","waktu_publish":"2021-01-22 09:30:00","status_publish":"publish","urutan":5,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 13:57:02","updated_at":"2021-01-08 23:33:46","waktu_publish_formatted":" Jumat, 22 Januari 2021. 09:30:00 WIB."}]},{"id":14,"uuid":"19eab172-effe-45f9-b804-489f7e8a41bd","materi_id":4,"nama":"Pekan 2 - Tugas","permalink":"pekan-2-tugas","urutan":5,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 13:52:43","updated_at":null,"posting":[{"id":83,"uuid":"82422589-569d-40a4-b3c8-92e11ec17c97","author_user_id":11254,"materi_section_id":14,"judul":"Hari 1 - Splashscreen dan onBoarding","permalink":"hari-1-splashscreen-dan-onboarding","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Mulai tugas kali ini, tidak ada aturan penamaan folder ataupun file. Coba buatlah project yang Anda kerjakan agar strukturnya rapih dan mudah dibaca. Jika Anda bingung mengenai struktur foldernya, Anda bisa cek kembali pada materi sebelumnya tentang React Native Pattern.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Dan untuk tugas hari ini, Anda diminta untuk membuat Splashscreen dan OnBoarding pada Aplikasi. Buatlah Splashscreen dan onBoarding sehingga hasil akhir tugasnya seperti <a href=\"https:\/\/drive.google.com\/file\/d\/1zVLvrFh86IVhqkqMWdLR-adc4SnZCSxN\/view?usp=sharing\">ini<\/a>.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p><strong>Catatan:<\/strong><\/p>\r\n<p>Untuk warna, gambar dan deskripsi tidak harus sama dengan output diatas. Yang perlu diperhatikan hanya tampilan dan posisi dari gambar dan textnya saja. Bisa lebih di kembangkan sesuai keinginan masing-masing.<\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:paragraph --><\/p>\r\n<p>Jika sudah selesai, lakukan push ke repository (<code>git add<\/code>, <code>git commit<\/code>, dan <code>git push<\/code>). Jangan lupa submit link commit Anda ke sanbercode.com.<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-01-18 09:30:00","status_publish":"publish","urutan":1,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 16:31:21","updated_at":"2021-01-08 23:34:25","waktu_publish_formatted":" Senin, 18 Januari 2021. 09:30:00 WIB."},{"id":84,"uuid":"9ac0a564-e986-4fb4-aea0-0689337ae22c","author_user_id":11254,"materi_section_id":14,"judul":"Hari 2 - Authentication (JWT)","permalink":"hari-2-authentication-jwt-","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Setelah mempelajari materi Authentication menggunakan JWT, pada tugas kali ini anda harus mengimplementasikannya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Berikut adalah tugas untuk Authentication JWT<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Berikan fungsi pada Button \"<strong>MASUK<\/strong>\" dihalaman Intro untuk berpindah ke halaman Login. Dan jangan lupa update pada navigasi Anda<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Buatlah halaman Login seperti gambar dibawah ini menggunakan Function Component<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:image {\"align\":\"center\",\"id\":12482,\"width\":349,\"height\":721,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large is-resized\"><img class=\"wp-image-12482\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/Screenshot_1603956347-498x1024.png\" alt=\"\" width=\"349\" height=\"721\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Kemudian buatlah sebuah fungsi yang digunakan untuk melakukan Autentikasi yang nantinya fungsi tersebut dijalankan ketika Button Login ditekan<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Gunakan endpoint API ini untuk login <a href=\"https:\/\/crowdfunding.sanberdev.com\/api\/auth\/login\">https:\/\/crowdfunding.sanberdev.com\/api\/auth\/login<\/a><\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Untuk melakukan request ke endpoint login, jangan lupa tambahkan Body Parameters yang berisi email dan password<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Berikan sebuah action ketika Autentikasi berhasil, maka screen akan berpindah ke halaman Account yang sudah dibuat pada tugas pertama tentang Function Component, sedangkan jika Autentikasi gagal dia akan menampilkan alert atau popup error.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p><strong>Catatan <\/strong>: Untuk testing silahkan login dengan menggunakan user dibawah ini :<\/p>\r\n<p>email : zakkymf@gmail.com<\/p>\r\n<p>password : 123456<\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Tampilkan info user dari API berikut ini : <a href=\"https:\/\/crowdfunding.sanberdev.com\/api\/profile\/get-profile\">https:\/\/crowdfunding.sanberdev.com\/api\/profile\/get-profile<\/a> pada halaman Account yang sudah dibuat pada Tugas Function Component. Cukup tampilkan Nama dan Foto nya saja. Sehingga hasilnya seperti gambar dibawah ini<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:image {\"align\":\"center\",\"id\":12469,\"width\":388,\"height\":797,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large is-resized\"><img class=\"wp-image-12469\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/Screenshot_1603953103-498x1024.png\" alt=\"\" width=\"373\" height=\"766\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Kemudian pada halaman Account, berikan fungsi pada Button \"Keluar\", ketika button tersebut ditekan maka akan menghapus token yang ada dalam Local Storage, dan berikan actions ketika berhasil logout atau keluar maka dia akan berpindah ke halaman <strong>Login<\/strong>.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p><strong>Catatan:<\/strong><\/p>\r\n<p>Untuk warna yang digunakan pada aplikasi bebas, bisa disesuaikan dengan keinginan masing-masing. Dan tetap gunakan react native pattern agar struktur project Anda rapih dan mudah dibaca.<\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p><strong>Catatan<\/strong> :<\/p>\r\n<p>Untuk API Documentation bisa dilihat pada halaman berikut ini :<\/p>\r\n<p><a href=\"https:\/\/documenter.getpostman.com\/view\/3620561\/TVspjUfF\">https:\/\/documenter.getpostman.com\/view\/3620561\/TVspjUfF<\/a><\/p>\r\n<p>Anda bisa testing terlebih dahulu menggunakan Postman<\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:paragraph --><\/p>\r\n<p>Jika sudah selesai, lakukan push ke repository (<code>git add<\/code>, <code>git commit<\/code>, dan <code>git push<\/code>). Jangan lupa submit link commit Anda ke sanbercode.com.<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-01-19 09:30:00","status_publish":"publish","urutan":2,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 16:31:44","updated_at":"2021-01-08 23:34:44","waktu_publish_formatted":" Selasa, 19 Januari 2021. 09:30:00 WIB."},{"id":85,"uuid":"c47ed8bf-8f97-4c9d-85d4-9394da2369d9","author_user_id":11254,"materi_section_id":14,"judul":"Hari 3 - Authentication (Google)","permalink":"hari-3-authentication-google-","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Pada tugas kali, masih berhubungan dengan Autentikasi. Namun untuk tugas kali ini, anda diminta untuk mengimplementasikan Autentikasi Google menggunakan Firebase.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Berikut adalah tugas untuk hari ini tentang Authentication Google<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Buatlah sebuah project baru di Firebase (<a href=\"https:\/\/firebase.google.com\/\">https:\/\/firebase.google.com\/<\/a>) dan lakukan konfigurasi pada project anda sesuai Materi yang sudah diberikan.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Masih di halaman <strong>Login<\/strong>, tambahkan sebuah fungsi untuk Autentikasi menggunakan Google. Dan tambahkan sebuah Button untuk Login menggunakan Google, seperti pada gambar dibawah ini<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:image {\"align\":\"center\",\"id\":12486,\"width\":351,\"height\":721,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large is-resized\"><img class=\"wp-image-12486\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/Screenshot_1603958202-498x1024.png\" alt=\"\" width=\"351\" height=\"721\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p>Catatan :<\/p>\r\n<p>Untuk membuat Button \"<strong>Sign in with Google<\/strong>\" bisa menggunakan <strong>GoogleSigninButton <\/strong>dari Library React Native Google SignIn yang sudah diinstall<\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Berikan sebuah action ketika Autentikasi berhasil, maka screen akan berpindah ke halaman Account yang sudah dibuat pada tugas pertama tentang Function Component, sedangkan jika Autentikasi gagal dia akan menampilkan alert atau popup error.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Tampilkan data dari response yang didapat ketika Autentikasi berhasil sesuai email yang anda gunakan atau pilih untuk login kedalam halaman Account, sehingga outputnya seperti ini<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:image {\"align\":\"center\",\"id\":12488,\"width\":383,\"height\":788,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large is-resized\"><img class=\"wp-image-12488\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/Screenshot_1603962333-498x1024.png\" alt=\"\" width=\"383\" height=\"788\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p><strong>Catatan <\/strong>:<\/p>\r\n<p>Data yang ditampilkan atau diambil dari response hanya foto profile dan nama saja. Contohnya seperti gambar diatas, itu ketika saya login menggunakan akun Google saya.<\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p><strong>Catatan<\/strong> :<\/p>\r\n<p>Berikan sebuah kondisional, agar ketika login biasa menggunakan JWT ataupun Google masih bisa menampilkan info usernya di halaman Account!<\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Tambahkan fungsi pada Button \"Keluar\" yang ada dihalaman Account untuk me-logout Account Google tersebut.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Lampirkan sebuah screenshoot sebagai bukti bahwa anda telah berhasil melakukan Autentikasi Google menggunakan firebase. Untuk lampiran screenshoot simpan kedalam folder yang sama dengan halaman Login, contohnya seperti dibawah ini<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:image {\"id\":5905,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-5905\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/firebase-1024x502.jpg\" alt=\"\" \/>\r\n<figcaption>Contoh Screenshoot yang dilampirkan<\/figcaption>\r\n<\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Jika sudah selesai, lakukan push ke repository (<code>git add<\/code>, <code>git commit<\/code>, dan <code>git push<\/code>). Jangan lupa submit link commit Anda ke sanbercode.com.<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-01-20 09:30:00","status_publish":"publish","urutan":3,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 16:32:26","updated_at":"2021-01-08 23:35:48","waktu_publish_formatted":" Rabu, 20 Januari 2021. 09:30:00 WIB."},{"id":86,"uuid":"26be3e0d-8898-4ae8-a22d-8c44af820b27","author_user_id":11254,"materi_section_id":14,"judul":"Hari 4 - Fingerprint (Authentication)","permalink":"hari-4-fingerprint-authentication-","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Setelah membaca dan memahami materi tentang Autentikasi menggunakan Fingerprint, maka tugas kali ini adalah Buatlah sebuah Autentikasi menggunakan Fingerprint, berikut adalah aturan atau tata cara pengerjaan tugasnya<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Berikan fungsi pada Button \"Fingerprint\" yang ada pada halaman Login untuk Autentikasi menggunakan Fingerprint<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:image {\"align\":\"center\",\"id\":12491,\"width\":329,\"height\":677,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large is-resized\"><img class=\"wp-image-12491\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/Screenshot_1603958202-1-498x1024.png\" alt=\"\" width=\"329\" height=\"677\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Berikan sebuah action ketika Autentikasi berhasil, maka screen akan berpindah ke halaman Account yang sudah dibuat pada tugas pertama tentang Function Component, sedangkan jika Autentikasi dicancel dia akan menampilkan alert atau popup error.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Sehingga output pada tugas kali ini seperti dibawah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:video {\"id\":12494,\"align\":\"center\"} --><\/p>\r\n<figure class=\"wp-block-video aligncenter\"><video style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/fingerprint-1.webm\" controls=\"controls\" width=\"806\" height=\"403\" data-mce-fragment=\"1\"><\/video><\/figure>\r\n<p><!-- \/wp:video --> <!-- wp:paragraph --><\/p>\r\n<p>Jika sudah selesai, lakukan push ke repository (<code>git add<\/code>, <code>git commit<\/code>, dan <code>git push<\/code>). Jangan lupa submit link commit Anda ke sanbercode.com.<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-01-21 09:30:00","status_publish":"publish","urutan":4,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 16:33:03","updated_at":"2021-01-08 23:36:17","waktu_publish_formatted":" Kamis, 21 Januari 2021. 09:30:00 WIB."},{"id":87,"uuid":"6be562cc-362d-4fb4-ba58-e7f597a9c69d","author_user_id":11254,"materi_section_id":14,"judul":"Hari 5 - Camera dan Upload Image","permalink":"hari-5-camera-dan-upload-image","konten":"<p><!-- wp:list --><\/p>\r\n<ul>\r\n<li>Pada halaman atau screen Account, berikan sebuah fungsi ketika Profile User ditekan maka dia akan berpindah ke halaman Edit Account.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Buatlah tampilan halaman Edit Account menggunakan Function Component seperti gambar dibawah ini<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:image {\"align\":\"center\",\"id\":12498,\"width\":387,\"height\":796,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large is-resized\"><img class=\"wp-image-12498\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/Screenshot_1603978561-498x1024.png\" alt=\"\" width=\"387\" height=\"796\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p><strong>Catatan<\/strong> :<\/p>\r\n<p>Pastikan didalam halaman Edit Account ada Profile User yang sebelumnya (tidak boleh kosong\/user harus menginputkan dari awal tanpa ada data user tersebut)<\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Berikan sebuah fungsi, ketika icon kamera ditekan maka dia akan membuka camera atau menjalankan library React Native Camera<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Buatlah sebuah frame dalam component Camera tersebut, sehingga hasilnya seperti gambar dibawah ini<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:image {\"align\":\"center\",\"id\":7465,\"width\":372,\"height\":744,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large is-resized\"><img class=\"wp-image-7465\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/WhatsApp-Image-2020-07-23-at-13.43.03-512x1024.jpeg\" alt=\"\" width=\"372\" height=\"744\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Dalam camera tersebut buatlah fungsi untuk mengambil gambar dari camera dan juga fungsi untuk merubah camera yang akan digunakan, bisa camera depan atau belakang.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Setelah itu, tampilkan hasil tangkapan gambar tersebut pada halaman \"Profile Saya\"<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Kemudian buatlah sebuah fungsi untuk enable\/disable editing untuk bagian Nama dalam icon pencil ketika icon tersebut ditekan. Dan jangan lupa untuk mencatat perubahan dari nama tersebut.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Setelah itu, buatlah sebuah fungsi pada Button \"SIMPAN\" untuk mengupload perubahan data yang dilakukan di halaman Edit Profile User tadi.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Gunakan endpoint berikut ini untuk melakukan update profile: <a href=\"https:\/\/crowdfunding.sanberdev.com\/api\/profile\/update-profile\">https:\/\/crowdfunding.sanberdev.com\/api\/profile\/update-profile<\/a>. Jangan lupa untuk tambahkan Body Parameter name dan photo pada saat melakukan request.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Jangan lupa untuk menambahkan token dalam header pada saat request. Dan jangan lupa untuk merubah 'Content-Type' menjadi 'multipart\/form-data'<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Kemudian berikan sebuah action jika Update Profile Berhasil, maka akan berganti halaman ke halaman Profile. Sedangkan jika Update Gagal, tampilkan sebuah Alert untuk menyatakan bahwa update profile gagal.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p><strong>Catatan<\/strong> :<\/p>\r\n<p>Anda hanya cukup merubah Foto dan Nama Saja. Untuk email biarkan saja.<\/p>\r\n<p>&nbsp;<\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p><strong>Catatan<\/strong> :<\/p>\r\n<p>Untuk dokumentasi API bisa dilihat pada halaman berikut ini : <a href=\"https:\/\/documenter.getpostman.com\/view\/3620561\/TVejfpbt\" target=\"_blank\" rel=\"noreferrer noopener\">https:\/\/documenter.getpostman.com\/view\/3620561\/TVejfpbt<\/a>. Anda bisa test terlebih dahulu menggunakan Postman.<\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:paragraph --><\/p>\r\n<p>Jika sudah selesai, lakukan push ke repository (<code>git add<\/code>, <code>git commit<\/code>, dan <code>git push<\/code>). Jangan lupa submit link commit Anda ke sanbercode.com.<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-01-22 09:30:00","status_publish":"publish","urutan":5,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 16:33:29","updated_at":"2021-01-08 23:36:36","waktu_publish_formatted":" Jumat, 22 Januari 2021. 09:30:00 WIB."},{"id":88,"uuid":"10f78609-b5e7-4df0-874f-15897f2aa9b1","author_user_id":11254,"materi_section_id":14,"judul":"Hari 6 - Mini Project","permalink":"hari-6-mini-project","konten":"<p><!-- wp:list --><\/p>\r\n<ul>\r\n<li>Buatlah Fitur Registrasi Akun pada Aplikasi CrowdFunding Anda<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:image {\"align\":\"center\",\"id\":13286,\"width\":339,\"height\":697,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large is-resized\"><img class=\"wp-image-13286\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/Screenshot_1605252343-498x1024.png\" alt=\"\" width=\"339\" height=\"697\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Diatas adalah halaman Intro pada Aplikasi crowdfunding yang sudah dibuat sebelumnya. Berikan fungsi pada button \"<strong>Daftar<\/strong>\", jika button \"<strong>Daftar<\/strong>\" ditekan maka dia akan berpindah halaman ke Halaman Registrasi Akun Baru.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Setelah itu, buatlah halaman Registrasi Akun Baru seperti gambar dibawah ini<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:image {\"align\":\"center\",\"id\":13289,\"width\":341,\"height\":701,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large is-resized\"><img class=\"wp-image-13289\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/Screenshot_1605252766-498x1024.png\" alt=\"\" width=\"341\" height=\"701\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Jika sudah, buatlah sebuah fungsi pada button \"<strong>Daftar<\/strong>\", jika button \"<strong>Daftar<\/strong>\" ditekan maka dia akan melakukan request untuk mendapatkan kode OTP yang akan dikirimkan melalui email<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Masih dalam fungsi button \"<strong>Daftar<\/strong>\", lakukan request ke endpoint API berikut ini : <a href=\"https:\/\/crowdfunding.sanberdev.com\/api\/auth\/register\">https:\/\/crowdfunding.sanberdev.com\/api\/auth\/register<\/a>. Jangan lupa untuk tambahkan Body Parameter <strong>name<\/strong> dan <strong>email<\/strong>, saat melakukan request<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Ketika request berhasil dan sudah mendapatkan response dari API, berikan sebuah action untuk berpindah halaman ke halaman input code OTP dengan mengirimkan\/membawa response data dari screen sebelumnya. Kemudian buatlah halaman input code OTP seperti gambar dibawah ini. Sedangkan jika email sudah terdaftar, berikan sebuah Alert bahwa email sudah terdaftar.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:image {\"align\":\"center\",\"id\":13290,\"width\":323,\"height\":663,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large is-resized\"><img class=\"wp-image-13290\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/Screenshot_1605253644-498x1024.png\" alt=\"\" width=\"323\" height=\"663\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p><strong>Catatan<\/strong> :<\/p>\r\n<p>Pastikan email yang digunakan user untuk mendaftar pada screen sebelumnya ditampilkan juga di halaman verification otp code seperti gambar diatas. Referensi parsing parameter React Navigation bisa di cek di halaman berikut ini : <a href=\"https:\/\/reactnavigation.org\/docs\/params\/\" target=\"_blank\" rel=\"noreferrer noopener\">https:\/\/reactnavigation.org\/docs\/params\/<\/a><\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p><strong>Catatan<\/strong> :<\/p>\r\n<p>Untuk membuat component input OTP bisa gunakan module atau library berikut ini : <a href=\"https:\/\/github.com\/tttstudios\/react-native-otp-input#readme\" target=\"_blank\" rel=\"noreferrer noopener\">https:\/\/github.com\/tttstudios\/react-native-otp-input#readme<\/a><\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Jika sudah mendapatkan code OTP yang dikirimkan ke email user, inputkan code tersebut di halaman Verification OTP seperti gambar diatas<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Setelah itu, buatlah sebuah fungsi pada button \"<strong>Verifikasi<\/strong>\", untuk melakukan verifikasi email.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Gunakan endpoint API berikut ini untuk melakukan request verifikasi email : <a href=\"https:\/\/crowdfunding.sanberdev.com\/api\/auth\/verification\">https:\/\/crowdfunding.sanberdev.com\/api\/auth\/verification<\/a>, jangan lupa untuk menambahkan <strong>otp<\/strong> sebagai Body Parameter saat melakukan request<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Jika verifikasi berhasil, berikan sebuah action untuk berpindah halaman ke halaman Setup Password dengan membawa parameter <strong>name<\/strong> dan <strong>email<\/strong> dari screen Verifikasi OTP sebelumnya. Kemudian buatlah halaman Setup Password seperti gambar dibawah ini<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:image {\"align\":\"center\",\"id\":13291,\"width\":337,\"height\":694,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large is-resized\"><img class=\"wp-image-13291\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/Screenshot_1605254750-498x1024.png\" alt=\"\" width=\"337\" height=\"694\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Didalam halaman Setup Password tersebut, buatlah 2 TextInput untuk input password dan password confirmation<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Kemudian, buatlah sebuah fungsi untuk show\/hide password pada icon mata ketika icon tersebut ditekan.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Selanjutnya, berikan sebuah fungsi pada button \"<strong>SIMPAN<\/strong>\", ketika button \"<strong>SIMPAN<\/strong>\" ditekan maka dia akan melakukan request untuk mendaftarkan akun baru<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Gunakan endpoint API berikut ini untuk melakukan request buat akun baru : <a href=\"https:\/\/crowdfunding.sanberdev.com\/api\/auth\/update-password\">https:\/\/crowdfunding.sanberdev.com\/api\/auth\/update-password<\/a>. Pastikan sebelum melakukan request, password dan password confirmation isinya harus sama, jika isinya tidak sama berikan sebuah Alert jika password yang diinputkan tidak sama. Jangan lupa pada saat request, tambahkan <strong>email<\/strong>, <strong>password<\/strong>, dan <strong>password_confirmation<\/strong> sebagai Body Parameter<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Jika proses pendaftaran akun berhasil, berikan sebuah action untuk berganti halaman ke halaman <strong>Login<\/strong>.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p><strong>Catatan<\/strong> :<\/p>\r\n<p>Untuk warna Aplikasi bebas sesuai keinginan Anda, dan untuk text pada gambar yang masih hardcode, bisa Anda sesuaikan dengan tema Project kali ini<\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p><strong>Catatan<\/strong> :<\/p>\r\n<p>Untuk dokumentasi API bisa dilihat pada halaman berikut ini : <a href=\"https:\/\/documenter.getpostman.com\/view\/3620561\/TVejfpbt\" target=\"_blank\" rel=\"noreferrer noopener\">https:\/\/documenter.getpostman.com\/view\/3620561\/TVejfpbt<\/a>. Anda bisa test terlebih dahulu menggunakan Postman.<\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:paragraph --><\/p>\r\n<p>Jika sudah selesai, lakukan push ke repository (<code>git add<\/code>, <code>git commit<\/code>, dan <code>git push<\/code>). Jangan lupa submit link commit Anda ke sanbercode.com.<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-01-23 09:30:00","status_publish":"publish","urutan":6,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 16:34:12","updated_at":"2021-01-08 23:36:51","waktu_publish_formatted":" Sabtu, 23 Januari 2021. 09:30:00 WIB."}]},{"id":15,"uuid":"579f7868-4f5e-46d7-a753-b1a3414cd5d5","materi_id":4,"nama":"Pekan 3 - Materi","permalink":"pekan-3-materi","urutan":6,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 13:52:52","updated_at":null,"posting":[{"id":94,"uuid":"8ff58d8e-d172-4054-b09f-2a93df629dbf","author_user_id":11254,"materi_section_id":15,"judul":"Hari 1 - Design Homepage Kekinian","permalink":"hari-1-design-homepage-kekinian","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Pada materi kali ini, Anda akan belajar tentang membuat Design Homepage Kekinian.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Dalam membuat Design Homepage Kekinian, materi kita hari ini tidak perlu menggunakan library tambahan. Berikut merupakan tips membuat sebuah tampilan atau User Interface responsive di berbagai screen<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Flexbox<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk lebih detail mengenai flexbox bisa dilihat pada halaman berikut ini (<a href=\"https:\/\/reactnative.dev\/docs\/flexbox\">https:\/\/reactnative.dev\/docs\/flexbox<\/a>)<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Dimensions<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Dimensions ini bisa kita gunakan tanpa harus menginstall sebuah library, karena Dimensions ini sudah terdapat pada library React. Kita hanya cukup mengimportnya saja. Untuk contoh penggunaan Dimensions bisa dilihat pada code dibawah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import { Dimensions } from \"react-native\";\r\n\r\nconst width = Dimensions.get('window').width;\r\nconst height = Dimensions.get('window').height;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Dokumentasi mengenai Dimensions bisa dilihat pada halaman berikut ini (<a href=\"https:\/\/reactnative.dev\/docs\/dimensions\">https:\/\/reactnative.dev\/docs\/dimensions<\/a>)<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Percent(%)<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Penggunaan percent(%) ini juga cukup penting. Anda bisa menambahkan atau menggunakan percent(%) ini untuk layouting, seperti menambahkan kedalam width, height, margin, padding dan sebagainya. Untuk contohnya bisa dilihat pada code berikut ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>addButton: {\r\n        width: '50%',\r\n        height: '30%',\r\n        marginLeft: 5,\r\n        alignItems: \"center\",\r\n        justifyContent: 'center',\r\n        backgroundColor: '#3EC6FF'\r\n}<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Sekedar tambahan, untuk pembelajaran. Jika kalian masih bingung penggunaan Flexbox, Dimensions dan Percent. Dan kalian ingin menggunakan sebuah library, kalian bisa coba library berikut ini (<a href=\"https:\/\/github.com\/marudy\/react-native-responsive-screen\">https:\/\/github.com\/marudy\/react-native-responsive-screen<\/a>) atau Anda bisa explore sendiri untuk library lainnya untuk layouting.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Sharing tentang Layouting dan Design Homepage Kekinian, bisa dilihat pada video berikut ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:core-embed\/youtube {\"url\":\"https:\/\/youtu.be\/o85jl1B6eTY\",\"type\":\"video\",\"providerNameSlug\":\"youtube\",\"className\":\"wp-embed-aspect-16-9 wp-has-aspect-ratio\"} --><\/p>\r\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\">\r\n<div class=\"wp-block-embed__wrapper\"><iframe src=\"\/\/www.youtube.com\/embed\/o85jl1B6eTY\" width=\"560\" height=\"314\" allowfullscreen=\"allowfullscreen\"><\/iframe><\/div>\r\n<\/figure>\r\n<p><!-- \/wp:core-embed\/youtube --><\/p>","waktu_publish":"2021-01-25 09:30:00","status_publish":"publish","urutan":1,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 16:40:57","updated_at":"2021-01-08 23:37:40","waktu_publish_formatted":" Senin, 25 Januari 2021. 09:30:00 WIB."},{"id":95,"uuid":"71f22da7-dbec-44e5-80d5-bdd52e4b598b","author_user_id":11254,"materi_section_id":15,"judul":"Hari 1 - Payment Gateway","permalink":"hari-1-payment-gateway","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Setelah Anda membuat halaman untuk checkout nya, sekarang kita lanjut untuk Payment Gatewaynya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Pada materi kali ini, kita menggunakan Midtrans sebagai Payment Gateway-nya. Di midtrans ini ada 2 cara yang bisa dipakai, yaitu ada Core API dan ada SNAP. Lalu apa perbedaannya ?<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Jika kita menggunakan Core API Midtrans, maka kita bisa meng-custom sesuai keinginan untuk tampilan payment-nya, untuk dokumentasi Core API Midtrans bisa di cek pada halaman berikut <a href=\"https:\/\/api-docs.midtrans.com\/#introduction\" target=\"_blank\" rel=\"noreferrer noopener\">ini<\/a> atau halaman <a href=\"https:\/\/docs.midtrans.com\/en\/core-api\/overview\" target=\"_blank\" rel=\"noreferrer noopener\">ini<\/a>.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Sedangkan jika kita menggunakan SNAP, kita tidak bisa meng-custom sepenuhnya untuk tampilan payment-nya. Kita hanya bisa menggunakan halaman yang sudah disediakan pihak Midtrans-nya. Untuk dokumentasi SNAP Anda bisa cek halaman berikut <a href=\"https:\/\/snap-docs.midtrans.com\/#getting-started\" target=\"_blank\" rel=\"noreferrer noopener\">ini<\/a>.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Dan, pada materi kali ini, kita akan menggunakan method SNAP-nya dari Midtrans. Berikut adalah contoh Aplikasi yang menggunakan method SNAP ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":13180,\"width\":318,\"height\":654,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large is-resized\"><img class=\"wp-image-13180\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/Screenshot_1605076370-498x1024.png\" alt=\"\" width=\"318\" height=\"654\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:image {\"align\":\"center\",\"id\":13181,\"width\":311,\"height\":641,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large is-resized\"><img class=\"wp-image-13181\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/Screenshot_1605076377-498x1024.png\" alt=\"\" width=\"311\" height=\"641\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Selanjutnya, untuk mengikuti materi kali ini, Anda harus menginstall library tambahan yaitu <strong>React Native WebView<\/strong>. Untuk perintah installasi library atau modulenya bisa gunakan perintah dibawah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>npm install --save react-native-webview<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>atau jika Anda menggunakan Yarn, bisa gunakan perintah dibawah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>yarn add react-native-webview<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk dokumentasi React Native WebView bisa dilihat pada halaman berikut ini : <a href=\"https:\/\/github.com\/react-native-webview\/react-native-webview\">https:\/\/github.com\/react-native-webview\/react-native-webview<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p><strong>Catatan<\/strong> :<\/p>\r\n<p>Tidak perlu menggunakan perintah react-native link, karena sudah auto linking!<\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk belajar lebih lanjut tentang Payment Gateway ini, Anda bisa lihat dalam video dibawah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:core-embed\/youtube {\"url\":\"https:\/\/youtu.be\/FQsNIEMQeYY\",\"type\":\"video\",\"providerNameSlug\":\"youtube\",\"className\":\"wp-embed-aspect-16-9 wp-has-aspect-ratio\"} --><\/p>\r\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\">\r\n<div class=\"wp-block-embed__wrapper\"><iframe src=\"\/\/www.youtube.com\/embed\/FQsNIEMQeYY\" width=\"560\" height=\"314\" allowfullscreen=\"allowfullscreen\"><\/iframe><\/div>\r\n<\/figure>\r\n<p><!-- \/wp:core-embed\/youtube --><\/p>","waktu_publish":"2021-01-25 09:30:00","status_publish":"publish","urutan":2,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 16:41:24","updated_at":"2021-01-08 23:37:56","waktu_publish_formatted":" Senin, 25 Januari 2021. 09:30:00 WIB."},{"id":97,"uuid":"48692b26-c026-458d-bf27-f04aa479d60e","author_user_id":11254,"materi_section_id":15,"judul":"Hari 2 - GPS Location + Maps (MapBox)","permalink":"hari-2-gps-location-maps-mapbox-","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Pada hari ini, Kita akan belajar menampilkan Maps menggunakan Mapbox. Apa saja yang dibutuhkan untuk mengikuti materi kali ini ?<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li><strong>React Native Mapbox<\/strong><\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk menambahkan library atau module react native mapbox, Anda bisa gunakan perintah dibawah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>npm install @react-native-mapbox-gl\/maps --save<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Selanjutnya, tambahkan permission berikut ini pada <code>AndroidManifest.xml <\/code>Project Anda<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>&lt;uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" \/&gt;\r\n&lt;uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" \/&gt;\r\n&lt;uses-feature android:name=\"android.hardware.location.gps\" \/&gt;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Jika sudah, Anda harus membuat sebuah akun Mapbox. Anda bisa lakukan pendaftaran akun pada halaman berikut ini (<a href=\"https:\/\/account.mapbox.com\/auth\/signup\/\">https:\/\/account.mapbox.com\/auth\/signup\/<\/a>)<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Kemudian, setelah melakukan pendaftaran, Anda bisa lihat dibagian halaman paling bawah, Anda akan menemukan sebuah Access Token seperti gambar dibawah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":8007,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-8007\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/07\/access_token-1024x463.jpg\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Nantinya token tersebut akan digunakan untuk menggunakan Maps pada materi kali ini.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk Dokumentasi Mapbox, Anda bisa lihat pada halaman berikut ini : <a href=\"https:\/\/github.com\/react-native-mapbox-gl\/maps\" target=\"_blank\" rel=\"noreferrer noopener\">https:\/\/github.com\/react-native-mapbox-gl\/maps<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk lebih detail mengenai Maps menggunakan Mapbox ini kalian bisa lihat pada video berikut ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:core-embed\/youtube {\"url\":\"https:\/\/youtu.be\/h0eftvQ7B5E\",\"type\":\"video\",\"providerNameSlug\":\"youtube\",\"className\":\"wp-embed-aspect-16-9 wp-has-aspect-ratio\"} --><\/p>\r\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\">\r\n<div class=\"wp-block-embed__wrapper\"><iframe src=\"\/\/www.youtube.com\/embed\/h0eftvQ7B5E\" width=\"560\" height=\"314\" allowfullscreen=\"allowfullscreen\"><\/iframe><\/div>\r\n<\/figure>\r\n<p><!-- \/wp:core-embed\/youtube --><\/p>","waktu_publish":"2021-01-26 09:30:00","status_publish":"publish","urutan":3,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 16:42:43","updated_at":"2021-01-08 23:39:03","waktu_publish_formatted":" Selasa, 26 Januari 2021. 09:30:00 WIB."},{"id":98,"uuid":"0e44c9ae-4b11-4744-97bb-4eee919f6b30","author_user_id":11254,"materi_section_id":15,"judul":"Hari 3 - Chart","permalink":"hari-3-chart","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Pada materi kali ini, Kita akan mempelajari Chart. Chart ini biasanya digunakan untuk melihat suatu laporan dalam bentuk grafik. Lalu apa saja yang dibutuhkan untuk mengikuti materi kali ini ?<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li><strong>React Native Chart Wrapper<\/strong><\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk menginstall atau menambahkan module tersebut. Anda bisa jalankan perintah dibawah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>npm install react-native-charts-wrapper --save<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Jika sudah, kita harus melakukan konfigurasi terlebih dahulu. Yang pertama cek pada <code>android\/build.gradle<\/code><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>maven { url \"https:\/\/jitpack.io\" }<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p><strong>Catatan<\/strong> :<\/p>\r\n<p>Jika sudah ada <code>maven { url \"https:\/\/jitpack.io\" }<\/code> silahkan skip bagian ini<\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:paragraph --><\/p>\r\n<p>Kemudian tambahkan ini kedalam file <code>android\/settings.gradle<\/code><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>include ':react-native-charts-wrapper'\r\nproject(':react-native-charts-wrapper').projectDir = new File(\r\n  rootProject.projectDir,\r\n  '..\/node_modules\/react-native-charts-wrapper\/android'\r\n)<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Jika sudah, tambahkan ini kedalam file <code>android\/app\/build.gradle<\/code><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>dependencies {\r\n    ...\r\n    implementation project(':react-native-charts-wrapper') &lt;-- tambahkan ini\r\n}<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Selanjutnya, buka file <code>MainApplication.java<\/code>, kemudian tambahkan ini pada bagian import<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import com.github.wuxudong.rncharts.MPAndroidChartPackage;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Kemudian tambahkan pada bagian <code>getPackages<\/code><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>protected List&lt;ReactPackage&gt; getPackages() {\r\n          @SuppressWarnings(\"UnnecessaryLocalVariable\")\r\n          List&lt;ReactPackage&gt; packages = new PackageList(this).getPackages();\r\n          \/\/ Packages that cannot be autolinked yet can be added manually here, for example:\r\n          \/\/ packages.add(new MyReactNativePackage());\r\n          packages.add(new MPAndroidChartPackage()); &lt;--- tambahkan ini saja\r\n          return packages;\r\n        }<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Dokumentasi React Native Chart Wrapper bisa dilihat pada halaman berikut ini : <a href=\"https:\/\/github.com\/wuxudong\/react-native-charts-wrapper\" target=\"_blank\" rel=\"noreferrer noopener\">https:\/\/github.com\/wuxudong\/react-native-charts-wrapper<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk lebih detail mengenai Chart dalam React Native, bisa dilihat pada video berikut ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:core-embed\/youtube {\"url\":\"https:\/\/youtu.be\/Jf-OmrHMxoQ\",\"type\":\"video\",\"providerNameSlug\":\"youtube\",\"className\":\"wp-embed-aspect-16-9 wp-has-aspect-ratio\"} --><\/p>\r\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\">\r\n<div class=\"wp-block-embed__wrapper\"><iframe src=\"\/\/www.youtube.com\/embed\/Jf-OmrHMxoQ\" width=\"560\" height=\"314\" allowfullscreen=\"allowfullscreen\"><\/iframe><\/div>\r\n<\/figure>\r\n<p><!-- \/wp:core-embed\/youtube --><\/p>","waktu_publish":"2021-01-27 09:30:00","status_publish":"publish","urutan":4,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 16:43:09","updated_at":"2021-01-08 23:39:28","waktu_publish_formatted":" Rabu, 27 Januari 2021. 09:30:00 WIB."},{"id":100,"uuid":"399bb1bf-fb07-4dd0-bccb-cc5f59de08f2","author_user_id":11254,"materi_section_id":15,"judul":"Hari 4 - Realtime Data Management","permalink":"hari-4-realtime-data-management","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Pada materi kali ini, Anda akan belajar tentang Realtime Data Management. Realtime Data Management adalah sistem basis data yang menggunakan pemrosesan waktu nyata untuk menangani beban kerja yang kondisinya terus berubah.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Sama seperti sebelumnya, materi kali ini masih menggunakan Firebase. Apa saja yang dibutuhkan untuk mengikuti materi kali ini ?<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>React Native Firebase Database<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk menambahkan module tersebut, Anda bisa gunakan perintah dibawah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>npm install @react-native-firebase\/database --save<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah itu masuk ke firebase console Project masing-masing, kemudian pilih <strong>Realtime Database<\/strong>. Buat database terlebih dahulu. Jika sudah masuk ke <strong>Aturan<\/strong> dan rubah <strong>.read<\/strong> and <strong>.write<\/strong> menjadi \"<strong>true<\/strong>\". Jika bingung bisa lihat gambar dibawah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":13057,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large\"><img class=\"wp-image-13057\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/firebase-1024x507.jpg\" alt=\"\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk menggunakan module react native firebase database, tambahkan code berikut ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import database from '@react-native-firebase\/database';<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Dokumentasi lebih lanjut mengenai React Native Firebase Database, Anda bisa lihat pada halaman berikut ini (<a href=\"https:\/\/rnfirebase.io\/database\/usage\">https:\/\/rnfirebase.io\/database\/usage<\/a>)<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>React Native Gifted Chat<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk menambahkan atau menginstall modulenya, Anda bisa gunakan perintah dibawah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>npm install react-native-gifted-chat --save<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk menggunakan module React Native Gifted Chat, tambahkan code berikut ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>import { GiftedChat } from 'react-native-gifted-chat'<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Dokumentasi lebih lanjut mengenai React Native Gifted Chat, Anda bisa lihat pada halaman berikut ini (<a href=\"https:\/\/github.com\/FaridSafi\/react-native-gifted-chat\">https:\/\/github.com\/FaridSafi\/react-native-gifted-chat<\/a>)<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk contoh mengenai Realtime Data Management bisa dilihat pada video dibawah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:core-embed\/youtube {\"url\":\"https:\/\/youtu.be\/7By1HQZ-d7c\",\"type\":\"video\",\"providerNameSlug\":\"youtube\",\"className\":\"wp-embed-aspect-16-9 wp-has-aspect-ratio\"} --><\/p>\r\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\">\r\n<div class=\"wp-block-embed__wrapper\"><iframe src=\"\/\/www.youtube.com\/embed\/7By1HQZ-d7c\" width=\"560\" height=\"314\" allowfullscreen=\"allowfullscreen\"><\/iframe><\/div>\r\n<\/figure>\r\n<p><!-- \/wp:core-embed\/youtube --><\/p>","waktu_publish":"2021-01-28 09:30:00","status_publish":"publish","urutan":5,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 16:43:41","updated_at":"2021-01-08 23:39:51","waktu_publish_formatted":" Kamis, 28 Januari 2021. 09:30:00 WIB."},{"id":101,"uuid":"95c29d38-5e51-4976-8077-f6602b9eeaa9","author_user_id":11254,"materi_section_id":15,"judul":"Hari 5 - Complex Navigation (React Navigation) + Deep Linking","permalink":"hari-5-complex-navigation-react-navigation-deep-linking","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Pada materi kali ini, Kita akan belajar tentang method atau fungsi yang ada di React Navigation dan Deep Linking.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading --><\/p>\r\n<h2>React Navigation<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p><code>Navigation<\/code> memiliki prop sebagai berikut<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li><code>navigate<\/code> - Digunakan untuk berpindah ke halaman lain<\/li>\r\n<li><code>reset<\/code> - Menghapus route, dan mengganti dengan route yang baru<\/li>\r\n<li><code>goBack<\/code> - Menutup screen aktif dan kembali ke screen atau route sebelumnya<\/li>\r\n<li><code>setParams<\/code> - Menyimpan parameter untuk digunakan di route lain<\/li>\r\n<li><code>dispatch<\/code> - Mengirim sebuah actions pada router<\/li>\r\n<li><code>setOptions<\/code> - Memperbarui screen options<\/li>\r\n<li><code>isFocused<\/code> - Mengecek apakah layar fokus<\/li>\r\n<li><code>addListener<\/code> - Mengupdate ke event pada navigator<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Ada beberapa fungsi tambahan yang ada pada prop navigasi berdasarkan pada jenis navigator saat ini.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li><code>replace<\/code> - Mengganti route saat ini dengan yang baru<\/li>\r\n<li><code>push<\/code> - Mendorong route yang baru<\/li>\r\n<li><code>pop<\/code> - Kembali ke stack sebelumnya<\/li>\r\n<li><code>popToTop<\/code> - Pergi ke bagian atas dari Stack<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Dokumentasi lebih lengkap mengenai Navigation dalam React Navigation bisa dilihat pada halaman berikut ini (<a href=\"https:\/\/reactnavigation.org\/docs\/navigation-prop\/\">https:\/\/reactnavigation.org\/docs\/navigation-prop\/<\/a>)<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:heading --><\/p>\r\n<h2>Deep Linking<\/h2>\r\n<p><!-- \/wp:heading --> <!-- wp:paragraph --><\/p>\r\n<p>Deep Linking adalah penggunaan hyperlink yang digunakan untuk mengintegrasikan antara website dengan Aplikasi yang sudah kita buat. Bagaimana menggunakan Deep Linking dalam React Native ?<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Tambahkan <code>intent-filter<\/code> pada AndroidManifest.xml project Anda<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>&lt;activity\r\n        android:name=\".MainActivity\"\r\n        android:label=\"@string\/app_name\"\r\n        android:configChanges=\"keyboard|keyboardHidden|orientation|screenSize|uiMode\"\r\n        android:launchMode=\"singleTask\" &lt;-- pastikan launchMode \"singleTask\"\r\n        android:windowSoftInputMode=\"adjustResize\"&gt;\r\n        &lt;intent-filter&gt;\r\n            &lt;action android:name=\"android.intent.action.MAIN\" \/&gt;\r\n            &lt;category android:name=\"android.intent.category.LAUNCHER\" \/&gt;\r\n        &lt;\/intent-filter&gt;\r\n        &lt;!-- Tambahkan intent-filter dibawah ini --&gt;\r\n        &lt;intent-filter android:label=\"@string\/app_name\"&gt;\r\n          &lt;action android:name=\"android.intent.action.VIEW\" \/&gt;\r\n          &lt;category android:name=\"android.intent.category.DEFAULT\" \/&gt;\r\n          &lt;category android:name=\"android.intent.category.BROWSABLE\" \/&gt;\r\n          &lt;data android:scheme=\"https\" android:host=\"www.sanbercode.com\" \/&gt;\r\n          &lt;data android:scheme=\"app\" android:host=\"sanbercode\" \/&gt;\r\n        &lt;\/intent-filter&gt;\r\n        &lt;!-- Sampai sini --&gt;\r\n&lt;\/activity&gt;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p><strong>Catatan<\/strong> :<\/p>\r\n<p>nilai <code>android:scheme<\/code> dan <code>android:host<\/code> bisa disesuaikan dengan keinginan Anda<\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:paragraph --><\/p>\r\n<p>Dokumentasi dari Deep Linking bisa Anda lihat pada halaman berikut ini (<a href=\"https:\/\/reactnative.dev\/docs\/linking#addeventlistener\">https:\/\/reactnative.dev\/docs\/linking#addeventlistener<\/a>)<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk contoh penggunaan Deep Linking, Anda bisa lihat dan simak pada video berikut ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:core-embed\/youtube {\"url\":\"https:\/\/youtu.be\/0lAchVNM0xA\",\"type\":\"video\",\"providerNameSlug\":\"youtube\",\"className\":\"wp-embed-aspect-16-9 wp-has-aspect-ratio\"} --><\/p>\r\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\">\r\n<div class=\"wp-block-embed__wrapper\"><iframe src=\"\/\/www.youtube.com\/embed\/0lAchVNM0xA\" width=\"560\" height=\"314\" allowfullscreen=\"allowfullscreen\"><\/iframe><\/div>\r\n<\/figure>\r\n<p><!-- \/wp:core-embed\/youtube --><\/p>","waktu_publish":"2021-01-29 09:30:00","status_publish":"publish","urutan":6,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 16:44:33","updated_at":"2021-01-08 23:40:17","waktu_publish_formatted":" Jumat, 29 Januari 2021. 09:30:00 WIB."}]},{"id":16,"uuid":"8c423611-b372-469e-8741-8bb033f87cb7","materi_id":4,"nama":"Pekan 3 - Tugas","permalink":"pekan-3-tugas","urutan":7,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 13:53:02","updated_at":null,"posting":[{"id":102,"uuid":"ccc97bae-de1a-4771-9150-35325e57c534","author_user_id":11254,"materi_section_id":16,"judul":"Hari 1 - Design Homepage Kekinian","permalink":"hari-1-design-homepage-kekinian","konten":"<p><!-- wp:list --><\/p>\r\n<ul>\r\n<li>Buatlah Tab Navigator pada Navigasi Aplikasi Anda, sehingga nantinya pada halaman utama Aplikasi terdapat 2 Tab yaitu Home dan Account. Untuk tabnya Anda bisa gunakan library berikut <a href=\"https:\/\/reactnavigation.org\/docs\/material-bottom-tab-navigator\/\">ini<\/a><\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Setelah membuat Tab Navigator, buatlah tampilan berikut ini pada Aplikasi Anda<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:image {\"align\":\"center\",\"id\":12505,\"width\":374,\"height\":769,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large is-resized\"><img class=\"wp-image-12505\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/Screenshot_1603980531-498x1024.png\" alt=\"\" width=\"374\" height=\"769\" \/>\r\n<figcaption>Tampilan Home atau Dashboard Aplikasi<\/figcaption>\r\n<\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p><strong>Catatan<\/strong> :<\/p>\r\n<p>Untuk bagian \"<strong>Penggalangan Dana Mendesak<\/strong>\" itu berupa Flatlist yang bisa di scroll secara horizontal<\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Jika sudah membuat halaman atau screen tersebut. Berikan sebuah fungsi pada saat menu \"<strong>Donasi<\/strong>\" ditekan maka akan berpindah halaman ke halaman <strong>Daftar Donasi<\/strong>.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Buatlah halaman Daftar Donasi seperti gambar dibawah ini<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:image {\"align\":\"center\",\"id\":12506,\"width\":365,\"height\":750,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large is-resized\"><img class=\"wp-image-12506\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/Screenshot_1603980791-498x1024.png\" alt=\"\" width=\"365\" height=\"750\" \/>\r\n<figcaption>Tampilan Daftar Donasi pada saat Menu Donasi ditekan<\/figcaption>\r\n<\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Untuk mengisi halaman Daftar Donasi tersebut, lakukan sebuah request ke endpoint berikut ini : <a href=\"https:\/\/crowdfunding.sanberdev.com\/api\/donasi\/daftar-donasi\">https:\/\/crowdfunding.sanberdev.com\/api\/donasi\/daftar-donasi<\/a>. Dan tampilkan response yang didapat dari endpoint tersebut kedalam sebuah <strong>FlatList<\/strong>, sehingga hasil akhirnya seperti gambar tampilan Daftar Donasi diatas.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p><strong>Catatan<\/strong> :<\/p>\r\n<p>Untuk melakukan request ke endpoint tersebut gunakan method \"<strong>GET<\/strong>\" dan jangan lupa untuk menambahkan token pada saat melakukan request<\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Setelah membuat halaman Daftar Donasi, buatlah halaman Detail Donasi sesuai dengan Data Donasi yang dipilih oleh User dari Daftar Donasi. Untuk tampilan Detail Donasi buat seperti gambar dibawah ini<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:image {\"align\":\"center\",\"id\":12509,\"width\":348,\"height\":715,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large is-resized\"><img class=\"wp-image-12509\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/Screenshot_1603981351-498x1024.png\" alt=\"\" width=\"348\" height=\"715\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Jika sudah, berikan sebuah fungsi pada saat Button \"<strong>Donasi Sekarang<\/strong>\" ditekan, maka dia akan menampilkan sebuah tampilan seperti gambar dibawah ini<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:image {\"align\":\"center\",\"id\":12511,\"width\":311,\"height\":639,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large is-resized\"><img class=\"wp-image-12511\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/Screenshot_1603981489-498x1024.png\" alt=\"\" width=\"311\" height=\"639\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Sampai disini Anda sudah berhasil membuat tampilan atau User Interface untuk Menu Donasinya. Dan untuk Payment Gatewaynya ada Di Tugas berikutnya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p><strong>Catatan<\/strong> :<\/p>\r\n<p>Untuk dokumentasi API bisa dilihat pada halaman berikut ini : <a href=\"https:\/\/documenter.getpostman.com\/view\/3620561\/TVejfpbt\" target=\"_blank\" rel=\"noreferrer noopener\">https:\/\/documenter.getpostman.com\/view\/3620561\/TVejfpbt<\/a>. Anda bisa test terlebih dahulu menggunakan Postman.<\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --><\/p>","waktu_publish":"2021-01-25 09:30:00","status_publish":"publish","urutan":1,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 16:45:23","updated_at":"2021-01-08 23:41:59","waktu_publish_formatted":" Senin, 25 Januari 2021. 09:30:00 WIB."},{"id":103,"uuid":"4e038b69-ebd4-4366-a607-e993b5776017","author_user_id":11254,"materi_section_id":16,"judul":"Hari 1 - Payment Gateway","permalink":"hari-1-payment-gateway","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Setelah Anda belajar Payment Gateway, sekarang Anda harus mengimplementasikannya.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":13187,\"width\":332,\"height\":682,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large is-resized\"><img class=\"wp-image-13187\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/Screenshot_1603981489-498x1024.png\" alt=\"\" width=\"332\" height=\"682\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Melanjutkan tugas Design Homepage Kekinian, pada halaman atau screen diatas, buatlah sebuah fungsi pada Button \"Lanjut\", ketika Button tersebut ditekan maka dia akan merequest untuk melakukan pembayaran.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Gunakan endpoint API berikut ini untuk melakukan request pembayaran : <a href=\"https:\/\/crowdfunding.sanberdev.com\/api\/donasi\/generate-midtrans\">https:\/\/crowdfunding.sanberdev.com\/api\/donasi\/generate-midtrans<\/a><\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Jangan lupa untuk menambahkan <code>Body Parameter<\/code> pada saat melakukan request. Dan untuk <code>Body Parameter<\/code> yang dikirim seperti contoh dibawah ini :<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>\"transaction_details\" : {\r\n    \"order_id\" : \"order-12355678\",\r\n    \"gross_amount\" : 125000,\r\n    \"donation_id\" : 1\r\n},\r\n    \"customer_details\" : {\r\n    \"first_name\"    : \"Regi\",\r\n    \"last_name\"     : \"Anugrah\",\r\n    \"email\"         : \"regianugrah@gmail.com\",\r\n    \"phone\"         : \"09283912387\"\r\n}<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p><strong>Catatan<\/strong> :<\/p>\r\n<p>- Untuk <code>order_id<\/code>, pastikan dia bersifat unik.<\/p>\r\n<p>- Untuk <code>customer_details<\/code>, sesuaikan dengan user yang melakukan pembayaran, tidak boleh hardcode atau ditulis manual! Cukup nama dan email saja<\/p>\r\n<p>- untuk <code>gross_amount<\/code>, jumlah nominalnya sesuai yang dipilih oleh user atau inputan manual user!<\/p>\r\n<p>- untuk <code>donation_id<\/code>, didapatkan dari donasi yang dipilih oleh user<\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Selanjutnya, ketika Anda sudah berhasil mendapatkan response dari API tersebut, berikan sebuah action untuk berpindah ke halaman baru dan kirimkan response yang didapatkan ke halaman baru tersebut.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p><strong>Catatan<\/strong> :<\/p>\r\n<p>Untuk kirim parameter ke halaman lain dalam React Navigation bisa di cek pada halaman berikut ini : <a href=\"https:\/\/reactnavigation.org\/docs\/params\/\">https:\/\/reactnavigation.org\/docs\/params\/<\/a><\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Buatlah screen baru khusus untuk Payment, kemudian dihalaman baru tersebut, tambahkan WebView yang sudah diinstall sebelumnya.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Kemudian didalam WebView tersebut tambahkan <code>source<\/code> yang isinya adalah <code>redirect_url<\/code> yang didapatkan dari response API pada halaman sebelumnya<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p><strong>Catatan<\/strong> :<\/p>\r\n<p>Untuk melakukan Testing pembayaran, bisa melalui halaman berikut ini : <a href=\"https:\/\/simulator.sandbox.midtrans.com\/bca\/va\/index\">https:\/\/simulator.sandbox.midtrans.com\/bca\/va\/index<\/a>. Disesuaikan dengan metode pembayaran yang dipilih ya<\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p><strong>Catatan<\/strong> :<\/p>\r\n<p>Untuk dokumentasi API bisa dilihat pada halaman berikut ini : <a href=\"https:\/\/documenter.getpostman.com\/view\/3620561\/TVejfpbt\" target=\"_blank\" rel=\"noreferrer noopener\">https:\/\/documenter.getpostman.com\/view\/3620561\/TVejfpbt<\/a>. Anda bisa test terlebih dahulu menggunakan Postman.<\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --><\/p>","waktu_publish":"2021-01-25 09:30:00","status_publish":"publish","urutan":2,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 16:45:54","updated_at":"2021-01-08 23:43:09","waktu_publish_formatted":" Senin, 25 Januari 2021. 09:30:00 WIB."},{"id":104,"uuid":"8d4704fd-ee45-4891-b6a8-fbe81390ed4a","author_user_id":11254,"materi_section_id":16,"judul":"Hari 2 - GPS Location + Maps (MapBox)","permalink":"hari-2-gps-location-maps-mapbox-","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Setelah Anda mempelajari mengenai GPS Location + Maps, maka selanjutanya Anda harus mengimpelementasikannya, berikut adalah tugasnya<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":12529,\"width\":392,\"height\":807,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large is-resized\"><img class=\"wp-image-12529\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/Screenshot_1604042895-498x1024.png\" alt=\"\" width=\"392\" height=\"807\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Diatas adalah halaman Account yang sudah kita buat menjadi sebuah Tab Navigator. Berikan sebuah fungsi ketika menu \"<strong>Bantuan<\/strong>\" ditekan maka dia akan berpindah ke halaman Bantuan.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Buatlah halaman atau component Bantuan, yang nantinya digunakan untuk menampilkan Maps dari Mapbox. Anda harus membuat tampilannya seperti gambar dibawah ini<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:image {\"align\":\"center\",\"id\":12530,\"width\":346,\"height\":712,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large is-resized\"><img class=\"wp-image-12530\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/Screenshot_1604043117-498x1024.png\" alt=\"\" width=\"346\" height=\"712\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Tampilkan marker dari data berikut ini kedalam Maps<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>const coordinates = [\r\n    [107.580110, -6.890066],\r\n    [106.819449, -6.218465],\r\n    [110.365231, -7.795766]\r\n]<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Jika sudah, berikan sebuah fungsi atau tampilan, ketika marker tersebut ditekan maka akan menampilkan titik coordinat lokasi tersebut sesuai yang dipilih oleh user. Sehingga hasil akhir dari tugas ini seperti gambar dibawah ini<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:image {\"align\":\"center\",\"id\":13428,\"width\":348,\"height\":696,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large is-resized\"><img class=\"wp-image-13428\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/Screenshot_20201116-222359-512x1024.png\" alt=\"\" width=\"348\" height=\"696\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Jika sudah selesai, lakukan push ke repository (<code>git add<\/code>, <code>git commit<\/code>, dan <code>git push<\/code>). Jangan lupa submit link commit Anda ke sanbercode.com.<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-01-26 09:30:00","status_publish":"publish","urutan":3,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 16:46:40","updated_at":"2021-01-08 23:43:39","waktu_publish_formatted":" Selasa, 26 Januari 2021. 09:30:00 WIB."},{"id":105,"uuid":"a741f857-6d1e-4a2b-8ef2-db0b26624a5e","author_user_id":11254,"materi_section_id":16,"judul":"Hari 3 - Chart","permalink":"hari-3-chart","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Setelah Anda mempelajari bagaimana menampilkan Chart atau Grafik dalam React Native, maka selanjutnya Anda harus mengimplementasikannya<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":12505,\"width\":345,\"height\":709,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large is-resized\"><img class=\"wp-image-12505\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/Screenshot_1603980531-498x1024.png\" alt=\"\" width=\"345\" height=\"709\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Gambar diatas adalah halaman utama pada Aplikasi yang sudah kita buat sebelumnya. Berikan sebuah fungsi, ketika menu \"<strong>Statistik<\/strong>\" ditekan maka dia akan berpindah halaman ke halaman Statistik.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Buatlah component baru untuk halaman Statistik yang nantinya digunakan untuk menampilkan grafik atau chart donasi dalam jangka waktu setahun.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Tampilkan data berikut ini kedalam sebuah BarChart<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>const data = [\r\n    { y: 100 },\r\n    { y: 60 },\r\n    { y: 90 },\r\n    { y: 45 },\r\n    { y: 67 },\r\n    { y: 32 },\r\n    { y: 150 },\r\n    { y: 70 },\r\n    { y: 40 },\r\n    { y: 89 },\r\n]<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Sehingga hasil akhirnya seperti gambar dibawah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":12514,\"width\":327,\"height\":672,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large is-resized\"><img class=\"wp-image-12514\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/10\/Screenshot_1603982859-498x1024.png\" alt=\"\" width=\"327\" height=\"672\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Jika sudah selesai, lakukan push ke repository (<code>git add<\/code>, <code>git commit<\/code>, dan <code>git push<\/code>). Jangan lupa submit link commit Anda ke sanbercode.com.<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-01-27 09:30:00","status_publish":"publish","urutan":4,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 16:47:03","updated_at":"2021-01-08 23:45:18","waktu_publish_formatted":" Rabu, 27 Januari 2021. 09:30:00 WIB."},{"id":106,"uuid":"bd818207-0680-4c20-b1e1-004c36c152de","author_user_id":11254,"materi_section_id":16,"judul":"Hari 4 - Realtime Data Management","permalink":"hari-4-realtime-data-management","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Setelah Anda melihat materi Realtime Data Management, berikut adalah tugasnya<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Buatlah sebuah Tab baru dengan nama <strong>Inbox<\/strong>. Sehingga pada halaman utama Aplikasi terdapat 3 buah Tab yaitu Home, Inbox dan Profile. Contohnya seperti gambar dibawah ini<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:image {\"align\":\"center\",\"id\":13059,\"width\":356,\"height\":732,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large is-resized\"><img class=\"wp-image-13059\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/Screenshot_1604912731-498x1024.png\" alt=\"\" width=\"356\" height=\"732\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Setelah itu coba implementasikan yang sudah Anda pelajari pada Video Materi Realtime Data Management pada Tab Inbox yang sudah dibuat<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Sertakan <strong>screenshot<\/strong> firebase database Anda. Letakan pada folder yang sama dengan tugas ini, sebagai bukti bahwa anda sudah berhasil mengerjakan tugas ini. Untuk contoh screenshot bisa dilihat pada gambar dibawah ini<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:image {\"id\":13061,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-13061\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/database-1024x505.jpg\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Jika sudah selesai, lakukan push ke repository (<code>git add<\/code>, <code>git commit<\/code>, dan <code>git push<\/code>). Jangan lupa submit link commit Anda ke sanbercode.com.<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-01-28 09:30:00","status_publish":"publish","urutan":5,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 16:47:36","updated_at":"2021-01-08 23:46:25","waktu_publish_formatted":" Kamis, 28 Januari 2021. 09:30:00 WIB."},{"id":107,"uuid":"21472502-050d-4060-ad7d-2284d51bda6c","author_user_id":11254,"materi_section_id":16,"judul":"Hari 5 - Complex Navigation (React Navigation) + Deep Linking","permalink":"hari-5-complex-navigation-react-navigation-deep-linking","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Setelah kalian mempelajari tentang React Navigation + Deep Linking, Berikut adalah tugas untuk materi kali ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Dalam Halaman Login, berikan action untuk <strong>me-reset<\/strong> navigasi, sehingga ketika user sudah Login maka dia langsung ke <strong>halaman utama Aplikasi<\/strong> dan ketika <strong>menekan tombol kembali<\/strong> maka Aplikasi tertutup(tidak kembali ke halaman Login lagi)<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Berikan aturan pada Navigasi Anda, ketika <strong>User sudah login<\/strong> dan <strong>Aplikasi di close<\/strong> maka ketika Aplikasi dibuka kembali maka langsung ke halaman utama, tidak harus Login lagi<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Dihalaman Account, pada saat menekan button \"Keluar\", rubahlah actionnya ketika berhasil logout atau keluar, maka akan <strong>me-reset<\/strong> navigasinya ke halaman Login. Sehingga ketika berhasil logout dia akan berpindah ke halaman Login, tapi ketika menekan tombol kembali di device itu akan menutup Aplikasinya.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Implementasikan penggunaan Deep Linking pada Aplikasi Anda<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Jika sudah selesai, lakukan push ke repository (<code>git add<\/code>, <code>git commit<\/code>, dan <code>git push<\/code>). Jangan lupa submit link commit Anda ke sanbercode.com.<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-01-29 09:30:00","status_publish":"publish","urutan":6,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 16:48:18","updated_at":"2021-01-08 23:47:35","waktu_publish_formatted":" Jumat, 29 Januari 2021. 09:30:00 WIB."},{"id":108,"uuid":"41de53bd-c12e-4a5b-8766-69c8842b81a5","author_user_id":11254,"materi_section_id":16,"judul":"Hari 6 - Mini Project","permalink":"hari-6-mini-project","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Berikut adalah Fitur yang harus Anda kerjakan pada Mini Project 3 di kelas React Native Project<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"align\":\"center\",\"id\":13624,\"width\":310,\"height\":635,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large is-resized\"><img class=\"wp-image-13624\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/riwayat-498x1024.png\" alt=\"\" width=\"310\" height=\"635\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Diatas adalah halaman Dashboard Aplikasi Crowdfunding yang sudah dibuat sebelumnya. Berikan action pada saat menu \"<strong>Riwayat<\/strong>\" ditekan seperti gambar diatas, maka akan berpindah halaman ke halaman <strong>Riwayat Transaksi<\/strong><\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Buat component baru untuk halaman <strong>Riwayat Transaksi<\/strong>, Jangan lupa update bagian navigasi Anda<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Dalam component <strong>Riwayat Transaksi<\/strong>, lakukan request ke endpoint API berikut ini : <a href=\"https:\/\/crowdfunding.sanberdev.com\/api\/donasi\/riwayat-transaksi\">https:\/\/crowdfunding.sanberdev.com\/api\/donasi\/riwayat-transaksi<\/a>, dan tampilkan response yang didapat dari endpoint tersebut kedalam sebuah <strong>FlatList<\/strong>. Sehingga hasil akhirnya seperti gambar dibawah ini<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:image {\"align\":\"center\",\"id\":13625,\"width\":330,\"height\":679,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large is-resized\"><img class=\"wp-image-13625\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/Screenshot_1605854592-498x1024.png\" alt=\"\" width=\"330\" height=\"679\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p><strong>Catatan<\/strong> :<\/p>\r\n<p>Jika Anda tidak memiliki akun yang pernah digunakan untuk transaksi, Anda bisa gunakan user dibawah ini:<\/p>\r\n<p>Email : zakkymf@gmail.com<\/p>\r\n<p>Password : 123456<\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Kemudian setelah itu, kembali ke halaman Dashboard Aplikasi. Berikan action pada saat menu \"<strong>Bantu<\/strong>\" seperti gambar dibawah ini ditekan, maka akan berpindah ke halaman <strong>Buat Donasi<\/strong><\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:image {\"align\":\"center\",\"id\":13626,\"width\":317,\"height\":652,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large is-resized\"><img class=\"wp-image-13626\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/bantu-498x1024.png\" alt=\"\" width=\"317\" height=\"652\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Buat component baru untuk halaman <strong>Buat Donasi<\/strong> seperti gambar dibawah ini<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:image {\"align\":\"center\",\"id\":13627,\"width\":328,\"height\":673,\"sizeSlug\":\"large\"} --><\/p>\r\n<div class=\"wp-block-image\">\r\n<figure class=\"aligncenter size-large is-resized\"><img class=\"wp-image-13627\" style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/11\/Screenshot_1605855271-498x1024.png\" alt=\"\" width=\"328\" height=\"673\" \/><\/figure>\r\n<\/div>\r\n<p><!-- \/wp:image --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p><strong>Catatan<\/strong> :<\/p>\r\n<p>Untuk bagian dana yang dibutuhkan, Anda bisa gunakan library atau module berikut ini untuk componentnya : <a href=\"https:\/\/github.com\/benhurott\/react-native-masked-text\" target=\"_blank\" rel=\"noreferrer noopener\">https:\/\/github.com\/benhurott\/react-native-masked-text<\/a><\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Berikan sebuah fungsi pada saat button \"<strong>Pilih Gambar<\/strong>\" ditekan, maka akan membuka Camera atau menjalankan module React Native Camera<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Didalam component Camera tersebut, buatlah sebuah button dan berikan sebuah fungsi untuk mengambil gambar dari camera tersebut. Kemudian tampilkan hasil tangkapan gambar tersebut di halaman <strong>Buat Donasi<\/strong><\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Jika sudah, Buatlah fungsi pada saat button \"<strong>Buat<\/strong>\" ditekan maka akan melakukan request ke endpoint berikut ini : <a href=\"https:\/\/crowdfunding.sanberdev.com\/api\/donasi\/tambah-donasi\">https:\/\/crowdfunding.sanberdev.com\/api\/donasi\/tambah-donasi<\/a>, dengan menambahkan <code>title<\/code>, <code>description<\/code>, <code>donation<\/code> dan <code>photo<\/code> sebagai <strong>Body Parameter<\/strong><\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Masih pada fungsi button \"<strong>Buat<\/strong>\", berikan sebuah action jika request atau input data berhasil akan menampilkan Alert yang menyatakan bahwa \"<strong>Donasi Baru berhasil ditambahkan<\/strong>\" sedangkan jika request gagal, maka akan menampilkan sebuah keterangan Error.<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p><strong>Catatan<\/strong> :<\/p>\r\n<p>Untuk API Documentation bisa dilihat pada halaman berikut ini :<\/p>\r\n<p><a href=\"https:\/\/documenter.getpostman.com\/view\/3620561\/TVejfpbt\" target=\"_blank\" rel=\"noreferrer noopener\">https:\/\/documenter.getpostman.com\/view\/3620561\/TVejfpbt<\/a><\/p>\r\n<p>Anda bisa testing terlebih dahulu menggunakan Postman<\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:paragraph --><\/p>\r\n<p>Jika sudah selesai, lakukan push ke repository (<code>git add<\/code>, <code>git commit<\/code>, dan <code>git push<\/code>). Jangan lupa submit link commit Anda ke sanbercode.com.<\/p>\r\n<p><!-- \/wp:paragraph --><\/p>","waktu_publish":"2021-01-30 09:30:00","status_publish":"publish","urutan":7,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 16:48:48","updated_at":"2021-01-08 23:47:47","waktu_publish_formatted":" Sabtu, 30 Januari 2021. 09:30:00 WIB."}]},{"id":17,"uuid":"126992a2-2e53-4682-8393-16b9e2751ce7","materi_id":4,"nama":"Pekan 4 - Materi","permalink":"pekan-4-materi","urutan":8,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 13:53:15","updated_at":null,"posting":[{"id":117,"uuid":"f73f0801-34f9-4dd3-a24e-16bc2d201ce1","author_user_id":11254,"materi_section_id":17,"judul":"Hari 1 - Push Notification","permalink":"hari-1-push-notification","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Pada hari pertama Pekan-4 ini, Anda akan mempelajari tentang Push Notification dalam React Native<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Push Notification adalah saluran komunikasi yang dibangun ke setiap mobile device atau website. Push Notification juga memungkinkan aplikasi untuk menjangkau pengguna dengan pesan singkat yang dapat ditanggapi oleh pengguna.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Berikut ini adalah yang dibutuhkan untuk Mengikuti Materi Kali ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>React Native One Signal<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk menginstall atau menambahkan module React Native One Signal, Anda bisa gunakan perintah dibawah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>npm install --save react-native-onesignal<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Setelah menambahkan atau menginstall modulenya, lakukan pendaftaran pada halaman berikut ini (<a href=\"https:\/\/app.onesignal.com\/signup\">https:\/\/app.onesignal.com\/signup#<\/a>)<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Kemudian setelah berhasil melakukan pendaftaran, Anda akan menemukan halaman seperti gambar dibawah ini.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":8642,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-8642\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/one_signal1-1024x506.jpg\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Isi name app or website dengan nama Project Anda, lebih disarankan mengisi dengan <strong>Nama-Sanbercode<\/strong>. Kemudian pilih <strong>Google Android<\/strong>. Jika sudah Klik Button <strong>Next: Configure Your Platform<\/strong>. Setelah itu Anda akan dialihkan ke halaman seperti dibawah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":8643,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-8643\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/one_signal2-1024x502.jpg\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Anda akan diminta memasukan <strong>Firebase Server Key<\/strong> dan <strong>Firebase Sender ID<\/strong>. Untuk mendapatkannya Anda perlu membuka Project Firebase anda pada halaman berikut ini (<a href=\"https:\/\/firebase.google.com\/\">https:\/\/firebase.google.com\/<\/a>). Kemudian Pilih Project Anda -&gt; <strong>Settings<\/strong> -&gt; <strong>Cloud Messaging<\/strong>, seperti pada gambar dibawah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":8644,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-8644\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/fb_onesignal-1024x506.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Copy <strong>Kunci Server<\/strong> dan <strong>ID Pengirim<\/strong> dari Firebase Project Anda, kemudian Paste pada One Signal yang sebelumnya. Kemudian Klik <strong>Next<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":8645,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-8645\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/one_signal3-1024x503.jpg\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Selanjutnya pilih <strong>React Native<\/strong> seperti pada gambar diatas, lalu klik <strong>Next<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":8647,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-8647\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/one_signal4-1024x501.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>Copy <strong>Your App ID<\/strong> seperti gambar diatas, Jika sudah Anda harus lakukan Konfigurasi module One Signal pada project Anda. Lakukan pengecekan pada file <code>AndroidManifest.xml<\/code> seperti berikut ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>&lt;activity\r\n        android:name=\".MainActivity\"\r\n        android:label=\"@string\/app_name\"\r\n   android:configChanges=\"keyboard|keyboardHidden|orientation|screenSize|uiMode\"\r\n        android:launchMode=\"singleTask\" &lt;-- Cek bagian ini saja, pastikan nilainya \"singleTask\"\r\n        android:windowSoftInputMode=\"adjustResize\"&gt;\r\n        &lt;intent-filter&gt;\r\n            &lt;action android:name=\"android.intent.action.MAIN\" \/&gt;\r\n            &lt;category android:name=\"android.intent.category.LAUNCHER\" \/&gt;\r\n        &lt;\/intent-filter&gt;\r\n        &lt;intent-filter android:label=\"@string\/app_name\"&gt;\r\n          &lt;action android:name=\"android.intent.action.VIEW\" \/&gt;\r\n          &lt;category android:name=\"android.intent.category.DEFAULT\" \/&gt;\r\n          &lt;category android:name=\"android.intent.category.BROWSABLE\" \/&gt;\r\n          &lt;data android:scheme=\"https\" android:host=\"www.sanbercode.com\" \/&gt;\r\n          &lt;data android:scheme=\"app\" android:host=\"sanbercode\" \/&gt;\r\n        &lt;\/intent-filter&gt;\r\n      &lt;\/activity&gt;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Kemudian tambahkan ini pada <code>android\/app\/build.gradle<\/code> Project Anda, tempatkan pada <strong>line Paling Atas<\/strong><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>buildscript {\r\n    repositories {\r\n        maven { url 'https:\/\/plugins.gradle.org\/m2\/' } \/\/ Gradle Plugin Portal \r\n    }\r\n    dependencies {\r\n        classpath 'gradle.plugin.com.onesignal:onesignal-gradle-plugin:[0.12.6, 0.99.99]'\r\n    }\r\n}\r\n\r\napply plugin: 'com.onesignal.androidsdk.onesignal-gradle-plugin'\r\n<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Kemudian, untuk menggunakan atau menginisialisasikan OneSignal tambahkan ini pada file App.js yang ada pada Root Project Anda<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>useEffect(() =&gt; {\r\n    OneSignal.setLogLevel(6, 0);\r\n\r\n    OneSignal.init(\"YOUR-APP-ID\", {kOSSettingsKeyAutoPrompt : false, kOSSettingsKeyInAppLaunchURL: false, kOSSettingsKeyInFocusDisplayOption:2});\r\n    OneSignal.inFocusDisplaying(2);\r\n}, [])<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p>Catatan:<\/p>\r\n<p>Ganti <code>Your-App-ID<\/code> sesuai dengan App ID yang Anda dapatkan tadi di Onesignal Website. Jangan lupa import module One Signal!<\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:paragraph --><\/p>\r\n<p>Dokumentasi lebih lanjut mengenai React Native One Signal bisa dilihat pada halaman berikut ini (<a href=\"https:\/\/documentation.onesignal.com\/docs\/react-native-sdk-setup\">https:\/\/documentation.onesignal.com\/docs\/react-native-sdk-setup<\/a>)<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk lebih detail mengenai Push Notification menggunakan One Signal, Anda bisa lihat video berikut ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:core-embed\/youtube {\"url\":\"https:\/\/youtu.be\/g8Axka6ibZ4\",\"type\":\"video\",\"providerNameSlug\":\"youtube\",\"className\":\"wp-embed-aspect-16-9 wp-has-aspect-ratio\"} --><\/p>\r\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\">\r\n<div class=\"wp-block-embed__wrapper\"><iframe src=\"\/\/www.youtube.com\/embed\/g8Axka6ibZ4\" width=\"560\" height=\"314\" allowfullscreen=\"allowfullscreen\"><\/iframe><\/div>\r\n<\/figure>\r\n<p><!-- \/wp:core-embed\/youtube --><\/p>","waktu_publish":"2021-02-01 09:30:00","status_publish":"publish","urutan":1,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 17:02:46","updated_at":"2021-01-08 23:49:36","waktu_publish_formatted":" Senin, 01 Februari 2021. 09:30:00 WIB."},{"id":119,"uuid":"982763f8-36fa-4d55-80ad-4c3a3c81c6fe","author_user_id":11254,"materi_section_id":17,"judul":"Hari 2 - CodePush","permalink":"hari-2-codepush","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>CodePush adalah <em>open-source service <\/em>yang dibuat oleh Microsoft untuk mempermudah pengembang aplikasi <em>mobile <\/em>untuk memperbaharui aplikasinya tanpa Google Play.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Sebelumnya Anda harus menginstall <code>code-push-cli<\/code> terlebih dahulu, agar bisa digunakan di terminal atau cmd. Gunakan perintah dibawah ini untuk meginstall <code>code-push-cli<\/code><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>npm install -g code-push-cli<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Selanjutnya, Anda diminta untuk menginstall library <code>react-native-codepush<\/code>. Untuk menginstall library nya, Anda bisa gunakan perintah dibawah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>npm install --save react-native-code-push<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>Selanjutnya Anda harus melakukan konfigurasi library <code>react-native-codepush<\/code>.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>1. Didalam file <code>android\/settings.gradle<\/code>, lakukan penambahan berikut ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>include ':app', ':react-native-code-push'\r\nproject(':react-native-code-push').projectDir = new File(rootProject.projectDir, '..\/node_modules\/react-native-code-push\/android\/app')<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>2. Di file <code>android\/app\/build.gradle<\/code> Anda, tambahkan file <code>codepush.gradle<\/code> di bawah <code>react.gradle<\/code>:<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>....\r\napply from: \"..\/..\/node_modules\/react-native\/react.gradle\"\r\napply from: \"..\/..\/node_modules\/react-native-code-push\/android\/codepush.gradle\"\r\n....<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>3. Update <code>MainApplication.java<\/code> untuk menggunakan Codepush seperti berikut ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>...\r\n\/\/ 1. Import the plugin class.\r\nimport com.microsoft.codepush.react.CodePush;\r\n\r\npublic class MainApplication extends Application implements ReactApplication {\r\n\r\n    private final ReactNativeHost mReactNativeHost = new ReactNativeHost(this) {\r\n        ...\r\n\r\n        \/\/ 2. Override the getJSBundleFile method in order to let\r\n        \/\/ the CodePush runtime determine where to get the JS\r\n        \/\/ bundle location from on each app start\r\n        @Override\r\n        protected String getJSBundleFile() {\r\n            return CodePush.getJSBundleFile();\r\n        }\r\n    };\r\n}<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>4. Jika Anda belum memiliki account CodePush, kamu perlu mendaftar dahulu dengan perintah berikut.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>code-push register<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:paragraph --><\/p>\r\n<p>5. Setelah registrasi selesai, kita bisa mulai menambahkan aplikasi ke CodePush dengan perintah berikut.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>code-push app add Sanbercode android react-native<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p>Catatan:<\/p>\r\n<p>Sanbercode bisa diganti sesuai keinginan Anda, tidak harus sama seperti materi<\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:paragraph --><\/p>\r\n<p>6. Selanjutnya Anda akan menerima Key, seperti gambar dibawah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:image {\"id\":8672,\"sizeSlug\":\"large\"} --><\/p>\r\n<figure class=\"wp-block-image size-large\"><img class=\"wp-image-8672\" src=\"https:\/\/blog.sanbercode.com\/wp-content\/uploads\/2020\/08\/key-1-1024x215.png\" alt=\"\" \/><\/figure>\r\n<p><!-- \/wp:image --> <!-- wp:paragraph --><\/p>\r\n<p>7. Kemudian, Copy Deployment Key Staging, lalu tambahkan code berikut ini pada file <code>strings.xml<\/code> setelah app_name<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:code --><\/p>\r\n<pre class=\"wp-block-code\"><code>&lt;string moduleConfig=\"true\" name=\"CodePushDeploymentKey\"&gt;DeploymentKey&lt;\/string&gt;<\/code><\/pre>\r\n<p><!-- \/wp:code --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p>Catatan:<\/p>\r\n<p>Ganti <code>DeploymentKey<\/code> sesuai Key yang Anda dapatkan saat menambahkan Aplikasi ke Codepush<\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:paragraph --><\/p>\r\n<p>Dokumentasi lebih lanjut tentang CodePush bisa dilihat pada halaman berikut ini (<a href=\"https:\/\/github.com\/microsoft\/react-native-code-push\">https:\/\/github.com\/microsoft\/react-native-code-push<\/a>)<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Untuk lebih lanjut mengenai Codepush, Anda bisa lihat pada video dibawah ini<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:core-embed\/youtube {\"url\":\"https:\/\/youtu.be\/fToIqbNfApo\",\"type\":\"video\",\"providerNameSlug\":\"youtube\",\"className\":\"wp-embed-aspect-16-9 wp-has-aspect-ratio\"} --><\/p>\r\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\">\r\n<div class=\"wp-block-embed__wrapper\"><iframe src=\"\/\/www.youtube.com\/embed\/fToIqbNfApo\" width=\"560\" height=\"314\" allowfullscreen=\"allowfullscreen\"><\/iframe><\/div>\r\n<\/figure>\r\n<p><!-- \/wp:core-embed\/youtube --><\/p>","waktu_publish":"2021-02-02 09:30:00","status_publish":"publish","urutan":2,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 17:03:09","updated_at":"2021-01-08 23:49:54","waktu_publish_formatted":" Selasa, 02 Februari 2021. 09:30:00 WIB."}]},{"id":18,"uuid":"a718ce65-afc6-42d9-b116-f771a5b5ee6e","materi_id":4,"nama":"Pekan 4 - Tugas","permalink":"pekan-4-tugas","urutan":9,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 13:53:25","updated_at":null,"posting":[{"id":120,"uuid":"a921dc8b-2372-45a5-b742-061dcd613e32","author_user_id":11254,"materi_section_id":18,"judul":"Hari 1 - Push Notification","permalink":"hari-1-push-notification","konten":"<p>Coba implementasikan Push Notification pada Project Anda dan Pelajari lagi tentang Push Notification.<\/p>\r\n<p>Tidak ada tugas yang harus dikumpulkan untuk Pekan-4<\/p>","waktu_publish":"2021-02-01 09:30:00","status_publish":"publish","urutan":1,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 17:03:40","updated_at":"2021-01-08 23:50:17","waktu_publish_formatted":" Senin, 01 Februari 2021. 09:30:00 WIB."},{"id":121,"uuid":"c9fd7ce1-67ad-4bfd-ae38-efe7cce9c11f","author_user_id":11254,"materi_section_id":18,"judul":"Hari 2 - CodePush","permalink":"hari-2-codepush","konten":"<p>Coba implementasikan CodePush pada Project Anda dan Pelajari lagi tentang CodePush.<\/p>\r\n<p>Tidak ada tugas yang harus dikumpulkan untuk Pekan-4<\/p>","waktu_publish":"2021-02-02 09:30:00","status_publish":"publish","urutan":2,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 17:04:04","updated_at":"2021-01-08 23:50:30","waktu_publish_formatted":" Selasa, 02 Februari 2021. 09:30:00 WIB."},{"id":123,"uuid":"aeb18c68-3717-483c-ba28-bf8caf0838ca","author_user_id":11254,"materi_section_id":18,"judul":"Hari 3 - Final Project","permalink":"hari-3-final-project","konten":"<p><!-- wp:paragraph --><\/p>\r\n<p>Setelah Anda Mempelajari semua Materi yang sudah diberikan, hari ini masuk pada Final Project.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Dan pada Final Project kali ini, Anda diminta untuk memperbaiki, menambahkan fitur (bagi yang tugasnya belum) berdasarkan Materi ataupun Tugas yang sudah diberikan. Semua fitur akan diperiksa, jadi pastikan Aplikasi yang sudah Anda buat berfungsi dengan baik dan tidak terjadi Error ataupun Crash.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Contoh Kasus :<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:list --><\/p>\r\n<ul>\r\n<li>Jika pada fitur Payment Gateway masih terjadi error, coba diperbaiki sampai selesai<\/li>\r\n<li>Error yang belum di handle pada saat request ke API<\/li>\r\n<li>Handling Image User pada saat login menggunakan JWT, Google, atupun Fingerprint<\/li>\r\n<li>User Interface yang masih berantakan<\/li>\r\n<li>Handling form input jika tidak diisi<\/li>\r\n<\/ul>\r\n<p><!-- \/wp:list --> <!-- wp:paragraph --><\/p>\r\n<p>Contoh kasus diatas harus Anda perbaiki sehingga pada Aplikasi Anda tidak terjadi error dan tidak membingungkan Trainer pada saat melakukan pemeriksaan<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p><strong>Catatan<\/strong> :<\/p>\r\n<p>Pastikan tidak ada fitur yang terlewat, termasuk fitur yang dikerjakan pada Mini Project.<\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --> <!-- wp:paragraph --><\/p>\r\n<p>Kemudian, jika Aplikasi Anda sudah diperbaiki dan sudah dilakukan pengetesan, selanjutnya Anda harus membuat sebuah Video Demo Aplikasi tersebut. Coba Anda jelaskan fitur apa saja yang Ada di Aplikasi Anda (fitur yang selesai Anda kerjakan), jelaskan juga Fitur apa saja yang sudah diperbaiki.<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Jika sudah, Build Aplikasi Anda ke Release Version atau Production Version. Bagi yang masih belum mengerti bagaimana caranya Build Release Version atau Production Version Anda bisa lihat pada halaman berikut ini (<a href=\"https:\/\/reactnative.dev\/docs\/signed-apk-android\">Publishing to Google Play Store &middot; React Native<\/a>)<\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:paragraph --><\/p>\r\n<p>Kemudian, Upload File APK yang didapatkan pada saat Build beserta Video Demo Aplikasi Anda ke Google Drive. Jangan lupa inputkan link Google Drive Anda ke web <a href=\"\/\" target=\"_blank\" rel=\"noreferrer noopener\">sanbercode.com<\/a><\/p>\r\n<p><!-- \/wp:paragraph --> <!-- wp:quote --><\/p>\r\n<blockquote class=\"wp-block-quote\">\r\n<p><strong>Catatan<\/strong> :<\/p>\r\n<p>Pastikan Trainer bisa mengakses hasil pekerjaan Anda di Google Drive<\/p>\r\n<\/blockquote>\r\n<p><!-- \/wp:quote --><\/p>","waktu_publish":"2021-02-03 09:30:00","status_publish":"publish","urutan":3,"created_by":11254,"updated_by":11254,"created_at":"2020-12-04 17:04:29","updated_at":"2021-01-08 23:50:45","waktu_publish_formatted":" Rabu, 03 Februari 2021. 09:30:00 WIB."}]}],"list_kelas":[{"id":4,"uuid":"7b02dbd7-9690-4127-8f9c-8d8d8afd216f","kategori_kelas_id":14,"versi":"1.0.0","created_by":11254,"updated_by":11254,"created_at":"2020-12-04 13:18:36","updated_at":null}],"is_done":1}